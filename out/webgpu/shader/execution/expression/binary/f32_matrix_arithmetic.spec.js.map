{"version":3,"file":"f32_matrix_arithmetic.spec.js","names":["description","makeTestGroup","GPUTest","TypeF32","TypeMat","additionMatrixInterval","subtractionMatrixInterval","multiplicationMatrixScalarInterval","multiplicationScalarMatrixInterval","sparseF32Range","sparseMatrixF32Range","makeCaseCache","allInputSources","generateMatrixPairToMatrixCases","generateMatrixScalarToMatrixCases","generateScalarMatrixToMatrixCases","run","binary","g","d","addition_2x2_const","addition_2x2_non_const","addition_2x3_const","addition_2x3_non_const","addition_2x4_const","addition_2x4_non_const","addition_3x2_const","addition_3x2_non_const","addition_3x3_const","addition_3x3_non_const","addition_3x4_const","addition_3x4_non_const","addition_4x2_const","addition_4x2_non_const","addition_4x3_const","addition_4x3_non_const","addition_4x4_const","addition_4x4_non_const","multiplication_2x2_scalar_const","multiplication_2x2_scalar_non_const","multiplication_2x3_scalar_const","multiplication_2x3_scalar_non_const","multiplication_2x4_scalar_const","multiplication_2x4_scalar_non_const","multiplication_3x2_scalar_const","multiplication_3x2_scalar_non_const","multiplication_3x3_scalar_const","multiplication_3x3_scalar_non_const","multiplication_3x4_scalar_const","multiplication_3x4_scalar_non_const","multiplication_4x2_scalar_const","multiplication_4x2_scalar_non_const","multiplication_4x3_scalar_const","multiplication_4x3_scalar_non_const","multiplication_4x4_scalar_const","multiplication_4x4_scalar_non_const","multiplication_scalar_2x2_const","multiplication_scalar_2x2_non_const","multiplication_scalar_2x3_const","multiplication_scalar_2x3_non_const","multiplication_scalar_2x4_const","multiplication_scalar_2x4_non_const","multiplication_scalar_3x2_const","multiplication_scalar_3x2_non_const","multiplication_scalar_3x3_const","multiplication_scalar_3x3_non_const","multiplication_scalar_3x4_const","multiplication_scalar_3x4_non_const","multiplication_scalar_4x2_const","multiplication_scalar_4x2_non_const","multiplication_scalar_4x3_const","multiplication_scalar_4x3_non_const","multiplication_scalar_4x4_const","multiplication_scalar_4x4_non_const","subtraction_2x2_const","subtraction_2x2_non_const","subtraction_2x3_const","subtraction_2x3_non_const","subtraction_2x4_const","subtraction_2x4_non_const","subtraction_3x2_const","subtraction_3x2_non_const","subtraction_3x3_const","subtraction_3x3_non_const","subtraction_3x4_const","subtraction_3x4_non_const","subtraction_4x2_const","subtraction_4x2_non_const","subtraction_4x3_const","subtraction_4x3_non_const","subtraction_4x4_const","subtraction_4x4_non_const","test","specURL","desc","params","u","combine","fn","t","cols","rows","cases","get","inputSource"],"sources":["../../../../../../src/webgpu/shader/execution/expression/binary/f32_matrix_arithmetic.spec.ts"],"sourcesContent":["export const description = `\nExecution Tests for the f32 matrix arithmetic binary expression operations\n`;\n\nimport { makeTestGroup } from '../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../gpu_test.js';\nimport { TypeF32, TypeMat } from '../../../../util/conversion.js';\nimport {\n  additionMatrixInterval,\n  subtractionMatrixInterval,\n  multiplicationMatrixScalarInterval,\n  multiplicationScalarMatrixInterval,\n} from '../../../../util/f32_interval.js';\nimport { sparseF32Range, sparseMatrixF32Range } from '../../../../util/math.js';\nimport { makeCaseCache } from '../case_cache.js';\nimport {\n  allInputSources,\n  generateMatrixPairToMatrixCases,\n  generateMatrixScalarToMatrixCases,\n  generateScalarMatrixToMatrixCases,\n  run,\n} from '../expression.js';\n\nimport { binary } from './binary.js';\n\nexport const g = makeTestGroup(GPUTest);\n\nexport const d = makeCaseCache('binary/f32_matrix_arithmetic', {\n  addition_2x2_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(2, 2),\n      sparseMatrixF32Range(2, 2),\n      'f32-only',\n      additionMatrixInterval\n    );\n  },\n  addition_2x2_non_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(2, 2),\n      sparseMatrixF32Range(2, 2),\n      'unfiltered',\n      additionMatrixInterval\n    );\n  },\n  addition_2x3_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(2, 3),\n      sparseMatrixF32Range(2, 3),\n      'f32-only',\n      additionMatrixInterval\n    );\n  },\n  addition_2x3_non_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(2, 3),\n      sparseMatrixF32Range(2, 3),\n      'unfiltered',\n      additionMatrixInterval\n    );\n  },\n  addition_2x4_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(2, 4),\n      sparseMatrixF32Range(2, 4),\n      'f32-only',\n      additionMatrixInterval\n    );\n  },\n  addition_2x4_non_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(2, 4),\n      sparseMatrixF32Range(2, 4),\n      'unfiltered',\n      additionMatrixInterval\n    );\n  },\n  addition_3x2_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(3, 2),\n      sparseMatrixF32Range(3, 2),\n      'f32-only',\n      additionMatrixInterval\n    );\n  },\n  addition_3x2_non_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(3, 2),\n      sparseMatrixF32Range(3, 2),\n      'unfiltered',\n      additionMatrixInterval\n    );\n  },\n  addition_3x3_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(3, 3),\n      sparseMatrixF32Range(3, 3),\n      'f32-only',\n      additionMatrixInterval\n    );\n  },\n  addition_3x3_non_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(3, 3),\n      sparseMatrixF32Range(3, 3),\n      'unfiltered',\n      additionMatrixInterval\n    );\n  },\n  addition_3x4_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(3, 4),\n      sparseMatrixF32Range(3, 4),\n      'f32-only',\n      additionMatrixInterval\n    );\n  },\n  addition_3x4_non_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(3, 4),\n      sparseMatrixF32Range(3, 4),\n      'unfiltered',\n      additionMatrixInterval\n    );\n  },\n  addition_4x2_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(4, 2),\n      sparseMatrixF32Range(4, 2),\n      'f32-only',\n      additionMatrixInterval\n    );\n  },\n  addition_4x2_non_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(4, 2),\n      sparseMatrixF32Range(4, 2),\n      'unfiltered',\n      additionMatrixInterval\n    );\n  },\n  addition_4x3_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(4, 3),\n      sparseMatrixF32Range(4, 3),\n      'f32-only',\n      additionMatrixInterval\n    );\n  },\n  addition_4x3_non_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(4, 3),\n      sparseMatrixF32Range(4, 3),\n      'unfiltered',\n      additionMatrixInterval\n    );\n  },\n  addition_4x4_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(4, 4),\n      sparseMatrixF32Range(4, 4),\n      'f32-only',\n      additionMatrixInterval\n    );\n  },\n  addition_4x4_non_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(4, 4),\n      sparseMatrixF32Range(4, 4),\n      'unfiltered',\n      additionMatrixInterval\n    );\n  },\n  multiplication_2x2_scalar_const: () => {\n    return generateMatrixScalarToMatrixCases(\n      sparseMatrixF32Range(2, 2),\n      sparseF32Range(),\n      'f32-only',\n      multiplicationMatrixScalarInterval\n    );\n  },\n  multiplication_2x2_scalar_non_const: () => {\n    return generateMatrixScalarToMatrixCases(\n      sparseMatrixF32Range(2, 2),\n      sparseF32Range(),\n      'unfiltered',\n      multiplicationMatrixScalarInterval\n    );\n  },\n  multiplication_2x3_scalar_const: () => {\n    return generateMatrixScalarToMatrixCases(\n      sparseMatrixF32Range(2, 3),\n      sparseF32Range(),\n      'f32-only',\n      multiplicationMatrixScalarInterval\n    );\n  },\n  multiplication_2x3_scalar_non_const: () => {\n    return generateMatrixScalarToMatrixCases(\n      sparseMatrixF32Range(2, 3),\n      sparseF32Range(),\n      'unfiltered',\n      multiplicationMatrixScalarInterval\n    );\n  },\n  multiplication_2x4_scalar_const: () => {\n    return generateMatrixScalarToMatrixCases(\n      sparseMatrixF32Range(2, 4),\n      sparseF32Range(),\n      'f32-only',\n      multiplicationMatrixScalarInterval\n    );\n  },\n  multiplication_2x4_scalar_non_const: () => {\n    return generateMatrixScalarToMatrixCases(\n      sparseMatrixF32Range(2, 4),\n      sparseF32Range(),\n      'unfiltered',\n      multiplicationMatrixScalarInterval\n    );\n  },\n  multiplication_3x2_scalar_const: () => {\n    return generateMatrixScalarToMatrixCases(\n      sparseMatrixF32Range(3, 2),\n      sparseF32Range(),\n      'f32-only',\n      multiplicationMatrixScalarInterval\n    );\n  },\n  multiplication_3x2_scalar_non_const: () => {\n    return generateMatrixScalarToMatrixCases(\n      sparseMatrixF32Range(3, 2),\n      sparseF32Range(),\n      'unfiltered',\n      multiplicationMatrixScalarInterval\n    );\n  },\n  multiplication_3x3_scalar_const: () => {\n    return generateMatrixScalarToMatrixCases(\n      sparseMatrixF32Range(3, 3),\n      sparseF32Range(),\n      'f32-only',\n      multiplicationMatrixScalarInterval\n    );\n  },\n  multiplication_3x3_scalar_non_const: () => {\n    return generateMatrixScalarToMatrixCases(\n      sparseMatrixF32Range(3, 3),\n      sparseF32Range(),\n      'unfiltered',\n      multiplicationMatrixScalarInterval\n    );\n  },\n  multiplication_3x4_scalar_const: () => {\n    return generateMatrixScalarToMatrixCases(\n      sparseMatrixF32Range(3, 4),\n      sparseF32Range(),\n      'f32-only',\n      multiplicationMatrixScalarInterval\n    );\n  },\n  multiplication_3x4_scalar_non_const: () => {\n    return generateMatrixScalarToMatrixCases(\n      sparseMatrixF32Range(3, 4),\n      sparseF32Range(),\n      'unfiltered',\n      multiplicationMatrixScalarInterval\n    );\n  },\n  multiplication_4x2_scalar_const: () => {\n    return generateMatrixScalarToMatrixCases(\n      sparseMatrixF32Range(4, 2),\n      sparseF32Range(),\n      'f32-only',\n      multiplicationMatrixScalarInterval\n    );\n  },\n  multiplication_4x2_scalar_non_const: () => {\n    return generateMatrixScalarToMatrixCases(\n      sparseMatrixF32Range(4, 2),\n      sparseF32Range(),\n      'unfiltered',\n      multiplicationMatrixScalarInterval\n    );\n  },\n  multiplication_4x3_scalar_const: () => {\n    return generateMatrixScalarToMatrixCases(\n      sparseMatrixF32Range(4, 3),\n      sparseF32Range(),\n      'f32-only',\n      multiplicationMatrixScalarInterval\n    );\n  },\n  multiplication_4x3_scalar_non_const: () => {\n    return generateMatrixScalarToMatrixCases(\n      sparseMatrixF32Range(4, 3),\n      sparseF32Range(),\n      'unfiltered',\n      multiplicationMatrixScalarInterval\n    );\n  },\n  multiplication_4x4_scalar_const: () => {\n    return generateMatrixScalarToMatrixCases(\n      sparseMatrixF32Range(4, 4),\n      sparseF32Range(),\n      'f32-only',\n      multiplicationMatrixScalarInterval\n    );\n  },\n  multiplication_4x4_scalar_non_const: () => {\n    return generateMatrixScalarToMatrixCases(\n      sparseMatrixF32Range(4, 4),\n      sparseF32Range(),\n      'unfiltered',\n      multiplicationMatrixScalarInterval\n    );\n  },\n\n  multiplication_scalar_2x2_const: () => {\n    return generateScalarMatrixToMatrixCases(\n      sparseF32Range(),\n      sparseMatrixF32Range(2, 2),\n      'f32-only',\n      multiplicationScalarMatrixInterval\n    );\n  },\n  multiplication_scalar_2x2_non_const: () => {\n    return generateScalarMatrixToMatrixCases(\n      sparseF32Range(),\n      sparseMatrixF32Range(2, 2),\n      'unfiltered',\n      multiplicationScalarMatrixInterval\n    );\n  },\n  multiplication_scalar_2x3_const: () => {\n    return generateScalarMatrixToMatrixCases(\n      sparseF32Range(),\n      sparseMatrixF32Range(2, 3),\n      'f32-only',\n      multiplicationScalarMatrixInterval\n    );\n  },\n  multiplication_scalar_2x3_non_const: () => {\n    return generateScalarMatrixToMatrixCases(\n      sparseF32Range(),\n      sparseMatrixF32Range(2, 3),\n      'unfiltered',\n      multiplicationScalarMatrixInterval\n    );\n  },\n  multiplication_scalar_2x4_const: () => {\n    return generateScalarMatrixToMatrixCases(\n      sparseF32Range(),\n      sparseMatrixF32Range(2, 4),\n      'f32-only',\n      multiplicationScalarMatrixInterval\n    );\n  },\n  multiplication_scalar_2x4_non_const: () => {\n    return generateScalarMatrixToMatrixCases(\n      sparseF32Range(),\n      sparseMatrixF32Range(2, 4),\n      'unfiltered',\n      multiplicationScalarMatrixInterval\n    );\n  },\n  multiplication_scalar_3x2_const: () => {\n    return generateScalarMatrixToMatrixCases(\n      sparseF32Range(),\n      sparseMatrixF32Range(3, 2),\n      'f32-only',\n      multiplicationScalarMatrixInterval\n    );\n  },\n  multiplication_scalar_3x2_non_const: () => {\n    return generateScalarMatrixToMatrixCases(\n      sparseF32Range(),\n      sparseMatrixF32Range(3, 2),\n      'unfiltered',\n      multiplicationScalarMatrixInterval\n    );\n  },\n  multiplication_scalar_3x3_const: () => {\n    return generateScalarMatrixToMatrixCases(\n      sparseF32Range(),\n      sparseMatrixF32Range(3, 3),\n      'f32-only',\n      multiplicationScalarMatrixInterval\n    );\n  },\n  multiplication_scalar_3x3_non_const: () => {\n    return generateScalarMatrixToMatrixCases(\n      sparseF32Range(),\n      sparseMatrixF32Range(3, 3),\n      'unfiltered',\n      multiplicationScalarMatrixInterval\n    );\n  },\n  multiplication_scalar_3x4_const: () => {\n    return generateScalarMatrixToMatrixCases(\n      sparseF32Range(),\n      sparseMatrixF32Range(3, 4),\n      'f32-only',\n      multiplicationScalarMatrixInterval\n    );\n  },\n  multiplication_scalar_3x4_non_const: () => {\n    return generateScalarMatrixToMatrixCases(\n      sparseF32Range(),\n      sparseMatrixF32Range(3, 4),\n      'unfiltered',\n      multiplicationScalarMatrixInterval\n    );\n  },\n  multiplication_scalar_4x2_const: () => {\n    return generateScalarMatrixToMatrixCases(\n      sparseF32Range(),\n      sparseMatrixF32Range(4, 2),\n      'f32-only',\n      multiplicationScalarMatrixInterval\n    );\n  },\n  multiplication_scalar_4x2_non_const: () => {\n    return generateScalarMatrixToMatrixCases(\n      sparseF32Range(),\n      sparseMatrixF32Range(4, 2),\n      'unfiltered',\n      multiplicationScalarMatrixInterval\n    );\n  },\n  multiplication_scalar_4x3_const: () => {\n    return generateScalarMatrixToMatrixCases(\n      sparseF32Range(),\n      sparseMatrixF32Range(4, 3),\n      'f32-only',\n      multiplicationScalarMatrixInterval\n    );\n  },\n  multiplication_scalar_4x3_non_const: () => {\n    return generateScalarMatrixToMatrixCases(\n      sparseF32Range(),\n      sparseMatrixF32Range(4, 3),\n      'unfiltered',\n      multiplicationScalarMatrixInterval\n    );\n  },\n  multiplication_scalar_4x4_const: () => {\n    return generateScalarMatrixToMatrixCases(\n      sparseF32Range(),\n      sparseMatrixF32Range(4, 4),\n      'f32-only',\n      multiplicationScalarMatrixInterval\n    );\n  },\n  multiplication_scalar_4x4_non_const: () => {\n    return generateScalarMatrixToMatrixCases(\n      sparseF32Range(),\n      sparseMatrixF32Range(4, 4),\n      'unfiltered',\n      multiplicationScalarMatrixInterval\n    );\n  },\n  subtraction_2x2_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(2, 2),\n      sparseMatrixF32Range(2, 2),\n      'f32-only',\n      subtractionMatrixInterval\n    );\n  },\n  subtraction_2x2_non_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(2, 2),\n      sparseMatrixF32Range(2, 2),\n      'unfiltered',\n      subtractionMatrixInterval\n    );\n  },\n  subtraction_2x3_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(2, 3),\n      sparseMatrixF32Range(2, 3),\n      'f32-only',\n      subtractionMatrixInterval\n    );\n  },\n  subtraction_2x3_non_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(2, 3),\n      sparseMatrixF32Range(2, 3),\n      'unfiltered',\n      subtractionMatrixInterval\n    );\n  },\n  subtraction_2x4_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(2, 4),\n      sparseMatrixF32Range(2, 4),\n      'f32-only',\n      subtractionMatrixInterval\n    );\n  },\n  subtraction_2x4_non_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(2, 4),\n      sparseMatrixF32Range(2, 4),\n      'unfiltered',\n      subtractionMatrixInterval\n    );\n  },\n  subtraction_3x2_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(3, 2),\n      sparseMatrixF32Range(3, 2),\n      'f32-only',\n      subtractionMatrixInterval\n    );\n  },\n  subtraction_3x2_non_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(3, 2),\n      sparseMatrixF32Range(3, 2),\n      'unfiltered',\n      subtractionMatrixInterval\n    );\n  },\n  subtraction_3x3_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(3, 3),\n      sparseMatrixF32Range(3, 3),\n      'f32-only',\n      subtractionMatrixInterval\n    );\n  },\n  subtraction_3x3_non_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(3, 3),\n      sparseMatrixF32Range(3, 3),\n      'unfiltered',\n      subtractionMatrixInterval\n    );\n  },\n  subtraction_3x4_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(3, 4),\n      sparseMatrixF32Range(3, 4),\n      'f32-only',\n      subtractionMatrixInterval\n    );\n  },\n  subtraction_3x4_non_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(3, 4),\n      sparseMatrixF32Range(3, 4),\n      'unfiltered',\n      subtractionMatrixInterval\n    );\n  },\n  subtraction_4x2_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(4, 2),\n      sparseMatrixF32Range(4, 2),\n      'f32-only',\n      subtractionMatrixInterval\n    );\n  },\n  subtraction_4x2_non_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(4, 2),\n      sparseMatrixF32Range(4, 2),\n      'unfiltered',\n      subtractionMatrixInterval\n    );\n  },\n  subtraction_4x3_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(4, 3),\n      sparseMatrixF32Range(4, 3),\n      'f32-only',\n      subtractionMatrixInterval\n    );\n  },\n  subtraction_4x3_non_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(4, 3),\n      sparseMatrixF32Range(4, 3),\n      'unfiltered',\n      subtractionMatrixInterval\n    );\n  },\n  subtraction_4x4_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(4, 4),\n      sparseMatrixF32Range(4, 4),\n      'f32-only',\n      subtractionMatrixInterval\n    );\n  },\n  subtraction_4x4_non_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(4, 4),\n      sparseMatrixF32Range(4, 4),\n      'unfiltered',\n      subtractionMatrixInterval\n    );\n  },\n});\n\ng.test('addition')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x + y, where x and y are matrices\nAccuracy: Correctly rounded\n`\n  )\n  .params(u =>\n    u\n      .combine('inputSource', allInputSources)\n      .combine('cols', [2, 3, 4] as const)\n      .combine('rows', [2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cols = t.params.cols;\n    const rows = t.params.rows;\n    const cases = await d.get(\n      t.params.inputSource === 'const'\n        ? `addition_${cols}x${rows}_const`\n        : `addition_${cols}x${rows}_non_const`\n    );\n    await run(\n      t,\n      binary('+'),\n      [TypeMat(cols, rows, TypeF32), TypeMat(cols, rows, TypeF32)],\n      TypeMat(cols, rows, TypeF32),\n      t.params,\n      cases\n    );\n  });\n\ng.test('multiplication_matrix_scalar')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x * y, where x is a matrix and y is a scalar\nAccuracy: Correctly rounded\n`\n  )\n  .params(u =>\n    u\n      .combine('inputSource', allInputSources)\n      .combine('cols', [2, 3, 4] as const)\n      .combine('rows', [2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cols = t.params.cols;\n    const rows = t.params.rows;\n    const cases = await d.get(\n      t.params.inputSource === 'const'\n        ? `multiplication_${cols}x${rows}_scalar_const`\n        : `multiplication_${cols}x${rows}_scalar_non_const`\n    );\n    await run(\n      t,\n      binary('*'),\n      [TypeMat(cols, rows, TypeF32), TypeF32],\n      TypeMat(cols, rows, TypeF32),\n      t.params,\n      cases\n    );\n  });\n\ng.test('multiplication_scalar_matrix')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x * y, where x is a scalar and y is a matrix\nAccuracy: Correctly rounded\n`\n  )\n  .params(u =>\n    u\n      .combine('inputSource', allInputSources)\n      .combine('cols', [2, 3, 4] as const)\n      .combine('rows', [2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cols = t.params.cols;\n    const rows = t.params.rows;\n    const cases = await d.get(\n      t.params.inputSource === 'const'\n        ? `multiplication_scalar_${cols}x${rows}_const`\n        : `multiplication_scalar_${cols}x${rows}_non_const`\n    );\n    await run(\n      t,\n      binary('*'),\n      [TypeF32, TypeMat(cols, rows, TypeF32)],\n      TypeMat(cols, rows, TypeF32),\n      t.params,\n      cases\n    );\n  });\n\ng.test('subtraction')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x - y, where x and y are matrices\nAccuracy: Correctly rounded\n`\n  )\n  .params(u =>\n    u\n      .combine('inputSource', allInputSources)\n      .combine('cols', [2, 3, 4] as const)\n      .combine('rows', [2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cols = t.params.cols;\n    const rows = t.params.rows;\n    const cases = await d.get(\n      t.params.inputSource === 'const'\n        ? `subtraction_${cols}x${rows}_const`\n        : `subtraction_${cols}x${rows}_non_const`\n    );\n    await run(\n      t,\n      binary('-'),\n      [TypeMat(cols, rows, TypeF32), TypeMat(cols, rows, TypeF32)],\n      TypeMat(cols, rows, TypeF32),\n      t.params,\n      cases\n    );\n  });\n"],"mappings":"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"}