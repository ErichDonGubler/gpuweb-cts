{"version":3,"file":"f32_matrix_arithmetic.spec.js","names":["description","makeTestGroup","GPUTest","TypeF32","TypeMat","additionMatrixInterval","multiplicationMatrixMatrixInterval","multiplicationMatrixScalarInterval","multiplicationScalarMatrixInterval","subtractionMatrixInterval","sparseF32Range","sparseMatrixF32Range","makeCaseCache","allInputSources","generateMatrixPairToMatrixCases","generateMatrixScalarToMatrixCases","generateScalarMatrixToMatrixCases","run","binary","g","d","addition_2x2_const","addition_2x2_non_const","addition_2x3_const","addition_2x3_non_const","addition_2x4_const","addition_2x4_non_const","addition_3x2_const","addition_3x2_non_const","addition_3x3_const","addition_3x3_non_const","addition_3x4_const","addition_3x4_non_const","addition_4x2_const","addition_4x2_non_const","addition_4x3_const","addition_4x3_non_const","addition_4x4_const","addition_4x4_non_const","multiplication_2x2_2x2_const","multiplication_2x2_2x2_non_const","multiplication_2x3_2x2_const","multiplication_2x3_2x2_non_const","multiplication_2x2_3x2_const","multiplication_2x2_3x2_non_const","multiplication_2x3_3x2_const","multiplication_2x3_3x2_non_const","multiplication_2x4_2x2_const","multiplication_2x4_2x2_non_const","multiplication_2x2_4x2_const","multiplication_2x2_4x2_non_const","multiplication_2x4_4x2_const","multiplication_2x4_4x2_non_const","multiplication_2x3_4x2_const","multiplication_2x3_4x2_non_const","multiplication_2x4_3x2_const","multiplication_2x4_3x2_non_const","multiplication_3x3_3x3_const","multiplication_3x3_3x3_non_const","multiplication_3x2_3x3_const","multiplication_3x2_3x3_non_const","multiplication_3x3_2x3_const","multiplication_3x3_2x3_non_const","multiplication_3x2_2x3_const","multiplication_3x2_2x3_non_const","multiplication_3x4_3x3_const","multiplication_3x4_3x3_non_const","multiplication_3x3_4x3_const","multiplication_3x3_4x3_non_const","multiplication_3x4_4x3_const","multiplication_3x4_4x3_non_const","multiplication_3x2_4x3_const","multiplication_3x2_4x3_non_const","multiplication_3x4_2x3_const","multiplication_3x4_2x3_non_const","multiplication_4x4_4x4_const","multiplication_4x4_4x4_non_const","multiplication_4x2_4x4_const","multiplication_4x2_4x4_non_const","multiplication_4x4_2x4_const","multiplication_4x4_2x4_non_const","multiplication_4x2_2x4_const","multiplication_4x2_2x4_non_const","multiplication_4x3_4x4_const","multiplication_4x3_4x4_non_const","multiplication_4x4_3x4_const","multiplication_4x4_3x4_non_const","multiplication_4x3_3x4_const","multiplication_4x3_3x4_non_const","multiplication_4x2_3x4_const","multiplication_4x2_3x4_non_const","multiplication_4x3_2x4_const","multiplication_4x3_2x4_non_const","multiplication_2x2_scalar_const","multiplication_2x2_scalar_non_const","multiplication_2x3_scalar_const","multiplication_2x3_scalar_non_const","multiplication_2x4_scalar_const","multiplication_2x4_scalar_non_const","multiplication_3x2_scalar_const","multiplication_3x2_scalar_non_const","multiplication_3x3_scalar_const","multiplication_3x3_scalar_non_const","multiplication_3x4_scalar_const","multiplication_3x4_scalar_non_const","multiplication_4x2_scalar_const","multiplication_4x2_scalar_non_const","multiplication_4x3_scalar_const","multiplication_4x3_scalar_non_const","multiplication_4x4_scalar_const","multiplication_4x4_scalar_non_const","multiplication_scalar_2x2_const","multiplication_scalar_2x2_non_const","multiplication_scalar_2x3_const","multiplication_scalar_2x3_non_const","multiplication_scalar_2x4_const","multiplication_scalar_2x4_non_const","multiplication_scalar_3x2_const","multiplication_scalar_3x2_non_const","multiplication_scalar_3x3_const","multiplication_scalar_3x3_non_const","multiplication_scalar_3x4_const","multiplication_scalar_3x4_non_const","multiplication_scalar_4x2_const","multiplication_scalar_4x2_non_const","multiplication_scalar_4x3_const","multiplication_scalar_4x3_non_const","multiplication_scalar_4x4_const","multiplication_scalar_4x4_non_const","subtraction_2x2_const","subtraction_2x2_non_const","subtraction_2x3_const","subtraction_2x3_non_const","subtraction_2x4_const","subtraction_2x4_non_const","subtraction_3x2_const","subtraction_3x2_non_const","subtraction_3x3_const","subtraction_3x3_non_const","subtraction_3x4_const","subtraction_3x4_non_const","subtraction_4x2_const","subtraction_4x2_non_const","subtraction_4x3_const","subtraction_4x3_non_const","subtraction_4x4_const","subtraction_4x4_non_const","test","specURL","desc","params","u","combine","fn","t","cols","rows","cases","get","inputSource","x_cols","common_dim","x_rows","y_cols","y_rows"],"sources":["../../../../../../src/webgpu/shader/execution/expression/binary/f32_matrix_arithmetic.spec.ts"],"sourcesContent":["export const description = `\nExecution Tests for the f32 matrix arithmetic binary expression operations\n`;\n\nimport { makeTestGroup } from '../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../gpu_test.js';\nimport { TypeF32, TypeMat } from '../../../../util/conversion.js';\nimport {\n  additionMatrixInterval,\n  multiplicationMatrixMatrixInterval,\n  multiplicationMatrixScalarInterval,\n  multiplicationScalarMatrixInterval,\n  subtractionMatrixInterval,\n} from '../../../../util/f32_interval.js';\nimport { sparseF32Range, sparseMatrixF32Range } from '../../../../util/math.js';\nimport { makeCaseCache } from '../case_cache.js';\nimport {\n  allInputSources,\n  generateMatrixPairToMatrixCases,\n  generateMatrixScalarToMatrixCases,\n  generateScalarMatrixToMatrixCases,\n  run,\n} from '../expression.js';\n\nimport { binary } from './binary.js';\n\nexport const g = makeTestGroup(GPUTest);\n\nexport const d = makeCaseCache('binary/f32_matrix_arithmetic', {\n  addition_2x2_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(2, 2),\n      sparseMatrixF32Range(2, 2),\n      'f32-only',\n      additionMatrixInterval\n    );\n  },\n  addition_2x2_non_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(2, 2),\n      sparseMatrixF32Range(2, 2),\n      'unfiltered',\n      additionMatrixInterval\n    );\n  },\n  addition_2x3_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(2, 3),\n      sparseMatrixF32Range(2, 3),\n      'f32-only',\n      additionMatrixInterval\n    );\n  },\n  addition_2x3_non_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(2, 3),\n      sparseMatrixF32Range(2, 3),\n      'unfiltered',\n      additionMatrixInterval\n    );\n  },\n  addition_2x4_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(2, 4),\n      sparseMatrixF32Range(2, 4),\n      'f32-only',\n      additionMatrixInterval\n    );\n  },\n  addition_2x4_non_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(2, 4),\n      sparseMatrixF32Range(2, 4),\n      'unfiltered',\n      additionMatrixInterval\n    );\n  },\n  addition_3x2_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(3, 2),\n      sparseMatrixF32Range(3, 2),\n      'f32-only',\n      additionMatrixInterval\n    );\n  },\n  addition_3x2_non_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(3, 2),\n      sparseMatrixF32Range(3, 2),\n      'unfiltered',\n      additionMatrixInterval\n    );\n  },\n  addition_3x3_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(3, 3),\n      sparseMatrixF32Range(3, 3),\n      'f32-only',\n      additionMatrixInterval\n    );\n  },\n  addition_3x3_non_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(3, 3),\n      sparseMatrixF32Range(3, 3),\n      'unfiltered',\n      additionMatrixInterval\n    );\n  },\n  addition_3x4_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(3, 4),\n      sparseMatrixF32Range(3, 4),\n      'f32-only',\n      additionMatrixInterval\n    );\n  },\n  addition_3x4_non_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(3, 4),\n      sparseMatrixF32Range(3, 4),\n      'unfiltered',\n      additionMatrixInterval\n    );\n  },\n  addition_4x2_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(4, 2),\n      sparseMatrixF32Range(4, 2),\n      'f32-only',\n      additionMatrixInterval\n    );\n  },\n  addition_4x2_non_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(4, 2),\n      sparseMatrixF32Range(4, 2),\n      'unfiltered',\n      additionMatrixInterval\n    );\n  },\n  addition_4x3_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(4, 3),\n      sparseMatrixF32Range(4, 3),\n      'f32-only',\n      additionMatrixInterval\n    );\n  },\n  addition_4x3_non_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(4, 3),\n      sparseMatrixF32Range(4, 3),\n      'unfiltered',\n      additionMatrixInterval\n    );\n  },\n  addition_4x4_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(4, 4),\n      sparseMatrixF32Range(4, 4),\n      'f32-only',\n      additionMatrixInterval\n    );\n  },\n  addition_4x4_non_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(4, 4),\n      sparseMatrixF32Range(4, 4),\n      'unfiltered',\n      additionMatrixInterval\n    );\n  },\n  multiplication_2x2_2x2_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(2, 2),\n      sparseMatrixF32Range(2, 2),\n      'f32-only',\n      multiplicationMatrixMatrixInterval\n    );\n  },\n  multiplication_2x2_2x2_non_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(2, 2),\n      sparseMatrixF32Range(2, 2),\n      'unfiltered',\n      multiplicationMatrixMatrixInterval\n    );\n  },\n  multiplication_2x3_2x2_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(2, 3),\n      sparseMatrixF32Range(2, 2),\n      'f32-only',\n      multiplicationMatrixMatrixInterval\n    );\n  },\n  multiplication_2x3_2x2_non_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(2, 3),\n      sparseMatrixF32Range(2, 2),\n      'unfiltered',\n      multiplicationMatrixMatrixInterval\n    );\n  },\n  multiplication_2x2_3x2_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(2, 2),\n      sparseMatrixF32Range(3, 2),\n      'f32-only',\n      multiplicationMatrixMatrixInterval\n    );\n  },\n  multiplication_2x2_3x2_non_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(2, 2),\n      sparseMatrixF32Range(3, 2),\n      'unfiltered',\n      multiplicationMatrixMatrixInterval\n    );\n  },\n  multiplication_2x3_3x2_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(2, 3),\n      sparseMatrixF32Range(3, 2),\n      'f32-only',\n      multiplicationMatrixMatrixInterval\n    );\n  },\n  multiplication_2x3_3x2_non_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(2, 3),\n      sparseMatrixF32Range(3, 2),\n      'unfiltered',\n      multiplicationMatrixMatrixInterval\n    );\n  },\n  multiplication_2x4_2x2_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(2, 4),\n      sparseMatrixF32Range(2, 2),\n      'f32-only',\n      multiplicationMatrixMatrixInterval\n    );\n  },\n  multiplication_2x4_2x2_non_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(2, 4),\n      sparseMatrixF32Range(2, 2),\n      'unfiltered',\n      multiplicationMatrixMatrixInterval\n    );\n  },\n  multiplication_2x2_4x2_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(2, 2),\n      sparseMatrixF32Range(4, 2),\n      'f32-only',\n      multiplicationMatrixMatrixInterval\n    );\n  },\n  multiplication_2x2_4x2_non_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(2, 2),\n      sparseMatrixF32Range(4, 2),\n      'unfiltered',\n      multiplicationMatrixMatrixInterval\n    );\n  },\n  multiplication_2x4_4x2_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(2, 4),\n      sparseMatrixF32Range(4, 2),\n      'f32-only',\n      multiplicationMatrixMatrixInterval\n    );\n  },\n  multiplication_2x4_4x2_non_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(2, 4),\n      sparseMatrixF32Range(4, 2),\n      'unfiltered',\n      multiplicationMatrixMatrixInterval\n    );\n  },\n  multiplication_2x3_4x2_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(2, 3),\n      sparseMatrixF32Range(4, 2),\n      'f32-only',\n      multiplicationMatrixMatrixInterval\n    );\n  },\n  multiplication_2x3_4x2_non_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(2, 3),\n      sparseMatrixF32Range(4, 2),\n      'unfiltered',\n      multiplicationMatrixMatrixInterval\n    );\n  },\n  multiplication_2x4_3x2_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(2, 4),\n      sparseMatrixF32Range(3, 2),\n      'f32-only',\n      multiplicationMatrixMatrixInterval\n    );\n  },\n  multiplication_2x4_3x2_non_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(2, 4),\n      sparseMatrixF32Range(3, 2),\n      'unfiltered',\n      multiplicationMatrixMatrixInterval\n    );\n  },\n  multiplication_3x3_3x3_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(3, 3),\n      sparseMatrixF32Range(3, 3),\n      'f32-only',\n      multiplicationMatrixMatrixInterval\n    );\n  },\n  multiplication_3x3_3x3_non_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(3, 3),\n      sparseMatrixF32Range(3, 3),\n      'unfiltered',\n      multiplicationMatrixMatrixInterval\n    );\n  },\n  multiplication_3x2_3x3_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(3, 2),\n      sparseMatrixF32Range(3, 3),\n      'f32-only',\n      multiplicationMatrixMatrixInterval\n    );\n  },\n  multiplication_3x2_3x3_non_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(3, 2),\n      sparseMatrixF32Range(3, 3),\n      'unfiltered',\n      multiplicationMatrixMatrixInterval\n    );\n  },\n  multiplication_3x3_2x3_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(3, 3),\n      sparseMatrixF32Range(2, 3),\n      'f32-only',\n      multiplicationMatrixMatrixInterval\n    );\n  },\n  multiplication_3x3_2x3_non_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(3, 3),\n      sparseMatrixF32Range(2, 3),\n      'unfiltered',\n      multiplicationMatrixMatrixInterval\n    );\n  },\n  multiplication_3x2_2x3_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(3, 2),\n      sparseMatrixF32Range(2, 3),\n      'f32-only',\n      multiplicationMatrixMatrixInterval\n    );\n  },\n  multiplication_3x2_2x3_non_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(3, 2),\n      sparseMatrixF32Range(2, 3),\n      'unfiltered',\n      multiplicationMatrixMatrixInterval\n    );\n  },\n  multiplication_3x4_3x3_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(3, 4),\n      sparseMatrixF32Range(3, 3),\n      'f32-only',\n      multiplicationMatrixMatrixInterval\n    );\n  },\n  multiplication_3x4_3x3_non_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(3, 4),\n      sparseMatrixF32Range(3, 3),\n      'unfiltered',\n      multiplicationMatrixMatrixInterval\n    );\n  },\n  multiplication_3x3_4x3_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(3, 3),\n      sparseMatrixF32Range(4, 3),\n      'f32-only',\n      multiplicationMatrixMatrixInterval\n    );\n  },\n  multiplication_3x3_4x3_non_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(3, 3),\n      sparseMatrixF32Range(4, 3),\n      'unfiltered',\n      multiplicationMatrixMatrixInterval\n    );\n  },\n  multiplication_3x4_4x3_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(3, 4),\n      sparseMatrixF32Range(4, 3),\n      'f32-only',\n      multiplicationMatrixMatrixInterval\n    );\n  },\n  multiplication_3x4_4x3_non_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(3, 4),\n      sparseMatrixF32Range(4, 3),\n      'unfiltered',\n      multiplicationMatrixMatrixInterval\n    );\n  },\n  multiplication_3x2_4x3_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(3, 2),\n      sparseMatrixF32Range(4, 3),\n      'f32-only',\n      multiplicationMatrixMatrixInterval\n    );\n  },\n  multiplication_3x2_4x3_non_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(3, 2),\n      sparseMatrixF32Range(4, 3),\n      'unfiltered',\n      multiplicationMatrixMatrixInterval\n    );\n  },\n  multiplication_3x4_2x3_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(3, 4),\n      sparseMatrixF32Range(2, 3),\n      'f32-only',\n      multiplicationMatrixMatrixInterval\n    );\n  },\n  multiplication_3x4_2x3_non_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(3, 4),\n      sparseMatrixF32Range(2, 3),\n      'unfiltered',\n      multiplicationMatrixMatrixInterval\n    );\n  },\n  multiplication_4x4_4x4_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(4, 4),\n      sparseMatrixF32Range(4, 4),\n      'f32-only',\n      multiplicationMatrixMatrixInterval\n    );\n  },\n  multiplication_4x4_4x4_non_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(4, 4),\n      sparseMatrixF32Range(4, 4),\n      'unfiltered',\n      multiplicationMatrixMatrixInterval\n    );\n  },\n  multiplication_4x2_4x4_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(4, 2),\n      sparseMatrixF32Range(4, 4),\n      'f32-only',\n      multiplicationMatrixMatrixInterval\n    );\n  },\n  multiplication_4x2_4x4_non_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(4, 2),\n      sparseMatrixF32Range(4, 4),\n      'unfiltered',\n      multiplicationMatrixMatrixInterval\n    );\n  },\n  multiplication_4x4_2x4_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(4, 4),\n      sparseMatrixF32Range(2, 4),\n      'f32-only',\n      multiplicationMatrixMatrixInterval\n    );\n  },\n  multiplication_4x4_2x4_non_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(4, 4),\n      sparseMatrixF32Range(2, 4),\n      'unfiltered',\n      multiplicationMatrixMatrixInterval\n    );\n  },\n  multiplication_4x2_2x4_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(4, 2),\n      sparseMatrixF32Range(2, 4),\n      'f32-only',\n      multiplicationMatrixMatrixInterval\n    );\n  },\n  multiplication_4x2_2x4_non_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(4, 2),\n      sparseMatrixF32Range(2, 4),\n      'unfiltered',\n      multiplicationMatrixMatrixInterval\n    );\n  },\n  multiplication_4x3_4x4_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(4, 3),\n      sparseMatrixF32Range(4, 4),\n      'f32-only',\n      multiplicationMatrixMatrixInterval\n    );\n  },\n  multiplication_4x3_4x4_non_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(4, 3),\n      sparseMatrixF32Range(4, 4),\n      'unfiltered',\n      multiplicationMatrixMatrixInterval\n    );\n  },\n  multiplication_4x4_3x4_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(4, 4),\n      sparseMatrixF32Range(3, 4),\n      'f32-only',\n      multiplicationMatrixMatrixInterval\n    );\n  },\n  multiplication_4x4_3x4_non_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(4, 4),\n      sparseMatrixF32Range(3, 4),\n      'unfiltered',\n      multiplicationMatrixMatrixInterval\n    );\n  },\n  multiplication_4x3_3x4_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(4, 3),\n      sparseMatrixF32Range(3, 4),\n      'f32-only',\n      multiplicationMatrixMatrixInterval\n    );\n  },\n  multiplication_4x3_3x4_non_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(4, 3),\n      sparseMatrixF32Range(3, 4),\n      'unfiltered',\n      multiplicationMatrixMatrixInterval\n    );\n  },\n  multiplication_4x2_3x4_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(4, 2),\n      sparseMatrixF32Range(3, 4),\n      'f32-only',\n      multiplicationMatrixMatrixInterval\n    );\n  },\n  multiplication_4x2_3x4_non_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(4, 2),\n      sparseMatrixF32Range(3, 4),\n      'unfiltered',\n      multiplicationMatrixMatrixInterval\n    );\n  },\n  multiplication_4x3_2x4_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(4, 3),\n      sparseMatrixF32Range(2, 4),\n      'f32-only',\n      multiplicationMatrixMatrixInterval\n    );\n  },\n  multiplication_4x3_2x4_non_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(4, 3),\n      sparseMatrixF32Range(2, 4),\n      'unfiltered',\n      multiplicationMatrixMatrixInterval\n    );\n  },\n  multiplication_2x2_scalar_const: () => {\n    return generateMatrixScalarToMatrixCases(\n      sparseMatrixF32Range(2, 2),\n      sparseF32Range(),\n      'f32-only',\n      multiplicationMatrixScalarInterval\n    );\n  },\n  multiplication_2x2_scalar_non_const: () => {\n    return generateMatrixScalarToMatrixCases(\n      sparseMatrixF32Range(2, 2),\n      sparseF32Range(),\n      'unfiltered',\n      multiplicationMatrixScalarInterval\n    );\n  },\n  multiplication_2x3_scalar_const: () => {\n    return generateMatrixScalarToMatrixCases(\n      sparseMatrixF32Range(2, 3),\n      sparseF32Range(),\n      'f32-only',\n      multiplicationMatrixScalarInterval\n    );\n  },\n  multiplication_2x3_scalar_non_const: () => {\n    return generateMatrixScalarToMatrixCases(\n      sparseMatrixF32Range(2, 3),\n      sparseF32Range(),\n      'unfiltered',\n      multiplicationMatrixScalarInterval\n    );\n  },\n  multiplication_2x4_scalar_const: () => {\n    return generateMatrixScalarToMatrixCases(\n      sparseMatrixF32Range(2, 4),\n      sparseF32Range(),\n      'f32-only',\n      multiplicationMatrixScalarInterval\n    );\n  },\n  multiplication_2x4_scalar_non_const: () => {\n    return generateMatrixScalarToMatrixCases(\n      sparseMatrixF32Range(2, 4),\n      sparseF32Range(),\n      'unfiltered',\n      multiplicationMatrixScalarInterval\n    );\n  },\n  multiplication_3x2_scalar_const: () => {\n    return generateMatrixScalarToMatrixCases(\n      sparseMatrixF32Range(3, 2),\n      sparseF32Range(),\n      'f32-only',\n      multiplicationMatrixScalarInterval\n    );\n  },\n  multiplication_3x2_scalar_non_const: () => {\n    return generateMatrixScalarToMatrixCases(\n      sparseMatrixF32Range(3, 2),\n      sparseF32Range(),\n      'unfiltered',\n      multiplicationMatrixScalarInterval\n    );\n  },\n  multiplication_3x3_scalar_const: () => {\n    return generateMatrixScalarToMatrixCases(\n      sparseMatrixF32Range(3, 3),\n      sparseF32Range(),\n      'f32-only',\n      multiplicationMatrixScalarInterval\n    );\n  },\n  multiplication_3x3_scalar_non_const: () => {\n    return generateMatrixScalarToMatrixCases(\n      sparseMatrixF32Range(3, 3),\n      sparseF32Range(),\n      'unfiltered',\n      multiplicationMatrixScalarInterval\n    );\n  },\n  multiplication_3x4_scalar_const: () => {\n    return generateMatrixScalarToMatrixCases(\n      sparseMatrixF32Range(3, 4),\n      sparseF32Range(),\n      'f32-only',\n      multiplicationMatrixScalarInterval\n    );\n  },\n  multiplication_3x4_scalar_non_const: () => {\n    return generateMatrixScalarToMatrixCases(\n      sparseMatrixF32Range(3, 4),\n      sparseF32Range(),\n      'unfiltered',\n      multiplicationMatrixScalarInterval\n    );\n  },\n  multiplication_4x2_scalar_const: () => {\n    return generateMatrixScalarToMatrixCases(\n      sparseMatrixF32Range(4, 2),\n      sparseF32Range(),\n      'f32-only',\n      multiplicationMatrixScalarInterval\n    );\n  },\n  multiplication_4x2_scalar_non_const: () => {\n    return generateMatrixScalarToMatrixCases(\n      sparseMatrixF32Range(4, 2),\n      sparseF32Range(),\n      'unfiltered',\n      multiplicationMatrixScalarInterval\n    );\n  },\n  multiplication_4x3_scalar_const: () => {\n    return generateMatrixScalarToMatrixCases(\n      sparseMatrixF32Range(4, 3),\n      sparseF32Range(),\n      'f32-only',\n      multiplicationMatrixScalarInterval\n    );\n  },\n  multiplication_4x3_scalar_non_const: () => {\n    return generateMatrixScalarToMatrixCases(\n      sparseMatrixF32Range(4, 3),\n      sparseF32Range(),\n      'unfiltered',\n      multiplicationMatrixScalarInterval\n    );\n  },\n  multiplication_4x4_scalar_const: () => {\n    return generateMatrixScalarToMatrixCases(\n      sparseMatrixF32Range(4, 4),\n      sparseF32Range(),\n      'f32-only',\n      multiplicationMatrixScalarInterval\n    );\n  },\n  multiplication_4x4_scalar_non_const: () => {\n    return generateMatrixScalarToMatrixCases(\n      sparseMatrixF32Range(4, 4),\n      sparseF32Range(),\n      'unfiltered',\n      multiplicationMatrixScalarInterval\n    );\n  },\n  multiplication_scalar_2x2_const: () => {\n    return generateScalarMatrixToMatrixCases(\n      sparseF32Range(),\n      sparseMatrixF32Range(2, 2),\n      'f32-only',\n      multiplicationScalarMatrixInterval\n    );\n  },\n  multiplication_scalar_2x2_non_const: () => {\n    return generateScalarMatrixToMatrixCases(\n      sparseF32Range(),\n      sparseMatrixF32Range(2, 2),\n      'unfiltered',\n      multiplicationScalarMatrixInterval\n    );\n  },\n  multiplication_scalar_2x3_const: () => {\n    return generateScalarMatrixToMatrixCases(\n      sparseF32Range(),\n      sparseMatrixF32Range(2, 3),\n      'f32-only',\n      multiplicationScalarMatrixInterval\n    );\n  },\n  multiplication_scalar_2x3_non_const: () => {\n    return generateScalarMatrixToMatrixCases(\n      sparseF32Range(),\n      sparseMatrixF32Range(2, 3),\n      'unfiltered',\n      multiplicationScalarMatrixInterval\n    );\n  },\n  multiplication_scalar_2x4_const: () => {\n    return generateScalarMatrixToMatrixCases(\n      sparseF32Range(),\n      sparseMatrixF32Range(2, 4),\n      'f32-only',\n      multiplicationScalarMatrixInterval\n    );\n  },\n  multiplication_scalar_2x4_non_const: () => {\n    return generateScalarMatrixToMatrixCases(\n      sparseF32Range(),\n      sparseMatrixF32Range(2, 4),\n      'unfiltered',\n      multiplicationScalarMatrixInterval\n    );\n  },\n  multiplication_scalar_3x2_const: () => {\n    return generateScalarMatrixToMatrixCases(\n      sparseF32Range(),\n      sparseMatrixF32Range(3, 2),\n      'f32-only',\n      multiplicationScalarMatrixInterval\n    );\n  },\n  multiplication_scalar_3x2_non_const: () => {\n    return generateScalarMatrixToMatrixCases(\n      sparseF32Range(),\n      sparseMatrixF32Range(3, 2),\n      'unfiltered',\n      multiplicationScalarMatrixInterval\n    );\n  },\n  multiplication_scalar_3x3_const: () => {\n    return generateScalarMatrixToMatrixCases(\n      sparseF32Range(),\n      sparseMatrixF32Range(3, 3),\n      'f32-only',\n      multiplicationScalarMatrixInterval\n    );\n  },\n  multiplication_scalar_3x3_non_const: () => {\n    return generateScalarMatrixToMatrixCases(\n      sparseF32Range(),\n      sparseMatrixF32Range(3, 3),\n      'unfiltered',\n      multiplicationScalarMatrixInterval\n    );\n  },\n  multiplication_scalar_3x4_const: () => {\n    return generateScalarMatrixToMatrixCases(\n      sparseF32Range(),\n      sparseMatrixF32Range(3, 4),\n      'f32-only',\n      multiplicationScalarMatrixInterval\n    );\n  },\n  multiplication_scalar_3x4_non_const: () => {\n    return generateScalarMatrixToMatrixCases(\n      sparseF32Range(),\n      sparseMatrixF32Range(3, 4),\n      'unfiltered',\n      multiplicationScalarMatrixInterval\n    );\n  },\n  multiplication_scalar_4x2_const: () => {\n    return generateScalarMatrixToMatrixCases(\n      sparseF32Range(),\n      sparseMatrixF32Range(4, 2),\n      'f32-only',\n      multiplicationScalarMatrixInterval\n    );\n  },\n  multiplication_scalar_4x2_non_const: () => {\n    return generateScalarMatrixToMatrixCases(\n      sparseF32Range(),\n      sparseMatrixF32Range(4, 2),\n      'unfiltered',\n      multiplicationScalarMatrixInterval\n    );\n  },\n  multiplication_scalar_4x3_const: () => {\n    return generateScalarMatrixToMatrixCases(\n      sparseF32Range(),\n      sparseMatrixF32Range(4, 3),\n      'f32-only',\n      multiplicationScalarMatrixInterval\n    );\n  },\n  multiplication_scalar_4x3_non_const: () => {\n    return generateScalarMatrixToMatrixCases(\n      sparseF32Range(),\n      sparseMatrixF32Range(4, 3),\n      'unfiltered',\n      multiplicationScalarMatrixInterval\n    );\n  },\n  multiplication_scalar_4x4_const: () => {\n    return generateScalarMatrixToMatrixCases(\n      sparseF32Range(),\n      sparseMatrixF32Range(4, 4),\n      'f32-only',\n      multiplicationScalarMatrixInterval\n    );\n  },\n  multiplication_scalar_4x4_non_const: () => {\n    return generateScalarMatrixToMatrixCases(\n      sparseF32Range(),\n      sparseMatrixF32Range(4, 4),\n      'unfiltered',\n      multiplicationScalarMatrixInterval\n    );\n  },\n  subtraction_2x2_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(2, 2),\n      sparseMatrixF32Range(2, 2),\n      'f32-only',\n      subtractionMatrixInterval\n    );\n  },\n  subtraction_2x2_non_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(2, 2),\n      sparseMatrixF32Range(2, 2),\n      'unfiltered',\n      subtractionMatrixInterval\n    );\n  },\n  subtraction_2x3_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(2, 3),\n      sparseMatrixF32Range(2, 3),\n      'f32-only',\n      subtractionMatrixInterval\n    );\n  },\n  subtraction_2x3_non_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(2, 3),\n      sparseMatrixF32Range(2, 3),\n      'unfiltered',\n      subtractionMatrixInterval\n    );\n  },\n  subtraction_2x4_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(2, 4),\n      sparseMatrixF32Range(2, 4),\n      'f32-only',\n      subtractionMatrixInterval\n    );\n  },\n  subtraction_2x4_non_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(2, 4),\n      sparseMatrixF32Range(2, 4),\n      'unfiltered',\n      subtractionMatrixInterval\n    );\n  },\n  subtraction_3x2_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(3, 2),\n      sparseMatrixF32Range(3, 2),\n      'f32-only',\n      subtractionMatrixInterval\n    );\n  },\n  subtraction_3x2_non_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(3, 2),\n      sparseMatrixF32Range(3, 2),\n      'unfiltered',\n      subtractionMatrixInterval\n    );\n  },\n  subtraction_3x3_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(3, 3),\n      sparseMatrixF32Range(3, 3),\n      'f32-only',\n      subtractionMatrixInterval\n    );\n  },\n  subtraction_3x3_non_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(3, 3),\n      sparseMatrixF32Range(3, 3),\n      'unfiltered',\n      subtractionMatrixInterval\n    );\n  },\n  subtraction_3x4_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(3, 4),\n      sparseMatrixF32Range(3, 4),\n      'f32-only',\n      subtractionMatrixInterval\n    );\n  },\n  subtraction_3x4_non_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(3, 4),\n      sparseMatrixF32Range(3, 4),\n      'unfiltered',\n      subtractionMatrixInterval\n    );\n  },\n  subtraction_4x2_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(4, 2),\n      sparseMatrixF32Range(4, 2),\n      'f32-only',\n      subtractionMatrixInterval\n    );\n  },\n  subtraction_4x2_non_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(4, 2),\n      sparseMatrixF32Range(4, 2),\n      'unfiltered',\n      subtractionMatrixInterval\n    );\n  },\n  subtraction_4x3_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(4, 3),\n      sparseMatrixF32Range(4, 3),\n      'f32-only',\n      subtractionMatrixInterval\n    );\n  },\n  subtraction_4x3_non_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(4, 3),\n      sparseMatrixF32Range(4, 3),\n      'unfiltered',\n      subtractionMatrixInterval\n    );\n  },\n  subtraction_4x4_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(4, 4),\n      sparseMatrixF32Range(4, 4),\n      'f32-only',\n      subtractionMatrixInterval\n    );\n  },\n  subtraction_4x4_non_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(4, 4),\n      sparseMatrixF32Range(4, 4),\n      'unfiltered',\n      subtractionMatrixInterval\n    );\n  },\n});\n\ng.test('addition')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x + y, where x and y are matrices\nAccuracy: Correctly rounded\n`\n  )\n  .params(u =>\n    u\n      .combine('inputSource', allInputSources)\n      .combine('cols', [2, 3, 4] as const)\n      .combine('rows', [2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cols = t.params.cols;\n    const rows = t.params.rows;\n    const cases = await d.get(\n      t.params.inputSource === 'const'\n        ? `addition_${cols}x${rows}_const`\n        : `addition_${cols}x${rows}_non_const`\n    );\n    await run(\n      t,\n      binary('+'),\n      [TypeMat(cols, rows, TypeF32), TypeMat(cols, rows, TypeF32)],\n      TypeMat(cols, rows, TypeF32),\n      t.params,\n      cases\n    );\n  });\n\ng.test('multiplication_matrix_matrix')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x * y, where x is a matrix and y is a matrix\nAccuracy: Correctly rounded\n`\n  )\n  .params(u =>\n    u\n      .combine('inputSource', allInputSources)\n      .combine('common_dim', [2, 3, 4] as const)\n      .combine('x_rows', [2, 3, 4] as const)\n      .combine('y_cols', [2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const x_cols = t.params.common_dim;\n    const x_rows = t.params.x_rows;\n    const y_cols = t.params.y_cols;\n    const y_rows = t.params.common_dim;\n\n    const cases = await d.get(\n      t.params.inputSource === 'const'\n        ? `multiplication_${x_cols}x${x_rows}_${y_cols}x${y_rows}_const`\n        : `multiplication_${x_cols}x${x_rows}_${y_cols}x${y_rows}_non_const`\n    );\n    await run(\n      t,\n      binary('*'),\n      [TypeMat(x_cols, x_rows, TypeF32), TypeMat(y_cols, y_rows, TypeF32)],\n      TypeMat(y_cols, x_rows, TypeF32),\n      t.params,\n      cases\n    );\n  });\n\ng.test('multiplication_matrix_scalar')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x * y, where x is a matrix and y is a scalar\nAccuracy: Correctly rounded\n`\n  )\n  .params(u =>\n    u\n      .combine('inputSource', allInputSources)\n      .combine('cols', [2, 3, 4] as const)\n      .combine('rows', [2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cols = t.params.cols;\n    const rows = t.params.rows;\n    const cases = await d.get(\n      t.params.inputSource === 'const'\n        ? `multiplication_${cols}x${rows}_scalar_const`\n        : `multiplication_${cols}x${rows}_scalar_non_const`\n    );\n    await run(\n      t,\n      binary('*'),\n      [TypeMat(cols, rows, TypeF32), TypeF32],\n      TypeMat(cols, rows, TypeF32),\n      t.params,\n      cases\n    );\n  });\n\ng.test('multiplication_scalar_matrix')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x * y, where x is a scalar and y is a matrix\nAccuracy: Correctly rounded\n`\n  )\n  .params(u =>\n    u\n      .combine('inputSource', allInputSources)\n      .combine('cols', [2, 3, 4] as const)\n      .combine('rows', [2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cols = t.params.cols;\n    const rows = t.params.rows;\n    const cases = await d.get(\n      t.params.inputSource === 'const'\n        ? `multiplication_scalar_${cols}x${rows}_const`\n        : `multiplication_scalar_${cols}x${rows}_non_const`\n    );\n    await run(\n      t,\n      binary('*'),\n      [TypeF32, TypeMat(cols, rows, TypeF32)],\n      TypeMat(cols, rows, TypeF32),\n      t.params,\n      cases\n    );\n  });\n\ng.test('subtraction')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x - y, where x and y are matrices\nAccuracy: Correctly rounded\n`\n  )\n  .params(u =>\n    u\n      .combine('inputSource', allInputSources)\n      .combine('cols', [2, 3, 4] as const)\n      .combine('rows', [2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cols = t.params.cols;\n    const rows = t.params.rows;\n    const cases = await d.get(\n      t.params.inputSource === 'const'\n        ? `subtraction_${cols}x${rows}_const`\n        : `subtraction_${cols}x${rows}_non_const`\n    );\n    await run(\n      t,\n      binary('-'),\n      [TypeMat(cols, rows, TypeF32), TypeMat(cols, rows, TypeF32)],\n      TypeMat(cols, rows, TypeF32),\n      t.params,\n      cases\n    );\n  });\n"],"mappings":"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"}