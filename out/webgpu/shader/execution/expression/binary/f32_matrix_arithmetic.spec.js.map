{"version":3,"file":"f32_matrix_arithmetic.spec.js","names":["description","makeTestGroup","GPUTest","TypeF32","TypeMat","additionMatrixInterval","sparseMatrixF32Range","makeCaseCache","allInputSources","generateMatrixPairToMatrixCases","run","binary","g","d","addition_2x2_const","addition_2x2_non_const","addition_2x3_const","addition_2x3_non_const","addition_2x4_const","addition_2x4_non_const","addition_3x2_const","addition_3x2_non_const","addition_3x3_const","addition_3x3_non_const","addition_3x4_const","addition_3x4_non_const","addition_4x2_const","addition_4x2_non_const","addition_4x3_const","addition_4x3_non_const","addition_4x4_const","addition_4x4_non_const","test","specURL","desc","params","u","combine","fn","t","cols","rows","cases","get","inputSource"],"sources":["../../../../../../src/webgpu/shader/execution/expression/binary/f32_matrix_arithmetic.spec.ts"],"sourcesContent":["export const description = `\nExecution Tests for the f32 matrix arithmetic binary expression operations\n`;\n\nimport { makeTestGroup } from '../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../gpu_test.js';\nimport { TypeF32, TypeMat } from '../../../../util/conversion.js';\nimport { additionMatrixInterval } from '../../../../util/f32_interval.js';\nimport { sparseMatrixF32Range } from '../../../../util/math.js';\nimport { makeCaseCache } from '../case_cache.js';\nimport { allInputSources, generateMatrixPairToMatrixCases, run } from '../expression.js';\n\nimport { binary } from './binary.js';\n\nexport const g = makeTestGroup(GPUTest);\n\nexport const d = makeCaseCache('binary/f32_matrix_arithmetic', {\n  addition_2x2_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(2, 2),\n      sparseMatrixF32Range(2, 2),\n      'f32-only',\n      additionMatrixInterval\n    );\n  },\n  addition_2x2_non_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(2, 2),\n      sparseMatrixF32Range(2, 2),\n      'unfiltered',\n      additionMatrixInterval\n    );\n  },\n  addition_2x3_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(2, 3),\n      sparseMatrixF32Range(2, 3),\n      'f32-only',\n      additionMatrixInterval\n    );\n  },\n  addition_2x3_non_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(2, 3),\n      sparseMatrixF32Range(2, 3),\n      'unfiltered',\n      additionMatrixInterval\n    );\n  },\n  addition_2x4_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(2, 4),\n      sparseMatrixF32Range(2, 4),\n      'f32-only',\n      additionMatrixInterval\n    );\n  },\n  addition_2x4_non_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(2, 4),\n      sparseMatrixF32Range(2, 4),\n      'unfiltered',\n      additionMatrixInterval\n    );\n  },\n  addition_3x2_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(3, 2),\n      sparseMatrixF32Range(3, 2),\n      'f32-only',\n      additionMatrixInterval\n    );\n  },\n  addition_3x2_non_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(3, 2),\n      sparseMatrixF32Range(3, 2),\n      'unfiltered',\n      additionMatrixInterval\n    );\n  },\n  addition_3x3_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(3, 3),\n      sparseMatrixF32Range(3, 3),\n      'f32-only',\n      additionMatrixInterval\n    );\n  },\n  addition_3x3_non_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(3, 3),\n      sparseMatrixF32Range(3, 3),\n      'unfiltered',\n      additionMatrixInterval\n    );\n  },\n  addition_3x4_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(3, 4),\n      sparseMatrixF32Range(3, 4),\n      'f32-only',\n      additionMatrixInterval\n    );\n  },\n  addition_3x4_non_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(3, 4),\n      sparseMatrixF32Range(3, 4),\n      'unfiltered',\n      additionMatrixInterval\n    );\n  },\n  addition_4x2_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(4, 2),\n      sparseMatrixF32Range(4, 2),\n      'f32-only',\n      additionMatrixInterval\n    );\n  },\n  addition_4x2_non_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(4, 2),\n      sparseMatrixF32Range(4, 2),\n      'unfiltered',\n      additionMatrixInterval\n    );\n  },\n  addition_4x3_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(4, 3),\n      sparseMatrixF32Range(4, 3),\n      'f32-only',\n      additionMatrixInterval\n    );\n  },\n  addition_4x3_non_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(4, 3),\n      sparseMatrixF32Range(4, 3),\n      'unfiltered',\n      additionMatrixInterval\n    );\n  },\n  addition_4x4_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(4, 4),\n      sparseMatrixF32Range(4, 4),\n      'f32-only',\n      additionMatrixInterval\n    );\n  },\n  addition_4x4_non_const: () => {\n    return generateMatrixPairToMatrixCases(\n      sparseMatrixF32Range(4, 4),\n      sparseMatrixF32Range(4, 4),\n      'unfiltered',\n      additionMatrixInterval\n    );\n  },\n});\n\ng.test('addition')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x + y, where x and y are matrices\nAccuracy: Correctly rounded\n`\n  )\n  .params(u =>\n    u\n      .combine('inputSource', allInputSources)\n      .combine('cols', [2, 3, 4] as const)\n      .combine('rows', [2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cols = t.params.cols;\n    const rows = t.params.rows;\n    const cases = await d.get(\n      t.params.inputSource === 'const'\n        ? `addition_${cols}x${rows}_const`\n        : `addition_${cols}x${rows}_non_const`\n    );\n    await run(\n      t,\n      binary('+'),\n      [TypeMat(cols, rows, TypeF32), TypeMat(cols, rows, TypeF32)],\n      TypeMat(cols, rows, TypeF32),\n      t.params,\n      cases\n    );\n  });\n"],"mappings":"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"}