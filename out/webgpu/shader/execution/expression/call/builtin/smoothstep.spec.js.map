{"version":3,"sources":["../../../../../../../src/webgpu/shader/execution/expression/call/builtin/smoothstep.spec.ts"],"names":["description","makeTestGroup","GPUTest","TypeF32","smoothStepInterval","sparseF32Range","makeCaseCache","allInputSources","makeTernaryToF32IntervalCase","run","builtin","g","d","f32","makeCase","x","y","z","values","cases","forEach","push","test","specURL","desc","params","u","combine","undefined","unimplemented","fn","t","get"],"mappings":";AAAA;AACA,GADA,OAAO,MAAMA,WAAW,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATO,CAWP,SAASC,aAAT,QAA8B,kDAA9B;AACA,SAASC,OAAT,QAAwB,4BAAxB;AACA,SAASC,OAAT,QAAwB,mCAAxB;AACA,SAASC,kBAAT,QAAmC,qCAAnC;AACA,SAASC,cAAT,QAA+B,6BAA/B;AACA,SAASC,aAAT,QAA8B,qBAA9B;AACA,SAASC,eAAT,EAAgCC,4BAAhC,EAA8DC,GAA9D,QAAyE,qBAAzE;;AAEA,SAASC,OAAT,QAAwB,cAAxB;;AAEA,OAAO,MAAMC,CAAC,GAAGV,aAAa,CAACC,OAAD,CAAvB;;AAEP,OAAO,MAAMU,CAAC,GAAGN,aAAa,CAAC,YAAD,EAAe;AAC3CO,EAAAA,GAAG,EAAE,MAAM;AACT,UAAMC,QAAQ,GAAG,CAACC,CAAD,EAAYC,CAAZ,EAAuBC,CAAvB,KAA2C;AAC1D,aAAOT,4BAA4B,CAACO,CAAD,EAAIC,CAAJ,EAAOC,CAAP,EAAUb,kBAAV,CAAnC;AACD,KAFD;;AAIA;AACA,UAAMc,MAAM,GAAGb,cAAc,EAA7B;AACA,UAAMc,KAAkB,GAAG,EAA3B;AACAD,IAAAA,MAAM,CAACE,OAAP,CAAe,CAAAL,CAAC,KAAI;AAClBG,MAAAA,MAAM,CAACE,OAAP,CAAe,CAAAJ,CAAC,KAAI;AAClBE,QAAAA,MAAM,CAACE,OAAP,CAAe,CAAAH,CAAC,KAAI;AAClBE,UAAAA,KAAK,CAACE,IAAN,CAAWP,QAAQ,CAACC,CAAD,EAAIC,CAAJ,EAAOC,CAAP,CAAnB;AACD,SAFD;AAGD,OAJD;AAKD,KAND;;AAQA,WAAOE,KAAP;AACD,GAlB0C,EAAf,CAAvB;;;AAqBPR,CAAC,CAACW,IAAF,CAAO,gBAAP;AACGC,OADH,CACW,qDADX;AAEGC,IAFH,CAES,sBAFT;AAGGC,MAHH,CAGU,CAAAC,CAAC;AACPA,CAAC,CAACC,OAAF,CAAU,aAAV,EAAyBpB,eAAzB,EAA0CoB,OAA1C,CAAkD,WAAlD,EAA+D,CAACC,SAAD,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAA/D,CAJJ;;AAMGC,aANH;;AAQAlB,CAAC,CAACW,IAAF,CAAO,KAAP;AACGC,OADH,CACW,qDADX;AAEGC,IAFH,CAES,WAFT;AAGGC,MAHH,CAGU,CAAAC,CAAC;AACPA,CAAC,CAACC,OAAF,CAAU,aAAV,EAAyBpB,eAAzB,EAA0CoB,OAA1C,CAAkD,WAAlD,EAA+D,CAACC,SAAD,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAA/D,CAJJ;;AAMGE,EANH,CAMM,OAAMC,CAAN,KAAW;AACb,QAAMZ,KAAK,GAAG,MAAMP,CAAC,CAACoB,GAAF,CAAM,KAAN,CAApB;AACA,QAAMvB,GAAG,CAACsB,CAAD,EAAIrB,OAAO,CAAC,YAAD,CAAX,EAA2B,CAACP,OAAD,EAAUA,OAAV,EAAmBA,OAAnB,CAA3B,EAAwDA,OAAxD,EAAiE4B,CAAC,CAACN,MAAnE,EAA2EN,KAA3E,CAAT;AACD,CATH;;AAWAR,CAAC,CAACW,IAAF,CAAO,KAAP;AACGC,OADH,CACW,qDADX;AAEGC,IAFH,CAES,WAFT;AAGGC,MAHH,CAGU,CAAAC,CAAC;AACPA,CAAC,CAACC,OAAF,CAAU,aAAV,EAAyBpB,eAAzB,EAA0CoB,OAA1C,CAAkD,WAAlD,EAA+D,CAACC,SAAD,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAA/D,CAJJ;;AAMGC,aANH","sourcesContent":["export const description = `\nExecution tests for the 'smoothstep' builtin function\n\nS is AbstractFloat, f32, f16\nT is S or vecN<S>\n@const fn smoothstep(low: T , high: T , x: T ) -> T\nReturns the smooth Hermite interpolation between 0 and 1.\nComponent-wise when T is a vector.\nFor scalar T, the result is t * t * (3.0 - 2.0 * t), where t = clamp((x - low) / (high - low), 0.0, 1.0).\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../../gpu_test.js';\nimport { TypeF32 } from '../../../../../util/conversion.js';\nimport { smoothStepInterval } from '../../../../../util/f32_interval.js';\nimport { sparseF32Range } from '../../../../../util/math.js';\nimport { makeCaseCache } from '../../case_cache.js';\nimport { allInputSources, Case, makeTernaryToF32IntervalCase, run } from '../../expression.js';\n\nimport { builtin } from './builtin.js';\n\nexport const g = makeTestGroup(GPUTest);\n\nexport const d = makeCaseCache('smoothstep', {\n  f32: () => {\n    const makeCase = (x: number, y: number, z: number): Case => {\n      return makeTernaryToF32IntervalCase(x, y, z, smoothStepInterval);\n    };\n\n    // Using sparseF32Range since this will generate N^3 test cases\n    const values = sparseF32Range();\n    const cases: Array<Case> = [];\n    values.forEach(x => {\n      values.forEach(y => {\n        values.forEach(z => {\n          cases.push(makeCase(x, y, z));\n        });\n      });\n    });\n\n    return cases;\n  },\n});\n\ng.test('abstract_float')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(`abstract float tests`)\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .unimplemented();\n\ng.test('f32')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(`f32 tests`)\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get('f32');\n    await run(t, builtin('smoothstep'), [TypeF32, TypeF32, TypeF32], TypeF32, t.params, cases);\n  });\n\ng.test('f16')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(`f16 tests`)\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .unimplemented();\n"],"file":"smoothstep.spec.js"}