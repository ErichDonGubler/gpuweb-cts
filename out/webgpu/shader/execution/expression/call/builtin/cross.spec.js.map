{"version":3,"sources":["../../../../../../../src/webgpu/shader/execution/expression/call/builtin/cross.spec.ts"],"names":["description","makeTestGroup","GPUTest","TypeF32","TypeVec","crossInterval","kVectorTestValues","makeCaseCache","allInputSources","makeVectorPairToVectorIntervalCase","run","builtin","g","d","f32","makeCase","x","y","flatMap","i","map","j","test","specURL","desc","params","u","combine","unimplemented","fn","t","cases","get"],"mappings":";AAAA;AACA,GADA,OAAO,MAAMA,WAAW,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA,CANO,CAQP,SAASC,aAAT,QAA8B,kDAA9B;AACA,SAASC,OAAT,QAAwB,4BAAxB;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,mCAAjC;AACA,SAASC,aAAT,QAA8B,qCAA9B;AACA,SAASC,iBAAT,QAAkC,6BAAlC;AACA,SAASC,aAAT,QAA8B,qBAA9B;AACA;AACEC,eADF;;AAGEC,kCAHF;AAIEC,GAJF;AAKO,qBALP;;AAOA,SAASC,OAAT,QAAwB,cAAxB;;AAEA,OAAO,MAAMC,CAAC,GAAGX,aAAa,CAACC,OAAD,CAAvB;;AAEP,OAAO,MAAMW,CAAC,GAAGN,aAAa,CAAC,OAAD,EAAU;AACtCO,EAAAA,GAAG,EAAE,MAAM;AACT,UAAMC,QAAQ,GAAG,CAACC,CAAD,EAAcC,CAAd,KAAoC;AACnD,aAAOR,kCAAkC,CAACO,CAAD,EAAIC,CAAJ,EAAOZ,aAAP,CAAzC;AACD,KAFD;;AAIA,WAAOC,iBAAiB,CAAC,CAAD,CAAjB,CAAqBY,OAArB,CAA6B,CAAAC,CAAC,KAAI;AACvC,aAAOb,iBAAiB,CAAC,CAAD,CAAjB,CAAqBc,GAArB,CAAyB,CAAAC,CAAC,KAAI;AACnC,eAAON,QAAQ,CAACI,CAAD,EAAIE,CAAJ,CAAf;AACD,OAFM,CAAP;AAGD,KAJM,CAAP;AAKD,GAXqC,EAAV,CAAvB;;;AAcPT,CAAC,CAACU,IAAF,CAAO,gBAAP;AACGC,OADH,CACW,qDADX;AAEGC,IAFH,CAES,sBAFT;AAGGC,MAHH,CAGU,CAAAC,CAAC,KAAIA,CAAC,CAACC,OAAF,CAAU,aAAV,EAAyBnB,eAAzB,CAHf;AAIGoB,aAJH;;AAMAhB,CAAC,CAACU,IAAF,CAAO,KAAP;AACGC,OADH,CACW,qDADX;AAEGC,IAFH,CAES,WAFT;AAGGC,MAHH,CAGU,CAAAC,CAAC,KAAIA,CAAC,CAACC,OAAF,CAAU,aAAV,EAAyBnB,eAAzB,CAHf;AAIGqB,EAJH,CAIM,OAAMC,CAAN,KAAW;AACb,QAAMC,KAAK,GAAG,MAAMlB,CAAC,CAACmB,GAAF,CAAM,KAAN,CAApB;;AAEA,QAAMtB,GAAG;AACPoB,EAAAA,CADO;AAEPnB,EAAAA,OAAO,CAAC,OAAD,CAFA;AAGP,GAACP,OAAO,CAAC,CAAD,EAAID,OAAJ,CAAR,EAAsBC,OAAO,CAAC,CAAD,EAAID,OAAJ,CAA7B,CAHO;AAIPC,EAAAA,OAAO,CAAC,CAAD,EAAID,OAAJ,CAJA;AAKP2B,EAAAA,CAAC,CAACL,MALK;AAMPM,EAAAA,KANO,CAAT;;AAQD,CAfH;;AAiBAnB,CAAC,CAACU,IAAF,CAAO,KAAP;AACGC,OADH,CACW,qDADX;AAEGC,IAFH,CAES,WAFT;AAGGC,MAHH,CAGU,CAAAC,CAAC,KAAIA,CAAC,CAACC,OAAF,CAAU,aAAV,EAAyBnB,eAAzB,CAHf;AAIGoB,aAJH","sourcesContent":["export const description = `\nExecution tests for the 'cross' builtin function\n\nT is AbstractFloat, f32, or f16\n@const fn cross(e1: vec3<T> ,e2: vec3<T>) -> vec3<T>\nReturns the cross product of e1 and e2.\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../../gpu_test.js';\nimport { TypeF32, TypeVec } from '../../../../../util/conversion.js';\nimport { crossInterval } from '../../../../../util/f32_interval.js';\nimport { kVectorTestValues } from '../../../../../util/math.js';\nimport { makeCaseCache } from '../../case_cache.js';\nimport {\n  allInputSources,\n  Case,\n  makeVectorPairToVectorIntervalCase,\n  run,\n} from '../../expression.js';\n\nimport { builtin } from './builtin.js';\n\nexport const g = makeTestGroup(GPUTest);\n\nexport const d = makeCaseCache('cross', {\n  f32: () => {\n    const makeCase = (x: number[], y: number[]): Case => {\n      return makeVectorPairToVectorIntervalCase(x, y, crossInterval);\n    };\n\n    return kVectorTestValues[3].flatMap(i => {\n      return kVectorTestValues[3].map(j => {\n        return makeCase(i, j);\n      });\n    });\n  },\n});\n\ng.test('abstract_float')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(`abstract float tests`)\n  .params(u => u.combine('inputSource', allInputSources))\n  .unimplemented();\n\ng.test('f32')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(`f32 tests`)\n  .params(u => u.combine('inputSource', allInputSources))\n  .fn(async t => {\n    const cases = await d.get('f32');\n\n    await run(\n      t,\n      builtin('cross'),\n      [TypeVec(3, TypeF32), TypeVec(3, TypeF32)],\n      TypeVec(3, TypeF32),\n      t.params,\n      cases\n    );\n  });\n\ng.test('f16')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(`f16 tests`)\n  .params(u => u.combine('inputSource', allInputSources))\n  .unimplemented();\n"],"file":"cross.spec.js"}