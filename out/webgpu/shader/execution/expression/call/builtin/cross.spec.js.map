{"version":3,"file":"cross.spec.js","names":["description","makeTestGroup","GPUTest","TypeF32","TypeVec","crossInterval","vectorF32Range","makeCaseCache","allInputSources","generateVectorPairToVectorCases","run","builtin","g","d","f32","test","specURL","desc","params","u","combine","unimplemented","fn","t","cases","get"],"sources":["../../../../../../../src/webgpu/shader/execution/expression/call/builtin/cross.spec.ts"],"sourcesContent":["export const description = `\nExecution tests for the 'cross' builtin function\n\nT is AbstractFloat, f32, or f16\n@const fn cross(e1: vec3<T> ,e2: vec3<T>) -> vec3<T>\nReturns the cross product of e1 and e2.\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../../gpu_test.js';\nimport { TypeF32, TypeVec } from '../../../../../util/conversion.js';\nimport { crossInterval } from '../../../../../util/f32_interval.js';\nimport { vectorF32Range } from '../../../../../util/math.js';\nimport { makeCaseCache } from '../../case_cache.js';\nimport { allInputSources, generateVectorPairToVectorCases, run } from '../../expression.js';\n\nimport { builtin } from './builtin.js';\n\nexport const g = makeTestGroup(GPUTest);\n\nexport const d = makeCaseCache('cross', {\n  f32: () => {\n    return generateVectorPairToVectorCases(vectorF32Range(3), vectorF32Range(3), crossInterval);\n  },\n});\n\ng.test('abstract_float')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(`abstract float tests`)\n  .params(u => u.combine('inputSource', allInputSources))\n  .unimplemented();\n\ng.test('f32')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(`f32 tests`)\n  .params(u => u.combine('inputSource', allInputSources))\n  .fn(async t => {\n    const cases = await d.get('f32');\n\n    await run(\n      t,\n      builtin('cross'),\n      [TypeVec(3, TypeF32), TypeVec(3, TypeF32)],\n      TypeVec(3, TypeF32),\n      t.params,\n      cases\n    );\n  });\n\ng.test('f16')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(`f16 tests`)\n  .params(u => u.combine('inputSource', allInputSources))\n  .unimplemented();\n"],"mappings":";AAAA;AAAA,GAAA,OAAO,MAAMA,WAAW,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA,CAAC,CAED,SAASC,aAAa,QAAQ,kDAAkD;AAChF,SAASC,OAAO,QAAQ,4BAA4B;AACpD,SAASC,OAAO,EAAEC,OAAO,QAAQ,mCAAmC;AACpE,SAASC,aAAa,QAAQ,qCAAqC;AACnE,SAASC,cAAc,QAAQ,6BAA6B;AAC5D,SAASC,aAAa,QAAQ,qBAAqB;AACnD,SAASC,eAAe,EAAEC,+BAA+B,EAAEC,GAAG,QAAQ,qBAAqB;;AAE3F,SAASC,OAAO,QAAQ,cAAc;;AAEtC,OAAO,MAAMC,CAAC,GAAGX,aAAa,CAACC,OAAO,CAAC;;AAEvC,OAAO,MAAMW,CAAC,GAAGN,aAAa,CAAC,OAAO,EAAE;EACtCO,GAAG,EAAE,MAAM;IACT,OAAOL,+BAA+B,CAACH,cAAc,CAAC,CAAC,CAAC,EAAEA,cAAc,CAAC,CAAC,CAAC,EAAED,aAAa,CAAC;EAC7F;AACF,CAAC,CAAC;;AAEFO,CAAC,CAACG,IAAI,CAAC,gBAAgB,CAAC;AACrBC,OAAO,CAAC,qDAAqD,CAAC;AAC9DC,IAAI,CAAE,sBAAqB,CAAC;AAC5BC,MAAM,CAAC,CAAAC,CAAC,KAAIA,CAAC,CAACC,OAAO,CAAC,aAAa,EAAEZ,eAAe,CAAC,CAAC;AACtDa,aAAa,EAAE;;AAElBT,CAAC,CAACG,IAAI,CAAC,KAAK,CAAC;AACVC,OAAO,CAAC,qDAAqD,CAAC;AAC9DC,IAAI,CAAE,WAAU,CAAC;AACjBC,MAAM,CAAC,CAAAC,CAAC,KAAIA,CAAC,CAACC,OAAO,CAAC,aAAa,EAAEZ,eAAe,CAAC,CAAC;AACtDc,EAAE,CAAC,OAAMC,CAAC,KAAI;EACb,MAAMC,KAAK,GAAG,MAAMX,CAAC,CAACY,GAAG,CAAC,KAAK,CAAC;;EAEhC,MAAMf,GAAG;EACPa,CAAC;EACDZ,OAAO,CAAC,OAAO,CAAC;EAChB,CAACP,OAAO,CAAC,CAAC,EAAED,OAAO,CAAC,EAAEC,OAAO,CAAC,CAAC,EAAED,OAAO,CAAC,CAAC;EAC1CC,OAAO,CAAC,CAAC,EAAED,OAAO,CAAC;EACnBoB,CAAC,CAACL,MAAM;EACRM,KAAK,CACN;;AACH,CAAC,CAAC;;AAEJZ,CAAC,CAACG,IAAI,CAAC,KAAK,CAAC;AACVC,OAAO,CAAC,qDAAqD,CAAC;AAC9DC,IAAI,CAAE,WAAU,CAAC;AACjBC,MAAM,CAAC,CAAAC,CAAC,KAAIA,CAAC,CAACC,OAAO,CAAC,aAAa,EAAEZ,eAAe,CAAC,CAAC;AACtDa,aAAa,EAAE"}