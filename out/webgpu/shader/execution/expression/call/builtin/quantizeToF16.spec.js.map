{"version":3,"sources":["../../../../../../../src/webgpu/shader/execution/expression/call/builtin/quantizeToF16.spec.ts"],"names":["description","makeTestGroup","GPUTest","g","test","specURL","desc","unimplemented"],"mappings":";AAAA;AACA,GADA,OAAO,MAAMA,WAAW,GAAI;AAC5B;AACA,CAFO,CAIP,SAASC,aAAT,QAA8B,kDAA9B;AACA,SAASC,OAAT,QAAwB,4BAAxB;;AAEA,OAAO,MAAMC,CAAC,GAAGF,aAAa,CAACC,OAAD,CAAvB;;AAEPC,CAAC,CAACC,IAAF,CAAO,KAAP;AACGC,OADH,CACW,qDADX;AAEGC,IAFH;AAGK;AACL;AACA;AACA;AACA;AACA;AACA,CATA;;AAWGC,aAXH","sourcesContent":["export const description = `\nExecution tests for the 'quantizeToF16' builtin function\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../../gpu_test.js';\n\nexport const g = makeTestGroup(GPUTest);\n\ng.test('f32')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is f32 or vecN<f32>\n@const fn quantizeToF16(e: T ) -> T\nQuantizes a 32-bit floating point value e as if e were converted to a IEEE 754\nbinary16 value, and then converted back to a IEEE 754 binary32 value.\nComponent-wise when T is a vector.\n`\n  )\n  .unimplemented();\n"],"file":"quantizeToF16.spec.js"}