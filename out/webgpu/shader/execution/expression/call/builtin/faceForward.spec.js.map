{"version":3,"sources":["../../../../../../../src/webgpu/shader/execution/expression/call/builtin/faceForward.spec.ts"],"names":["description","makeTestGroup","GPUTest","anyOf","f32","TypeF32","TypeVec","Vector","faceForwardIntervals","kVectorSparseTestValues","quantizeToF32","makeCaseCache","allInputSources","run","builtin","g","d","f32_vec2","flatMap","i","j","map","k","makeCase","f32_vec3","f32_vec4","x","y","z","x_f32","y_f32","z_f32","intervals","input","expected","test","specURL","desc","params","u","combine","unimplemented","fn","t","cases","get"],"mappings":"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","sourcesContent":["export const description = `\nExecution tests for the 'faceForward' builtin function\n\nT is vecN<AbstractFloat>, vecN<f32>, or vecN<f16>\n@const fn faceForward(e1: T ,e2: T ,e3: T ) -> T\nReturns e1 if dot(e2,e3) is negative, and -e1 otherwise.\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../../gpu_test.js';\nimport { anyOf } from '../../../../../util/compare.js';\nimport { f32, TypeF32, TypeVec, Vector } from '../../../../../util/conversion.js';\nimport { faceForwardIntervals } from '../../../../../util/f32_interval.js';\nimport { kVectorSparseTestValues, quantizeToF32 } from '../../../../../util/math.js';\nimport { makeCaseCache } from '../../case_cache.js';\nimport { allInputSources, Case, run } from '../../expression.js';\n\nimport { builtin } from './builtin.js';\n\nexport const g = makeTestGroup(GPUTest);\n\nexport const d = makeCaseCache('faceForward', {\n  f32_vec2: () => {\n    return kVectorSparseTestValues[2].flatMap(i =>\n      kVectorSparseTestValues[2].flatMap(j =>\n        kVectorSparseTestValues[2].map(k => makeCase(i, j, k))\n      )\n    );\n  },\n  f32_vec3: () => {\n    return kVectorSparseTestValues[3].flatMap(i =>\n      kVectorSparseTestValues[3].flatMap(j =>\n        kVectorSparseTestValues[3].map(k => makeCase(i, j, k))\n      )\n    );\n  },\n  f32_vec4: () => {\n    return kVectorSparseTestValues[4].flatMap(i =>\n      kVectorSparseTestValues[4].flatMap(j =>\n        kVectorSparseTestValues[4].map(k => makeCase(i, j, k))\n      )\n    );\n  },\n});\n\n/**\n * @returns a `faceForward` Case for a triplet of vectors of f32s input\n *\n * Needs to be a custom implementation, since faceFowardIntervals returns an\n * array of vector of intervals, which are to be treated as discrete\n * possibilities.\n */\nconst makeCase = (x: number[], y: number[], z: number[]): Case => {\n  x = x.map(quantizeToF32);\n  y = y.map(quantizeToF32);\n  z = z.map(quantizeToF32);\n\n  const x_f32 = x.map(f32);\n  const y_f32 = y.map(f32);\n  const z_f32 = z.map(f32);\n\n  const intervals = faceForwardIntervals(x, y, z);\n\n  return {\n    input: [new Vector(x_f32), new Vector(y_f32), new Vector(z_f32)],\n    expected: anyOf(...intervals),\n  };\n};\n\ng.test('abstract_float')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(`abstract float tests`)\n  .params(u => u.combine('inputSource', allInputSources).combine('vectorize', [2, 3, 4] as const))\n  .unimplemented();\n\ng.test('f32_vec2')\n  .specURL('https://www.w3.org/TR/WGSL/#numeric-builtin-functions')\n  .desc(`f32 tests using vec2s`)\n  .params(u => u.combine('inputSource', allInputSources))\n  .fn(async t => {\n    const cases = await d.get('f32_vec2');\n    await run(\n      t,\n      builtin('faceForward'),\n      [TypeVec(2, TypeF32), TypeVec(2, TypeF32), TypeVec(2, TypeF32)],\n      TypeVec(2, TypeF32),\n      t.params,\n      cases\n    );\n  });\n\ng.test('f32_vec3')\n  .specURL('https://www.w3.org/TR/WGSL/#numeric-builtin-functions')\n  .desc(`f32 tests using vec3s`)\n  .params(u => u.combine('inputSource', allInputSources))\n  .fn(async t => {\n    const cases = await d.get('f32_vec3');\n    await run(\n      t,\n      builtin('faceForward'),\n      [TypeVec(3, TypeF32), TypeVec(3, TypeF32), TypeVec(3, TypeF32)],\n      TypeVec(3, TypeF32),\n      t.params,\n      cases\n    );\n  });\n\ng.test('f32_vec4')\n  .specURL('https://www.w3.org/TR/WGSL/#numeric-builtin-functions')\n  .desc(`f32 tests using vec4s`)\n  .params(u => u.combine('inputSource', allInputSources))\n  .fn(async t => {\n    const cases = await d.get('f32_vec4');\n    await run(\n      t,\n      builtin('faceForward'),\n      [TypeVec(4, TypeF32), TypeVec(4, TypeF32), TypeVec(4, TypeF32)],\n      TypeVec(4, TypeF32),\n      t.params,\n      cases\n    );\n  });\n\ng.test('f16')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(`f16 tests`)\n  .params(u => u.combine('inputSource', allInputSources).combine('vectorize', [2, 3, 4] as const))\n  .unimplemented();\n"],"file":"faceForward.spec.js"}