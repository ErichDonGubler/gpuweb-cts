{"version":3,"sources":["../../../../../../../src/webgpu/shader/execution/expression/call/builtin/distance.spec.ts"],"names":["description","makeTestGroup","GPUTest","TypeF32","TypeVec","distanceInterval","fullF32Range","kVectorSparseTestValues","makeCaseCache","allInputSources","makeBinaryToF32IntervalCase","makeVectorPairToF32IntervalCase","run","builtin","g","d","f32","makeCase","x","y","flatMap","i","map","j","f32_vec2","makeCaseVecF32","f32_vec3","f32_vec4","test","specURL","desc","params","u","combine","undefined","unimplemented","fn","t","cases","get"],"mappings":"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","sourcesContent":["export const description = `\nExecution tests for the 'distance' builtin function\n\nS is AbstractFloat, f32, f16\nT is S or vecN<S>\n@const fn distance(e1: T ,e2: T ) -> f32\nReturns the distance between e1 and e2 (e.g. length(e1-e2)).\n\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../../gpu_test.js';\nimport { TypeF32, TypeVec } from '../../../../../util/conversion.js';\nimport { distanceInterval } from '../../../../../util/f32_interval.js';\nimport { fullF32Range, kVectorSparseTestValues } from '../../../../../util/math.js';\nimport { makeCaseCache } from '../../case_cache.js';\nimport {\n  allInputSources,\n  Case,\n  makeBinaryToF32IntervalCase,\n  makeVectorPairToF32IntervalCase,\n  run,\n} from '../../expression.js';\n\nimport { builtin } from './builtin.js';\n\nexport const g = makeTestGroup(GPUTest);\n\nexport const d = makeCaseCache('distance', {\n  f32: () => {\n    const makeCase = (x: number, y: number): Case => {\n      return makeBinaryToF32IntervalCase(x, y, distanceInterval);\n    };\n    return fullF32Range().flatMap(i => fullF32Range().map(j => makeCase(i, j)));\n  },\n  f32_vec2: () => {\n    return kVectorSparseTestValues[2].flatMap(i =>\n      kVectorSparseTestValues[2].map(j => makeCaseVecF32(i, j))\n    );\n  },\n  f32_vec3: () => {\n    return kVectorSparseTestValues[3].flatMap(i =>\n      kVectorSparseTestValues[3].map(j => makeCaseVecF32(i, j))\n    );\n  },\n  f32_vec4: () => {\n    return kVectorSparseTestValues[4].flatMap(i =>\n      kVectorSparseTestValues[4].map(j => makeCaseVecF32(i, j))\n    );\n  },\n});\n\n/** @returns a `distance` Case for a pair of vectors of f32s input */\nconst makeCaseVecF32 = (x: number[], y: number[]): Case => {\n  return makeVectorPairToF32IntervalCase(x, y, distanceInterval);\n};\n\ng.test('abstract_float')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(`abstract float tests`)\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .unimplemented();\n\ng.test('f32')\n  .specURL('https://www.w3.org/TR/WGSL/#numeric-builtin-functions')\n  .desc(`f32 tests`)\n  .params(u => u.combine('inputSource', allInputSources))\n  .fn(async t => {\n    const cases = await d.get('f32');\n    await run(t, builtin('distance'), [TypeF32, TypeF32], TypeF32, t.params, cases);\n  });\n\ng.test('f32_vec2')\n  .specURL('https://www.w3.org/TR/WGSL/#numeric-builtin-functions')\n  .desc(`f32 tests using vec2s`)\n  .params(u => u.combine('inputSource', allInputSources))\n  .fn(async t => {\n    const cases = await d.get('f32_vec2');\n    await run(\n      t,\n      builtin('distance'),\n      [TypeVec(2, TypeF32), TypeVec(2, TypeF32)],\n      TypeF32,\n      t.params,\n      cases\n    );\n  });\n\ng.test('f32_vec3')\n  .specURL('https://www.w3.org/TR/WGSL/#numeric-builtin-functions')\n  .desc(`f32 tests using vec3s`)\n  .params(u => u.combine('inputSource', allInputSources))\n  .fn(async t => {\n    const cases = await d.get('f32_vec3');\n    await run(\n      t,\n      builtin('distance'),\n      [TypeVec(3, TypeF32), TypeVec(3, TypeF32)],\n      TypeF32,\n      t.params,\n      cases\n    );\n  });\n\ng.test('f32_vec4')\n  .specURL('https://www.w3.org/TR/WGSL/#numeric-builtin-functions')\n  .desc(`f32 tests using vec4s`)\n  .params(u => u.combine('inputSource', allInputSources))\n  .fn(async t => {\n    const cases = await d.get('f32_vec4');\n    await run(\n      t,\n      builtin('distance'),\n      [TypeVec(4, TypeF32), TypeVec(4, TypeF32)],\n      TypeF32,\n      t.params,\n      cases\n    );\n  });\n\ng.test('f16')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(`f16 tests`)\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .unimplemented();\n"],"file":"distance.spec.js"}