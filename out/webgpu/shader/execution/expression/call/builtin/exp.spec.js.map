{"version":3,"file":"exp.spec.js","names":["description","makeTestGroup","GPUTest","kValue","TypeF32","expInterval","biasedRange","linearRange","makeCaseCache","allInputSources","makeUnaryToF32IntervalCase","run","builtin","g","d","f32","makeCase","x","negative","min","max","positive","map","test","specURL","desc","params","u","combine","undefined","unimplemented","fn","t","cases","get"],"sources":["../../../../../../../src/webgpu/shader/execution/expression/call/builtin/exp.spec.ts"],"sourcesContent":["export const description = `\nExecution tests for the 'exp' builtin function\n\nS is AbstractFloat, f32, f16\nT is S or vecN<S>\n@const fn exp(e1: T ) -> T\nReturns the natural exponentiation of e1 (e.g. e^e1). Component-wise when T is a vector.\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../../gpu_test.js';\nimport { kValue } from '../../../../../util/constants.js';\nimport { TypeF32 } from '../../../../../util/conversion.js';\nimport { expInterval } from '../../../../../util/f32_interval.js';\nimport { biasedRange, linearRange } from '../../../../../util/math.js';\nimport { makeCaseCache } from '../../case_cache.js';\nimport { allInputSources, Case, makeUnaryToF32IntervalCase, run } from '../../expression.js';\n\nimport { builtin } from './builtin.js';\n\nexport const g = makeTestGroup(GPUTest);\n\nexport const d = makeCaseCache('exp', {\n  f32: () => {\n    const makeCase = (x: number): Case => {\n      return makeUnaryToF32IntervalCase(x, expInterval);\n    };\n\n    // floor(ln(max f32 value)) = 88, so exp(88) will be within range of a f32, but exp(89) will not\n    // floor(ln(max f64 value)) = 709, so exp(709) can be handled by the testing framework, but exp(710) will misbehave\n    return [\n      0, // Returns 1 by definition\n      -89, // Returns subnormal value\n      kValue.f32.negative.min, // Closest to returning 0 as possible\n      ...biasedRange(kValue.f32.negative.max, -88, 100),\n      ...biasedRange(kValue.f32.positive.min, 88, 100),\n      ...linearRange(89, 709, 10), // Overflows f32, but not f64\n    ].map(x => makeCase(x));\n  },\n});\n\ng.test('abstract_float')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(`abstract float tests`)\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .unimplemented();\n\ng.test('f32')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(`f32 tests`)\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get('f32');\n    await run(t, builtin('exp'), [TypeF32], TypeF32, t.params, cases);\n  });\n\ng.test('f16')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(`f16 tests`)\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .unimplemented();\n"],"mappings":";AAAA;AAAA,GAAA,OAAO,MAAMA,WAAW,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAED,SAASC,aAAa,QAAQ,kDAAkD;AAChF,SAASC,OAAO,QAAQ,4BAA4B;AACpD,SAASC,MAAM,QAAQ,kCAAkC;AACzD,SAASC,OAAO,QAAQ,mCAAmC;AAC3D,SAASC,WAAW,QAAQ,qCAAqC;AACjE,SAASC,WAAW,EAAEC,WAAW,QAAQ,6BAA6B;AACtE,SAASC,aAAa,QAAQ,qBAAqB;AACnD,SAASC,eAAe,EAAQC,0BAA0B,EAAEC,GAAG,QAAQ,qBAAqB;;AAE5F,SAASC,OAAO,QAAQ,cAAc;;AAEtC,OAAO,MAAMC,CAAC,GAAGZ,aAAa,CAACC,OAAO,CAAC;;AAEvC,OAAO,MAAMY,CAAC,GAAGN,aAAa,CAAC,KAAK,EAAE;EACpCO,GAAG,EAAE,MAAM;IACT,MAAMC,QAAQ,GAAG,CAACC,CAAS,KAAW;MACpC,OAAOP,0BAA0B,CAACO,CAAC,EAAEZ,WAAW,CAAC;IACnD,CAAC;;IAED;IACA;IACA,OAAO;IACL,CAAC,EAAE;IACH,CAAC,EAAE,EAAE;IACLF,MAAM,CAACY,GAAG,CAACG,QAAQ,CAACC,GAAG,EAAE;IACzB,GAAGb,WAAW,CAACH,MAAM,CAACY,GAAG,CAACG,QAAQ,CAACE,GAAG,EAAE,CAAC,EAAE,EAAE,GAAG,CAAC;IACjD,GAAGd,WAAW,CAACH,MAAM,CAACY,GAAG,CAACM,QAAQ,CAACF,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC;IAChD,GAAGZ,WAAW,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC,CAAE;IAAA,CAC9B,CAACe,GAAG,CAAC,CAAAL,CAAC,KAAID,QAAQ,CAACC,CAAC,CAAC,CAAC;EACzB;AACF,CAAC,CAAC;;AAEFJ,CAAC,CAACU,IAAI,CAAC,gBAAgB,CAAC;AACrBC,OAAO,CAAC,qDAAqD,CAAC;AAC9DC,IAAI,CAAE,sBAAqB,CAAC;AAC5BC,MAAM,CAAC,CAAAC,CAAC;AACPA,CAAC,CAACC,OAAO,CAAC,aAAa,EAAEnB,eAAe,CAAC,CAACmB,OAAO,CAAC,WAAW,EAAE,CAACC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAU,CAC9F;;AACAC,aAAa,EAAE;;AAElBjB,CAAC,CAACU,IAAI,CAAC,KAAK,CAAC;AACVC,OAAO,CAAC,qDAAqD,CAAC;AAC9DC,IAAI,CAAE,WAAU,CAAC;AACjBC,MAAM,CAAC,CAAAC,CAAC;AACPA,CAAC,CAACC,OAAO,CAAC,aAAa,EAAEnB,eAAe,CAAC,CAACmB,OAAO,CAAC,WAAW,EAAE,CAACC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAU,CAC9F;;AACAE,EAAE,CAAC,OAAMC,CAAC,KAAI;EACb,MAAMC,KAAK,GAAG,MAAMnB,CAAC,CAACoB,GAAG,CAAC,KAAK,CAAC;EAChC,MAAMvB,GAAG,CAACqB,CAAC,EAAEpB,OAAO,CAAC,KAAK,CAAC,EAAE,CAACR,OAAO,CAAC,EAAEA,OAAO,EAAE4B,CAAC,CAACN,MAAM,EAAEO,KAAK,CAAC;AACnE,CAAC,CAAC;;AAEJpB,CAAC,CAACU,IAAI,CAAC,KAAK,CAAC;AACVC,OAAO,CAAC,qDAAqD,CAAC;AAC9DC,IAAI,CAAE,WAAU,CAAC;AACjBC,MAAM,CAAC,CAAAC,CAAC;AACPA,CAAC,CAACC,OAAO,CAAC,aAAa,EAAEnB,eAAe,CAAC,CAACmB,OAAO,CAAC,WAAW,EAAE,CAACC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAU,CAC9F;;AACAC,aAAa,EAAE"}