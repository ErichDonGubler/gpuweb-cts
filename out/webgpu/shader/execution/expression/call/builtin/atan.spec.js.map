{"version":3,"file":"atan.spec.js","names":["description","makeTestGroup","GPUTest","TypeF32","atanInterval","fullF32Range","makeCaseCache","allInputSources","makeUnaryToF32IntervalCase","run","builtin","g","d","f32_non_const","makeCase","x","Number","NEGATIVE_INFINITY","Math","sqrt","POSITIVE_INFINITY","map","f32_const","test","specURL","desc","params","u","combine","undefined","unimplemented","fn","t","cases","get","inputSource"],"sources":["../../../../../../../src/webgpu/shader/execution/expression/call/builtin/atan.spec.ts"],"sourcesContent":["export const description = `\nExecution tests for the 'atan' builtin function\n\nS is AbstractFloat, f32, f16\nT is S or vecN<S>\n@const fn atan(e: T ) -> T\nReturns the arc tangent of e. Component-wise when T is a vector.\n\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../../gpu_test.js';\nimport { TypeF32 } from '../../../../../util/conversion.js';\nimport { atanInterval } from '../../../../../util/f32_interval.js';\nimport { fullF32Range } from '../../../../../util/math.js';\nimport { makeCaseCache } from '../../case_cache.js';\nimport { allInputSources, Case, makeUnaryToF32IntervalCase, run } from '../../expression.js';\n\nimport { builtin } from './builtin.js';\n\nexport const g = makeTestGroup(GPUTest);\n\nexport const d = makeCaseCache('atan', {\n  f32_non_const: () => {\n    const makeCase = (x: number): Case => {\n      return makeUnaryToF32IntervalCase(x, atanInterval);\n    };\n\n    return [\n      // Known values\n      Number.NEGATIVE_INFINITY,\n      -Math.sqrt(3),\n      -1,\n      -1 / Math.sqrt(3),\n      0,\n      1,\n      1 / Math.sqrt(3),\n      Math.sqrt(3),\n      Number.POSITIVE_INFINITY,\n\n      ...fullF32Range(),\n    ].map(x => makeCase(x));\n  },\n  f32_const: () => {\n    const makeCase = (x: number): Case => {\n      return makeUnaryToF32IntervalCase(x, atanInterval);\n    };\n\n    return [\n      // Known values\n      -Math.sqrt(3),\n      -1,\n      -1 / Math.sqrt(3),\n      0,\n      1,\n      1 / Math.sqrt(3),\n      Math.sqrt(3),\n\n      ...fullF32Range(),\n    ].map(x => makeCase(x));\n  },\n});\n\ng.test('abstract_float')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(`abstract float tests`)\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .unimplemented();\n\ng.test('f32')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nf32 tests\n\nTODO(#792): Decide what the ground-truth is for these tests. [1]\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get(t.params.inputSource === 'const' ? 'f32_const' : 'f32_non_const');\n    await run(t, builtin('atan'), [TypeF32], TypeF32, t.params, cases);\n  });\n\ng.test('f16')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(`f16 tests`)\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .unimplemented();\n"],"mappings":"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"}