{"version":3,"file":"bitcast.spec.js","names":["description","makeTestGroup","GPUTest","kBit","reinterpretF32AsI32","reinterpretF32AsU32","reinterpretU32AsF32","reinterpretU32AsI32","f32","i32","u32","TypeF32","TypeI32","TypeU32","fullF32Range","fullI32Range","fullU32Range","linearRange","isSubnormalNumberF32","makeCaseCache","allInputSources","run","builtin","g","f32Range","positive","zero","negative","map","u","numNaNs","f32RangeWithInfAndNaN","infinity","max","anyF32","v","matched","got","expected","anyI32","anyU32","f32CanMapToZero","f","f32ZerosInU32","f32Zeros","f32ZerosInI32","isFinite","Number","isNaN","POSITIVE_INFINITY","NEGATIVE_INFINITY","bitcastF32ToF32Comparator","acceptable","match","x","e","value","join","bitcastF32ToU32Comparator","bitcastF32ToI32Comparator","TODO_CASES","d","i32_to_i32","input","u32_to_u32","f32_inf_nan_to_f32","f32_to_f32","i32_to_u32","i32_to_f32","u32_to_i32","u32_to_f32","f32_inf_nan_to_i32","f32_to_i32","f32_inf_nan_to_u32","f32_to_u32","bitcastBuilder","canonicalDestType","params","destType","vectorize","alias","parameterTypes","resultType","cases","inputSource","test","specURL","desc","combine","undefined","fn","t","get","unimplemented"],"sources":["../../../../../../../src/webgpu/shader/execution/expression/call/builtin/bitcast.spec.ts"],"sourcesContent":["export const description = `\nExecution tests for the 'bitcast' builtin function\n\n@const @must_use fn bitcast<T>(e: T ) -> T\nT is concrete numeric scalar or concerete numeric vector\nIdentity function.\n\n@const @must_use fn bitcast<T>(e: S ) -> T\n@const @must_use fn bitcast<vecN<T>>(e: vecN<S> ) -> vecN<T>\nS is i32, u32, f32\nT is i32, u32, f32, and T is not S\nReinterpretation of bits.  Beware non-normal f32 values.\n\n@const @must_use fn bitcast<T>(e: vec2<f16> ) -> T\n@const @must_use fn bitcast<vec2<T>>(e: vec4<f16> ) -> vec2<T>\n@const @must_use fn bitcast<vec2<f16>>(e: T ) -> vec2<f16>\n@const @must_use fn bitcast<vec4<f16>>(e: vec2<T> ) -> vec4<f16>\nT is i32, u32, f32\n`;\n\nimport { TestParams } from '../../../../../../common/framework/fixture.js';\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../../gpu_test.js';\nimport { Comparison, Comparator } from '../../../../../util/compare.js';\nimport { kBit } from '../../../../../util/constants.js';\nimport {\n  reinterpretF32AsI32,\n  reinterpretF32AsU32,\n  reinterpretU32AsF32,\n  reinterpretU32AsI32,\n  f32,\n  i32,\n  u32,\n  Scalar,\n  Type,\n  TypeF32,\n  TypeI32,\n  TypeU32,\n  Value,\n} from '../../../../../util/conversion.js';\nimport {\n  fullF32Range,\n  fullI32Range,\n  fullU32Range,\n  linearRange,\n  isSubnormalNumberF32,\n} from '../../../../../util/math.js';\nimport { makeCaseCache } from '../../case_cache.js';\nimport { allInputSources, run, CaseList, InputSource, ShaderBuilder } from '../../expression.js';\n\nimport { builtin } from './builtin.js';\n\nexport const g = makeTestGroup(GPUTest);\n\nconst f32Range: number[] = [\n  ...fullF32Range(),\n  ...[kBit.f32.positive.zero, kBit.f32.negative.zero].map(u => reinterpretU32AsF32(u)),\n];\n\nconst numNaNs = 11;\nconst f32RangeWithInfAndNaN: number[] = [\n  ...f32Range,\n  ...[\n    // Cover NaNs evenly in integer space.\n    // The positive NaN with lowest integer representation is the integer for infinity,\n    // plus one.\n    // The positive NaN with highest integer representation is i32.max (!)\n    ...linearRange(kBit.f32.infinity.positive + 1, kBit.i32.positive.max, numNaNs),\n    // The negative NaN with lowest integer representation is the integer for negative\n    // infinity, plus one.\n    // The negative NaN with highest integer representation is u32.max (!)\n    ...linearRange(kBit.f32.infinity.negative + 1, kBit.u32.max, numNaNs),\n    kBit.f32.infinity.positive,\n    kBit.f32.infinity.negative,\n  ].map(u => reinterpretU32AsF32(u)),\n];\n\nconst anyF32: Comparator = v => ({ matched: true, got: `$v`, expected: 'any f32' });\nconst anyI32: Comparator = v => ({ matched: true, got: `$v`, expected: 'any i32' });\nconst anyU32: Comparator = v => ({ matched: true, got: `$v`, expected: 'any u32' });\n\nfunction f32CanMapToZero(f: number): boolean {\n  return f === 0 || isSubnormalNumberF32(f);\n}\nconst f32ZerosInU32 = [0, kBit.f32.negative.zero];\nconst f32Zeros = f32ZerosInU32.map(u => reinterpretU32AsF32(u));\nconst f32ZerosInI32 = f32ZerosInU32.map(u => reinterpretU32AsI32(u));\nfunction isFinite(f: number): boolean {\n  return !(Number.isNaN(f) || f === Number.POSITIVE_INFINITY || f === Number.NEGATIVE_INFINITY);\n}\n\n/**\n * @returns a Comparator for checking if a f32 value is a valid\n * bitcast conversion from f32.\n */\nfunction bitcastF32ToF32Comparator(f: number): Comparator {\n  if (!isFinite(f)) return anyF32;\n  const acceptable: number[] = [f, ...(f32CanMapToZero(f) ? f32Zeros : [])];\n  const match = (x: number): boolean => x === f || (f32CanMapToZero(f) && x === 0);\n  return (e: Value): Comparison => ({\n    matched: match((e as Scalar).value as number),\n    got: `${e}`,\n    expected: `${acceptable.join(' ')}`,\n  });\n}\n\n/**\n * @returns a Comparator for checking if a u32 value is a valid\n * bitcast conversion from f32.\n */\nfunction bitcastF32ToU32Comparator(f: number): Comparator {\n  if (!isFinite(f)) return anyU32;\n  const acceptable: number[] = [\n    reinterpretF32AsU32(f),\n    ...(f32CanMapToZero(f) ? f32ZerosInU32 : []),\n  ];\n  const match = (x: number): boolean =>\n    x === reinterpretF32AsU32(f) ||\n    (f32CanMapToZero(f) && (x === f32ZerosInU32[0] || x === f32ZerosInU32[1]));\n  return (e: Value): Comparison => ({\n    matched: match((e as Scalar).value as number),\n    got: `${e}`,\n    expected: `${acceptable.join(' ')}`,\n  });\n}\n\n/**\n * @returns a Comparator for checking if a i32 value is a valid\n * bitcast conversion from f32.\n */\nfunction bitcastF32ToI32Comparator(f: number): Comparator {\n  if (!isFinite(f)) return anyI32;\n  const acceptable: number[] = [\n    reinterpretF32AsI32(f),\n    ...(f32CanMapToZero(f) ? f32ZerosInI32 : []),\n  ];\n  const match = (x: number): boolean =>\n    x === reinterpretF32AsI32(f) ||\n    (f32CanMapToZero(f) && (x === f32ZerosInI32[0] || x === f32ZerosInI32[1]));\n  return (e: Value): Comparison => ({\n    matched: match((e as Scalar).value as number),\n    got: `${e}`,\n    expected: `${acceptable.join(' ')}`,\n  });\n}\n\nconst TODO_CASES: CaseList = [];\nexport const d = makeCaseCache('bitcast', {\n  // Identity cases\n  i32_to_i32: () => fullI32Range().map(e => ({ input: i32(e), expected: i32(e) })),\n  u32_to_u32: () => fullU32Range().map(e => ({ input: u32(e), expected: u32(e) })),\n  f32_inf_nan_to_f32: () =>\n    f32RangeWithInfAndNaN.map(e => ({ input: f32(e), expected: bitcastF32ToF32Comparator(e) })),\n  f32_to_f32: () => f32Range.map(e => ({ input: f32(e), expected: bitcastF32ToF32Comparator(e) })),\n  // i32,u32,f32 to different i32,u32,f32\n  i32_to_u32: () => fullI32Range().map(e => ({ input: i32(e), expected: u32(e) })),\n  i32_to_f32: () => TODO_CASES,\n  u32_to_i32: () => fullU32Range().map(e => ({ input: u32(e), expected: i32(e) })),\n  u32_to_f32: () => TODO_CASES,\n  f32_inf_nan_to_i32: () =>\n    f32RangeWithInfAndNaN.map(e => ({ input: f32(e), expected: bitcastF32ToI32Comparator(e) })),\n  f32_to_i32: () => f32Range.map(e => ({ input: f32(e), expected: bitcastF32ToI32Comparator(e) })),\n  f32_inf_nan_to_u32: () =>\n    f32RangeWithInfAndNaN.map(e => ({ input: f32(e), expected: bitcastF32ToU32Comparator(e) })),\n  f32_to_u32: () => f32Range.map(e => ({ input: f32(e), expected: bitcastF32ToU32Comparator(e) })),\n});\n\n/**\n * @returns a ShaderBuilder that generates a call to bitcast,\n * using appropriate destination type, which optionally can be\n * a WGSL type alias.\n */\nfunction bitcastBuilder(canonicalDestType: string, params: TestParams): ShaderBuilder {\n  const destType = params.vectorize\n    ? `vec${params.vectorize}<${canonicalDestType}>`\n    : canonicalDestType;\n\n  if (params.alias) {\n    return (\n      parameterTypes: Array<Type>,\n      resultType: Type,\n      cases: CaseList,\n      inputSource: InputSource\n    ) =>\n      `alias myalias = ${destType};\\n` +\n      builtin(`bitcast<myalias>`)(parameterTypes, resultType, cases, inputSource);\n  }\n  return builtin(`bitcast<${destType}>`);\n}\n\n// Identity cases\ng.test('i32_to_i32')\n  .specURL('https://www.w3.org/TR/WGSL/#bitcast-builtin')\n  .desc(`bitcast i32 to i32 tests`)\n  .params(u =>\n    u\n      .combine('inputSource', allInputSources)\n      .combine('vectorize', [undefined, 2, 3, 4] as const)\n      .combine('alias', [false, true])\n  )\n  .fn(async t => {\n    const cases = await d.get('i32_to_i32');\n    await run(t, bitcastBuilder('i32', t.params), [TypeI32], TypeI32, t.params, cases);\n  });\n\ng.test('u32_to_u32')\n  .specURL('https://www.w3.org/TR/WGSL/#bitcast-builtin')\n  .desc(`bitcast u32 to u32 tests`)\n  .params(u =>\n    u\n      .combine('inputSource', allInputSources)\n      .combine('vectorize', [undefined, 2, 3, 4] as const)\n      .combine('alias', [false, true])\n  )\n  .fn(async t => {\n    const cases = await d.get('u32_to_u32');\n    await run(t, bitcastBuilder('u32', t.params), [TypeU32], TypeU32, t.params, cases);\n  });\n\ng.test('f32_to_f32')\n  .specURL('https://www.w3.org/TR/WGSL/#bitcast-builtin')\n  .desc(`bitcast f32 to f32 tests`)\n  .params(u =>\n    u\n      .combine('inputSource', allInputSources)\n      .combine('vectorize', [undefined, 2, 3, 4] as const)\n      .combine('alias', [false, true])\n  )\n  .fn(async t => {\n    const cases = await d.get(\n      // Infinities and NaNs are errors in const-eval.\n      t.params.inputSource === 'const' ? 'f32_to_f32' : 'f32_inf_nan_to_f32'\n    );\n    await run(t, bitcastBuilder('f32', t.params), [TypeF32], TypeF32, t.params, cases);\n  });\n\n// To i32 from u32, f32\ng.test('u32_to_i32')\n  .specURL('https://www.w3.org/TR/WGSL/#bitcast-builtin')\n  .desc(`bitcast u32 to i32 tests`)\n  .params(u =>\n    u\n      .combine('inputSource', allInputSources)\n      .combine('vectorize', [undefined, 2, 3, 4] as const)\n      .combine('alias', [false, true])\n  )\n  .fn(async t => {\n    const cases = await d.get('u32_to_i32');\n    await run(t, bitcastBuilder('i32', t.params), [TypeU32], TypeI32, t.params, cases);\n  });\n\ng.test('f32_to_i32')\n  .specURL('https://www.w3.org/TR/WGSL/#bitcast-builtin')\n  .desc(`bitcast f32 to i32 tests`)\n  .params(u =>\n    u\n      .combine('inputSource', allInputSources)\n      .combine('vectorize', [undefined, 2, 3, 4] as const)\n      .combine('alias', [false, true])\n  )\n  .fn(async t => {\n    const cases = await d.get(\n      // Infinities and NaNs are errors in const-eval.\n      t.params.inputSource === 'const' ? 'f32_to_i32' : 'f32_inf_nan_to_i32'\n    );\n    await run(t, bitcastBuilder('i32', t.params), [TypeF32], TypeI32, t.params, cases);\n  });\n\n// To u32 from i32, f32\ng.test('i32_to_u32')\n  .specURL('https://www.w3.org/TR/WGSL/#bitcast-builtin')\n  .desc(`bitcast i32 to u32 tests`)\n  .params(u =>\n    u\n      .combine('inputSource', allInputSources)\n      .combine('vectorize', [undefined, 2, 3, 4] as const)\n      .combine('alias', [false, true])\n  )\n  .fn(async t => {\n    const cases = await d.get('i32_to_u32');\n    await run(t, bitcastBuilder('u32', t.params), [TypeI32], TypeU32, t.params, cases);\n  });\n\ng.test('f32_to_u32')\n  .specURL('https://www.w3.org/TR/WGSL/#bitcast-builtin')\n  .desc(`bitcast f32 to i32 tests`)\n  .params(u =>\n    u\n      .combine('inputSource', allInputSources)\n      .combine('vectorize', [undefined, 2, 3, 4] as const)\n      .combine('alias', [false, true])\n  )\n  .fn(async t => {\n    const cases = await d.get(\n      // Infinities and NaNs are errors in const-eval.\n      t.params.inputSource === 'const' ? 'f32_to_u32' : 'f32_inf_nan_to_u32'\n    );\n    await run(t, bitcastBuilder('u32', t.params), [TypeF32], TypeU32, t.params, cases);\n  });\n\n// To f32 from i32, u32\ng.test('i32_to_f32')\n  .specURL('https://www.w3.org/TR/WGSL/#bitcast-builtin')\n  .desc(`bitcast i32 to f32 tests`)\n  .params(u =>\n    u\n      .combine('inputSource', allInputSources)\n      .combine('vectorize', [undefined, 2, 3, 4] as const)\n      .combine('alias', [false, true])\n  )\n  .unimplemented();\n\ng.test('u32_to_f32')\n  .specURL('https://www.w3.org/TR/WGSL/#bitcast-builtin')\n  .desc(`bitcast u32 to f32 tests`)\n  .params(u =>\n    u\n      .combine('inputSource', allInputSources)\n      .combine('vectorize', [undefined, 2, 3, 4] as const)\n      .combine('alias', [false, true])\n  )\n  .unimplemented();\n\n// 16 bit types\n\n// f16 cases\n\n// f16: Identity\ng.test('f16_to_f16')\n  .specURL('https://www.w3.org/TR/WGSL/#bitcast-builtin')\n  .desc(`bitcast f16 to f16 tests`)\n  .params(u =>\n    u\n      .combine('inputSource', allInputSources)\n      .combine('vectorize', [undefined, 2, 3, 4] as const)\n      .combine('alias', [false, true])\n  )\n  .unimplemented();\n\n// f16: 32-bit scalar numeric to vec2<f16>\ng.test('i32_to_vec2h')\n  .specURL('https://www.w3.org/TR/WGSL/#bitcast-builtin')\n  .desc(`bitcast i32 to vec2h tests`)\n  .params(u =>\n    u\n      .combine('inputSource', allInputSources)\n      .combine('vectorize', [undefined, 2, 3, 4] as const)\n      .combine('alias', [false, true])\n  )\n  .unimplemented();\n\ng.test('u32_to_vec2h')\n  .specURL('https://www.w3.org/TR/WGSL/#bitcast-builtin')\n  .desc(`bitcast u32 to vec2h tests`)\n  .params(u =>\n    u\n      .combine('inputSource', allInputSources)\n      .combine('vectorize', [undefined, 2, 3, 4] as const)\n      .combine('alias', [false, true])\n  )\n  .unimplemented();\n\ng.test('f32_to_vec2h')\n  .specURL('https://www.w3.org/TR/WGSL/#bitcast-builtin')\n  .desc(`bitcast u32 to vec2h tests`)\n  .params(u =>\n    u\n      .combine('inputSource', allInputSources)\n      .combine('vectorize', [undefined, 2, 3, 4] as const)\n      .combine('alias', [false, true])\n  )\n  .unimplemented();\n\n// f16: vec2<32-bit scalar numeric> to vec4<f16>\ng.test('vec2i_to_vec4h')\n  .specURL('https://www.w3.org/TR/WGSL/#bitcast-builtin')\n  .desc(`bitcast vec2i to vec4h tests`)\n  .params(u =>\n    u\n      .combine('inputSource', allInputSources)\n      .combine('vectorize', [undefined, 2, 3, 4] as const)\n      .combine('alias', [false, true])\n  )\n  .unimplemented();\n\ng.test('vec2u_to_vec4h')\n  .specURL('https://www.w3.org/TR/WGSL/#bitcast-builtin')\n  .desc(`bitcast vec2u to vec4h tests`)\n  .params(u =>\n    u\n      .combine('inputSource', allInputSources)\n      .combine('vectorize', [undefined, 2, 3, 4] as const)\n      .combine('alias', [false, true])\n  )\n  .unimplemented();\n\ng.test('vec2f_to_vec4h')\n  .specURL('https://www.w3.org/TR/WGSL/#bitcast-builtin')\n  .desc(`bitcast vec2f to vec2h tests`)\n  .params(u =>\n    u\n      .combine('inputSource', allInputSources)\n      .combine('vectorize', [undefined, 2, 3, 4] as const)\n      .combine('alias', [false, true])\n  )\n  .unimplemented();\n\n// f16: vec2<f16> to 32-bit scalar numeric\ng.test('vec2h_to_i32')\n  .specURL('https://www.w3.org/TR/WGSL/#bitcast-builtin')\n  .desc(`bitcast vec2h to i32 tests`)\n  .params(u =>\n    u\n      .combine('inputSource', allInputSources)\n      .combine('vectorize', [undefined, 2, 3, 4] as const)\n      .combine('alias', [false, true])\n  )\n  .unimplemented();\n\ng.test('vec2h_to_u32')\n  .specURL('https://www.w3.org/TR/WGSL/#bitcast-builtin')\n  .desc(`bitcast vec2h to u32 tests`)\n  .params(u =>\n    u\n      .combine('inputSource', allInputSources)\n      .combine('vectorize', [undefined, 2, 3, 4] as const)\n      .combine('alias', [false, true])\n  )\n  .unimplemented();\n\ng.test('vec2h_to_f32')\n  .specURL('https://www.w3.org/TR/WGSL/#bitcast-builtin')\n  .desc(`bitcast vec2h to f32 tests`)\n  .params(u =>\n    u\n      .combine('inputSource', allInputSources)\n      .combine('vectorize', [undefined, 2, 3, 4] as const)\n      .combine('alias', [false, true])\n  )\n  .unimplemented();\n\n// f16: vec4<f16> to vec2<32-bit scalar numeric>\ng.test('vec4h_to_vec2i')\n  .specURL('https://www.w3.org/TR/WGSL/#bitcast-builtin')\n  .desc(`bitcast vec4h to vec2i tests`)\n  .params(u =>\n    u\n      .combine('inputSource', allInputSources)\n      .combine('vectorize', [undefined, 2, 3, 4] as const)\n      .combine('alias', [false, true])\n  )\n  .unimplemented();\n\ng.test('vec4h_to_vec2u')\n  .specURL('https://www.w3.org/TR/WGSL/#bitcast-builtin')\n  .desc(`bitcast vec4h to vec2u tests`)\n  .params(u =>\n    u\n      .combine('inputSource', allInputSources)\n      .combine('vectorize', [undefined, 2, 3, 4] as const)\n      .combine('alias', [false, true])\n  )\n  .unimplemented();\n\ng.test('vec4h_to_vec2f')\n  .specURL('https://www.w3.org/TR/WGSL/#bitcast-builtin')\n  .desc(`bitcast vec4h to vec2f tests`)\n  .params(u =>\n    u\n      .combine('inputSource', allInputSources)\n      .combine('vectorize', [undefined, 2, 3, 4] as const)\n      .combine('alias', [false, true])\n  )\n  .unimplemented();\n"],"mappings":"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"}