{"version":3,"sources":["../../../../../../../src/webgpu/shader/execution/expression/call/builtin/dot.spec.ts"],"names":["description","makeTestGroup","GPUTest","kValue","TypeF32","TypeVec","dotInterval","allInputSources","makeVectorPairF32IntervalCase","run","builtin","g","kFloatTestValues","Number","NEGATIVE_INFINITY","f32","negative","min","max","subnormal","positive","POSITIVE_INFINITY","kVectorTestValues","flatMap","f","test","specURL","desc","params","u","combine","unimplemented","fn","t","makeCase","x","y","cases","i","map","j"],"mappings":"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","sourcesContent":["export const description = `\nExecution tests for the 'dot' builtin function\n\nT is AbstractInt, AbstractFloat, i32, u32, f32, or f16\n@const fn dot(e1: vecN<T>,e2: vecN<T>) -> T\nReturns the dot product of e1 and e2.\n\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../../gpu_test.js';\nimport { kValue } from '../../../../../util/constants.js';\nimport { TypeF32, TypeVec } from '../../../../../util/conversion.js';\nimport { dotInterval } from '../../../../../util/f32_interval.js';\nimport { allInputSources, Case, makeVectorPairF32IntervalCase, run } from '../../expression.js';\n\nimport { builtin } from './builtin.js';\n\nexport const g = makeTestGroup(GPUTest);\n\n/** Values of interest to test against */\nconst kFloatTestValues: Array<number> = [\n  Number.NEGATIVE_INFINITY,\n  kValue.f32.negative.min,\n  -10.0,\n  -1.0,\n  kValue.f32.negative.max,\n  kValue.f32.subnormal.negative.min,\n  kValue.f32.subnormal.negative.max,\n  0.0,\n  kValue.f32.subnormal.positive.min,\n  kValue.f32.subnormal.positive.max,\n  kValue.f32.positive.min,\n  1.0,\n  10.0,\n  kValue.f32.positive.max,\n  Number.POSITIVE_INFINITY,\n];\n\n/**\n * Set of vectors, indexed by dimension, that contain interesting float values\n *\n * The tests do not do the simple option for coverage of computing the cartesian\n * product of all of the interesting float values N times for vecN tests,\n * because that creates a huge number of tests for vec3 and vec4, leading to\n * time outs.\n * Instead they insert the interesting f32 values into each location of the\n * vector to get a spread of testing over the entire range. This reduces the\n * number of cases being run substantially, but maintains coverage.\n */\nconst kVectorTestValues = {\n  2: kFloatTestValues.flatMap(f => [\n    [f, 1.0],\n    [1.0, f],\n  ]),\n  3: kFloatTestValues.flatMap(f => [\n    [f, 1.0, 2.0],\n    [1.0, f, 2.0],\n    [1.0, 2.0, f],\n  ]),\n  4: kFloatTestValues.flatMap(f => [\n    [f, 1.0, 2.0, 3.0],\n    [1.0, f, 2.0, 3.0],\n    [1.0, 2.0, f, 3.0],\n    [1.0, 2.0, 3.0, f],\n  ]),\n};\n\ng.test('abstract_int')\n  .specURL('https://www.w3.org/TR/WGSL/#vector-builtin-functions')\n  .desc(`abstract int tests`)\n  .params(u => u.combine('inputSource', allInputSources))\n  .unimplemented();\n\ng.test('i32')\n  .specURL('https://www.w3.org/TR/WGSL/#vector-builtin-functions')\n  .desc(`i32 tests`)\n  .params(u => u.combine('inputSource', allInputSources))\n  .unimplemented();\n\ng.test('u32')\n  .specURL('https://www.w3.org/TR/WGSL/#vector-builtin-functions')\n  .desc(`u32 tests`)\n  .params(u => u.combine('inputSource', allInputSources))\n  .unimplemented();\n\ng.test('abstract_float')\n  .specURL('https://www.w3.org/TR/WGSL/#vector-builtin-functions')\n  .desc(`abstract float test`)\n  .params(u => u.combine('inputSource', allInputSources))\n  .unimplemented();\n\ng.test('f32_vec2')\n  .specURL('https://www.w3.org/TR/WGSL/#vector-builtin-functions')\n  .desc(`f32 tests using vec2s`)\n  .params(u => u.combine('inputSource', allInputSources))\n  .fn(async t => {\n    const makeCase = (x: number[], y: number[]): Case => {\n      return makeVectorPairF32IntervalCase(x, y, dotInterval);\n    };\n\n    const cases: Case[] = kVectorTestValues[2].flatMap(i => {\n      return kVectorTestValues[2].map(j => {\n        return makeCase(i, j);\n      });\n    });\n\n    run(t, builtin('dot'), [TypeVec(2, TypeF32), TypeVec(2, TypeF32)], TypeF32, t.params, cases);\n  });\n\ng.test('f32_vec3')\n  .specURL('https://www.w3.org/TR/WGSL/#vector-builtin-functions')\n  .desc(`f32 tests using vec3s`)\n  .params(u => u.combine('inputSource', allInputSources))\n  .fn(async t => {\n    const makeCase = (x: number[], y: number[]): Case => {\n      return makeVectorPairF32IntervalCase(x, y, dotInterval);\n    };\n\n    const cases: Case[] = kVectorTestValues[3].flatMap(i => {\n      return kVectorTestValues[3].map(j => {\n        return makeCase(i, j);\n      });\n    });\n\n    run(t, builtin('dot'), [TypeVec(3, TypeF32), TypeVec(3, TypeF32)], TypeF32, t.params, cases);\n  });\n\ng.test('f32_vec4')\n  .specURL('https://www.w3.org/TR/WGSL/#vector-builtin-functions')\n  .desc(`f32 tests using vec3s`)\n  .params(u => u.combine('inputSource', allInputSources))\n  .fn(async t => {\n    const makeCase = (x: number[], y: number[]): Case => {\n      return makeVectorPairF32IntervalCase(x, y, dotInterval);\n    };\n\n    const cases: Case[] = kVectorTestValues[4].flatMap(i => {\n      return kVectorTestValues[4].map(j => {\n        return makeCase(i, j);\n      });\n    });\n\n    run(t, builtin('dot'), [TypeVec(4, TypeF32), TypeVec(4, TypeF32)], TypeF32, t.params, cases);\n  });\n\ng.test('f16')\n  .specURL('https://www.w3.org/TR/WGSL/#vector-builtin-functions')\n  .desc(`f16 tests`)\n  .params(u => u.combine('inputSource', allInputSources))\n  .unimplemented();\n"],"file":"dot.spec.js"}