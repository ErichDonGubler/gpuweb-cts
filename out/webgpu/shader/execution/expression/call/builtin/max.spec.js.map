{"version":3,"file":"max.spec.js","names":["description","makeTestGroup","GPUTest","kValue","i32","TypeF32","TypeI32","TypeU32","u32","maxInterval","fullF32Range","makeCaseCache","allInputSources","makeBinaryToF32IntervalCase","run","builtin","generateTestCases","values","makeCase","cases","Array","forEach","e","f","push","g","d","f32","x","y","numeric_range","infinity","positive","negative","lhs","rhs","test","specURL","desc","params","u","combine","undefined","unimplemented","fn","t","input","expected","Math","max","test_values","get"],"sources":["../../../../../../../src/webgpu/shader/execution/expression/call/builtin/max.spec.ts"],"sourcesContent":["export const description = `\nExecution tests for the 'max' builtin function\n\nS is AbstractInt, i32, or u32\nT is S or vecN<S>\n@const fn max(e1: T ,e2: T) -> T\nReturns e2 if e1 is less than e2, and e1 otherwise. Component-wise when T is a vector.\n\nS is AbstractFloat, f32, f16\nT is vecN<S>\n@const fn max(e1: T ,e2: T) -> T\nReturns e2 if e1 is less than e2, and e1 otherwise.\nIf one operand is a NaN, the other is returned.\nIf both operands are NaNs, a NaN is returned.\nComponent-wise when T is a vector.\n\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../../gpu_test.js';\nimport { kValue } from '../../../../../util/constants.js';\nimport { i32, TypeF32, TypeI32, TypeU32, u32 } from '../../../../../util/conversion.js';\nimport { maxInterval } from '../../../../../util/f32_interval.js';\nimport { fullF32Range } from '../../../../../util/math.js';\nimport { makeCaseCache } from '../../case_cache.js';\nimport { allInputSources, Case, makeBinaryToF32IntervalCase, run } from '../../expression.js';\n\nimport { builtin } from './builtin.js';\n\n/** Generate set of max test cases from list of interesting values */\nfunction generateTestCases(\n  values: Array<number>,\n  makeCase: (x: number, y: number) => Case\n): Array<Case> {\n  const cases = new Array<Case>();\n  values.forEach(e => {\n    values.forEach(f => {\n      cases.push(makeCase(e, f));\n    });\n  });\n  return cases;\n}\n\nexport const g = makeTestGroup(GPUTest);\n\nexport const d = makeCaseCache('max', {\n  f32: () => {\n    const makeCase = (x: number, y: number): Case => {\n      return makeBinaryToF32IntervalCase(x, y, maxInterval);\n    };\n\n    const cases: Array<Case> = [];\n    const numeric_range = fullF32Range();\n    numeric_range.push(kValue.f32.infinity.positive, kValue.f32.infinity.negative);\n    numeric_range.forEach(lhs => {\n      numeric_range.forEach(rhs => {\n        cases.push(makeCase(lhs, rhs));\n      });\n    });\n\n    return cases;\n  },\n});\n\ng.test('abstract_int')\n  .specURL('https://www.w3.org/TR/WGSL/#integer-builtin-functions')\n  .desc(`abstract int tests`)\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .unimplemented();\n\ng.test('u32')\n  .specURL('https://www.w3.org/TR/WGSL/#integer-builtin-functions')\n  .desc(`u32 tests`)\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const makeCase = (x: number, y: number): Case => {\n      return { input: [u32(x), u32(y)], expected: u32(Math.max(x, y)) };\n    };\n\n    const test_values: Array<number> = [0, 1, 2, 0x70000000, 0x80000000, 0xffffffff];\n    const cases = generateTestCases(test_values, makeCase);\n\n    await run(t, builtin('max'), [TypeU32, TypeU32], TypeU32, t.params, cases);\n  });\n\ng.test('i32')\n  .specURL('https://www.w3.org/TR/WGSL/#integer-builtin-functions')\n  .desc(`i32 tests`)\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const makeCase = (x: number, y: number): Case => {\n      return { input: [i32(x), i32(y)], expected: i32(Math.max(x, y)) };\n    };\n\n    const test_values: Array<number> = [-0x70000000, -2, -1, 0, 1, 2, 0x70000000];\n    const cases = generateTestCases(test_values, makeCase);\n\n    await run(t, builtin('max'), [TypeI32, TypeI32], TypeI32, t.params, cases);\n  });\n\ng.test('abstract_float')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(`abstract float tests`)\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .unimplemented();\n\ng.test('f32')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(`f32 tests`)\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get('f32');\n    await run(t, builtin('max'), [TypeF32, TypeF32], TypeF32, t.params, cases);\n  });\n\ng.test('f16')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(`f16 tests`)\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .unimplemented();\n"],"mappings":"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"}