{"version":3,"file":"depth.spec.js","names":["description","makeTestGroup","kDepthStencilFormats","kTextureFormatInfo","GPUTest","backgroundColor","triangleColor","g","test","desc","unimplemented","kMiddleDepthValue","params","u","combine","filter","format","depth","combineWithParams","depthCompare","depthClearValue","_expected","beforeAllSubcases","t","selectDeviceForTextureFormatOrSkipTestCase","fn","colorAttachmentFormat","colorAttachment","device","createTexture","size","width","height","depthOrArrayLayers","usage","GPUTextureUsage","COPY_SRC","RENDER_ATTACHMENT","colorAttachmentView","createView","depthTexture","TEXTURE_BINDING","depthTextureView","pipelineDescriptor","layout","vertex","module","createShaderModule","code","entryPoint","fragment","targets","primitive","topology","depthStencil","depthWriteEnabled","pipeline","createRenderPipeline","encoder","createCommandEncoder","depthStencilAttachment","view","depthLoadOp","depthStoreOp","stencil","stencilClearValue","stencilLoadOp","stencilStoreOp","pass","beginRenderPass","colorAttachments","storeOp","clearValue","r","b","a","loadOp","setPipeline","draw","end","queue","submit","finish","expectSinglePixelIn2DTexture","x","y","exp","Uint8Array","depthBufferFormat","reversed"],"sources":["../../../../../src/webgpu/api/operation/rendering/depth.spec.ts"],"sourcesContent":["export const description = `\nTest related to depth buffer, depth op, compare func, etc.\n`;\n\nimport { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { kDepthStencilFormats, kTextureFormatInfo } from '../../../capability_info.js';\nimport { GPUTest } from '../../../gpu_test.js';\n\nconst backgroundColor = [0x00, 0x00, 0x00, 0xff];\nconst triangleColor = [0xff, 0xff, 0xff, 0xff];\n\nexport const g = makeTestGroup(GPUTest);\n\ng.test('depth_bias')\n  .desc(\n    `Tests render results with different depth bias values: positive, negative, infinity, slope, clamp, etc.`\n  )\n  .unimplemented();\n\ng.test('depth_disabled').desc(`Tests render results with depth test disabled`).unimplemented();\n\ng.test('depth_write_disabled')\n  .desc(`Tests render results with depth write disabled`)\n  .unimplemented();\n\n// Use a depth value that's not exactly 0.5 because it is exactly between two depth16unorm value and\n// can get rounded either way (and a different way between shaders and clearDepthValue).\nconst kMiddleDepthValue = 0.5001;\n\ng.test('depth_compare_func')\n  .desc(\n    `Tests each depth compare function works properly. Clears the depth attachment to various values, and renders a point at depth 0.5 with various depthCompare modes.`\n  )\n  .params(u =>\n    u\n      .combine(\n        'format',\n        kDepthStencilFormats.filter(format => kTextureFormatInfo[format].depth)\n      )\n      .combineWithParams([\n        { depthCompare: 'never', depthClearValue: 1.0, _expected: backgroundColor },\n        { depthCompare: 'never', depthClearValue: kMiddleDepthValue, _expected: backgroundColor },\n        { depthCompare: 'never', depthClearValue: 0.0, _expected: backgroundColor },\n        { depthCompare: 'less', depthClearValue: 1.0, _expected: triangleColor },\n        { depthCompare: 'less', depthClearValue: kMiddleDepthValue, _expected: backgroundColor },\n        { depthCompare: 'less', depthClearValue: 0.0, _expected: backgroundColor },\n        { depthCompare: 'less-equal', depthClearValue: 1.0, _expected: triangleColor },\n        {\n          depthCompare: 'less-equal',\n          depthClearValue: kMiddleDepthValue,\n          _expected: triangleColor,\n        },\n        { depthCompare: 'less-equal', depthClearValue: 0.0, _expected: backgroundColor },\n        { depthCompare: 'equal', depthClearValue: 1.0, _expected: backgroundColor },\n        { depthCompare: 'equal', depthClearValue: kMiddleDepthValue, _expected: triangleColor },\n        { depthCompare: 'equal', depthClearValue: 0.0, _expected: backgroundColor },\n        { depthCompare: 'not-equal', depthClearValue: 1.0, _expected: triangleColor },\n        {\n          depthCompare: 'not-equal',\n          depthClearValue: kMiddleDepthValue,\n          _expected: backgroundColor,\n        },\n        { depthCompare: 'not-equal', depthClearValue: 0.0, _expected: triangleColor },\n        { depthCompare: 'greater-equal', depthClearValue: 1.0, _expected: backgroundColor },\n        {\n          depthCompare: 'greater-equal',\n          depthClearValue: kMiddleDepthValue,\n          _expected: triangleColor,\n        },\n        { depthCompare: 'greater-equal', depthClearValue: 0.0, _expected: triangleColor },\n        { depthCompare: 'greater', depthClearValue: 1.0, _expected: backgroundColor },\n        { depthCompare: 'greater', depthClearValue: kMiddleDepthValue, _expected: backgroundColor },\n        { depthCompare: 'greater', depthClearValue: 0.0, _expected: triangleColor },\n        { depthCompare: 'always', depthClearValue: 1.0, _expected: triangleColor },\n        { depthCompare: 'always', depthClearValue: kMiddleDepthValue, _expected: triangleColor },\n        { depthCompare: 'always', depthClearValue: 0.0, _expected: triangleColor },\n      ] as const)\n  )\n  .beforeAllSubcases(t => {\n    t.selectDeviceForTextureFormatOrSkipTestCase(t.params.format);\n  })\n  .fn(async t => {\n    const { depthCompare, depthClearValue, _expected, format } = t.params;\n\n    const colorAttachmentFormat = 'rgba8unorm';\n    const colorAttachment = t.device.createTexture({\n      format: colorAttachmentFormat,\n      size: { width: 1, height: 1, depthOrArrayLayers: 1 },\n      usage: GPUTextureUsage.COPY_SRC | GPUTextureUsage.RENDER_ATTACHMENT,\n    });\n    const colorAttachmentView = colorAttachment.createView();\n\n    const depthTexture = t.device.createTexture({\n      size: { width: 1, height: 1 },\n      format,\n      usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.TEXTURE_BINDING,\n    });\n    const depthTextureView = depthTexture.createView();\n\n    const pipelineDescriptor: GPURenderPipelineDescriptor = {\n      layout: 'auto',\n      vertex: {\n        module: t.device.createShaderModule({\n          code: `\n            @vertex fn main(\n              @builtin(vertex_index) VertexIndex : u32) -> @builtin(position) vec4<f32> {\n              return vec4<f32>(0.5, 0.5, ${kMiddleDepthValue}, 1.0);\n            }\n            `,\n        }),\n        entryPoint: 'main',\n      },\n      fragment: {\n        module: t.device.createShaderModule({\n          code: `\n            @fragment fn main() -> @location(0) vec4<f32> {\n              return vec4<f32>(1.0, 1.0, 1.0, 1.0);\n            }\n            `,\n        }),\n        entryPoint: 'main',\n        targets: [{ format: colorAttachmentFormat }],\n      },\n      primitive: { topology: 'point-list' },\n      depthStencil: {\n        depthWriteEnabled: true,\n        depthCompare,\n        format,\n      },\n    };\n    const pipeline = t.device.createRenderPipeline(pipelineDescriptor);\n\n    const encoder = t.device.createCommandEncoder();\n    const depthStencilAttachment: GPURenderPassDepthStencilAttachment = {\n      view: depthTextureView,\n      depthClearValue,\n      depthLoadOp: 'clear',\n      depthStoreOp: 'store',\n    };\n    if (kTextureFormatInfo[format].stencil) {\n      depthStencilAttachment.stencilClearValue = 0;\n      depthStencilAttachment.stencilLoadOp = 'clear';\n      depthStencilAttachment.stencilStoreOp = 'store';\n    }\n    const pass = encoder.beginRenderPass({\n      colorAttachments: [\n        {\n          view: colorAttachmentView,\n          storeOp: 'store',\n          clearValue: { r: 0.0, g: 0.0, b: 0.0, a: 1.0 },\n          loadOp: 'clear',\n        },\n      ],\n      depthStencilAttachment,\n    });\n    pass.setPipeline(pipeline);\n    pass.draw(1);\n    pass.end();\n    t.device.queue.submit([encoder.finish()]);\n\n    t.expectSinglePixelIn2DTexture(\n      colorAttachment,\n      colorAttachmentFormat,\n      { x: 0, y: 0 },\n      { exp: new Uint8Array(_expected) }\n    );\n  });\n\ng.test('reverse_depth')\n  .desc(\n    `Tests simple rendering with reversed depth buffer, ensures depth test works properly: fragments are in correct order and out of range fragments are clipped.\n    Note that in real use case the depth range remapping is done by the modified projection matrix.\n(see https://developer.nvidia.com/content/depth-precision-visualized).`\n  )\n  .params(u => u.combine('reversed', [false, true]))\n  .fn(async t => {\n    const colorAttachmentFormat = 'rgba8unorm';\n    const colorAttachment = t.device.createTexture({\n      format: colorAttachmentFormat,\n      size: { width: 1, height: 1, depthOrArrayLayers: 1 },\n      usage: GPUTextureUsage.COPY_SRC | GPUTextureUsage.RENDER_ATTACHMENT,\n    });\n    const colorAttachmentView = colorAttachment.createView();\n\n    const depthBufferFormat = 'depth32float';\n    const depthTexture = t.device.createTexture({\n      size: { width: 1, height: 1 },\n      format: depthBufferFormat,\n      usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.TEXTURE_BINDING,\n    });\n    const depthTextureView = depthTexture.createView();\n\n    const pipelineDescriptor: GPURenderPipelineDescriptor = {\n      layout: 'auto',\n      vertex: {\n        module: t.device.createShaderModule({\n          code: `\n            struct Output {\n              @builtin(position) Position : vec4<f32>,\n              @location(0) color : vec4<f32>,\n            };\n\n            @vertex fn main(\n              @builtin(vertex_index) VertexIndex : u32,\n              @builtin(instance_index) InstanceIndex : u32) -> Output {\n              // TODO: remove workaround for Tint unary array access broke\n              var zv : array<vec2<f32>, 4> = array<vec2<f32>, 4>(\n                  vec2<f32>(0.2, 0.2),\n                  vec2<f32>(0.3, 0.3),\n                  vec2<f32>(-0.1, -0.1),\n                  vec2<f32>(1.1, 1.1));\n              let z : f32 = zv[InstanceIndex].x;\n\n              var output : Output;\n              output.Position = vec4<f32>(0.5, 0.5, z, 1.0);\n              var colors : array<vec4<f32>, 4> = array<vec4<f32>, 4>(\n                  vec4<f32>(1.0, 0.0, 0.0, 1.0),\n                  vec4<f32>(0.0, 1.0, 0.0, 1.0),\n                  vec4<f32>(0.0, 0.0, 1.0, 1.0),\n                  vec4<f32>(1.0, 1.0, 1.0, 1.0)\n              );\n              output.color = colors[InstanceIndex];\n              return output;\n            }\n            `,\n        }),\n        entryPoint: 'main',\n      },\n      fragment: {\n        module: t.device.createShaderModule({\n          code: `\n            @fragment fn main(\n              @location(0) color : vec4<f32>\n              ) -> @location(0) vec4<f32> {\n              return color;\n            }\n            `,\n        }),\n        entryPoint: 'main',\n        targets: [{ format: colorAttachmentFormat }],\n      },\n      primitive: { topology: 'point-list' },\n      depthStencil: {\n        depthWriteEnabled: true,\n        depthCompare: t.params.reversed ? 'greater' : 'less',\n        format: depthBufferFormat,\n      },\n    };\n    const pipeline = t.device.createRenderPipeline(pipelineDescriptor);\n\n    const encoder = t.device.createCommandEncoder();\n    const pass = encoder.beginRenderPass({\n      colorAttachments: [\n        {\n          view: colorAttachmentView,\n          storeOp: 'store',\n          clearValue: { r: 0.5, g: 0.5, b: 0.5, a: 1.0 },\n          loadOp: 'clear',\n        },\n      ],\n      depthStencilAttachment: {\n        view: depthTextureView,\n\n        depthClearValue: t.params.reversed ? 0.0 : 1.0,\n        depthLoadOp: 'clear',\n        depthStoreOp: 'store',\n      },\n    });\n    pass.setPipeline(pipeline);\n    pass.draw(1, 4);\n    pass.end();\n    t.device.queue.submit([encoder.finish()]);\n\n    t.expectSinglePixelIn2DTexture(\n      colorAttachment,\n      colorAttachmentFormat,\n      { x: 0, y: 0 },\n      {\n        exp: new Uint8Array(\n          t.params.reversed ? [0x00, 0xff, 0x00, 0xff] : [0xff, 0x00, 0x00, 0xff]\n        ),\n      }\n    );\n  });\n"],"mappings":"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"}