{"version":3,"sources":["../../../../../src/webgpu/api/validation/texture/rg11b10ufloat_renderable.spec.ts"],"names":["description","makeTestGroup","GPUConst","ValidationTest","g","test","desc","params","u","combine","beforeAllSubcases","t","selectDeviceOrSkipTestCase","fn","sampleCount","descriptor","size","format","usage","TextureUsage","RENDER_ATTACHMENT","device","createTexture","texture","encoder","createCommandEncoder","beginRenderPass","colorAttachments","view","createView","clearValue","r","b","a","loadOp","storeOp","createRenderBundleEncoder","colorFormats","createRenderPipeline","layout","vertex","module","createShaderModule","code","getNoOpShaderCode","entryPoint","fragment","targets","writeMask","primitive","topology"],"mappings":"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","sourcesContent":["export const description = `\nTests for capabilities added by rg11b10ufloat-renderable flag.\n`;\n\nimport { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { GPUConst } from '../../../constants.js';\nimport { ValidationTest } from '../validation_test.js';\n\nexport const g = makeTestGroup(ValidationTest);\n\ng.test('create_texture')\n  .desc(\n    `\nTest that it is valid to create rg11b10ufloat texture with RENDER_ATTACHMENT usage and/or\nsampleCount > 1, iff rg11b10ufloat-renderable feature is enabled.\nNote, the createTexture tests cover these validation cases where this feature is not enabled.\n`\n  )\n  .params(u => u.combine('sampleCount', [1, 4]))\n  .beforeAllSubcases(t => {\n    t.selectDeviceOrSkipTestCase('rg11b10ufloat-renderable');\n  })\n  .fn(async t => {\n    const { sampleCount } = t.params;\n    const descriptor = {\n      size: [1, 1, 1],\n      format: 'rg11b10ufloat' as const,\n      sampleCount,\n      usage: GPUConst.TextureUsage.RENDER_ATTACHMENT,\n    };\n    t.device.createTexture(descriptor);\n  });\n\ng.test('begin_render_pass')\n  .desc(\n    `\nTest that it is valid to begin render pass with rg11b10ufloat texture format\niff rg11b10ufloat-renderable feature is enabled.\n`\n  )\n  .beforeAllSubcases(t => {\n    t.selectDeviceOrSkipTestCase('rg11b10ufloat-renderable');\n  })\n  .fn(async t => {\n    const texture = t.device.createTexture({\n      size: [1, 1, 1],\n      format: 'rg11b10ufloat',\n      sampleCount: 1,\n      usage: GPUConst.TextureUsage.RENDER_ATTACHMENT,\n    });\n    const encoder = t.device.createCommandEncoder();\n    encoder.beginRenderPass({\n      colorAttachments: [\n        {\n          view: texture.createView(),\n          clearValue: { r: 1.0, g: 0.0, b: 0.0, a: 1.0 },\n          loadOp: 'clear',\n          storeOp: 'store',\n        },\n      ],\n    });\n  });\n\ng.test('begin_render_bundle_encoder')\n  .desc(\n    `\nTest that it is valid to begin render bundle encoder with rg11b10ufloat texture\nformat iff rg11b10ufloat-renderable feature is enabled.\n`\n  )\n  .beforeAllSubcases(t => {\n    t.selectDeviceOrSkipTestCase('rg11b10ufloat-renderable');\n  })\n  .fn(async t => {\n    t.device.createRenderBundleEncoder({\n      colorFormats: ['rg11b10ufloat'],\n    });\n  });\n\ng.test('create_render_pipeline')\n  .desc(\n    `\nTest that it is valid to create render pipeline with rg11b10ufloat texture format\nin descriptor.fragment.targets iff rg11b10ufloat-renderable feature is enabled.\n`\n  )\n  .beforeAllSubcases(t => {\n    t.selectDeviceOrSkipTestCase('rg11b10ufloat-renderable');\n  })\n  .fn(async t => {\n    t.device.createRenderPipeline({\n      layout: 'auto',\n      vertex: {\n        module: t.device.createShaderModule({\n          code: t.getNoOpShaderCode('VERTEX'),\n        }),\n        entryPoint: 'main',\n      },\n      fragment: {\n        module: t.device.createShaderModule({\n          code: t.getNoOpShaderCode('FRAGMENT'),\n        }),\n        entryPoint: 'main',\n        targets: [{ format: 'rg11b10ufloat', writeMask: 0 }],\n      },\n      primitive: { topology: 'triangle-list' },\n    });\n  });\n"],"file":"rg11b10ufloat_renderable.spec.js"}