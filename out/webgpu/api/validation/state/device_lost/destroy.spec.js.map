{"version":3,"sources":["../../../../../../src/webgpu/api/validation/state/device_lost/destroy.spec.ts"],"names":["description","makeTestGroup","allBindingEntries","bindingTypeInfo","kBindableResources","kBufferUsageKeys","kBufferUsageInfo","kBufferUsageCopy","kBufferUsageCopyInfo","kCompressedTextureFormats","kTextureUsageType","kTextureUsageTypeInfo","kTextureUsageCopy","kTextureUsageCopyInfo","kRegularTextureFormats","kRenderableColorTextureFormats","kShaderStageKeys","kTextureFormatInfo","kQueryTypes","ValidationTest","DeviceDestroyTests","executeAfterDestroy","fn","awaitLost","expectDeviceLost","expectValidationError","device","destroy","lostInfo","lost","expect","reason","g","test","desc","params","u","combine","beginSubcases","filter","usageType","usageCopy","t","mappedAtCreation","createBuffer","size","usage","format","info","renderable","storage","blockWidth","blockHeight","createTexture","width","height","feature","selectDeviceOrSkipTestCase","texture","createView","createSampler","entry","visibility","validStages","createBindGroupLayout","entries","binding","resourceType","resource","layout","getBindingResource","createBindGroup","bindGroupLayout","createPipelineLayout","bindGroupLayouts","stage","createShaderModule","code","getNoOpShaderCode","cShader","createComputePipeline","compute","module","entryPoint","vShader","fShader","createRenderPipeline","vertex","fragment","targets","writeMask","createCommandEncoder","createRenderBundleEncoder","colorFormats","type","selectDeviceForQueryTypeOrSkipTestCase","createQuerySet","count","unimplemented"],"mappings":"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","sourcesContent":["export const description = `\nTests for device lost induced via destroy.\n  - Tests that prior to device destruction, valid APIs do not generate errors (control case).\n  - After device destruction, runs the same APIs. No expected observable results, so test crash or future failures are the only current failure indicators.\n`;\n\nimport { makeTestGroup } from '../../../../../common/framework/test_group.js';\nimport {\n  allBindingEntries,\n  bindingTypeInfo,\n  kBindableResources,\n  kBufferUsageKeys,\n  kBufferUsageInfo,\n  kBufferUsageCopy,\n  kBufferUsageCopyInfo,\n  kCompressedTextureFormats,\n  kTextureUsageType,\n  kTextureUsageTypeInfo,\n  kTextureUsageCopy,\n  kTextureUsageCopyInfo,\n  kRegularTextureFormats,\n  kRenderableColorTextureFormats,\n  kShaderStageKeys,\n  kTextureFormatInfo,\n  kQueryTypes,\n} from '../../../../capability_info.js';\nimport { ValidationTest } from '../../validation_test.js';\n\nclass DeviceDestroyTests extends ValidationTest {\n  /**\n   * Expects that `fn` does not produce any errors before the device is destroyed, and then calls\n   * `fn` after the device is destroyed without any specific expectation. If `awaitLost` is true, we\n   * also wait for device.lost to resolve before executing `fn` in the destroy case.\n   */\n  async executeAfterDestroy(fn: () => void, awaitLost: boolean): Promise<void> {\n    this.expectDeviceLost('destroyed');\n\n    this.expectValidationError(fn, false);\n    this.device.destroy();\n    if (awaitLost) {\n      const lostInfo = await this.device.lost;\n      this.expect(lostInfo.reason === 'destroyed');\n    }\n    fn();\n  }\n}\n\nexport const g = makeTestGroup(DeviceDestroyTests);\n\ng.test('createBuffer')\n  .desc(\n    `\nTests creating buffers on destroyed device. Tests valid combinations of:\n  - Various usages\n  - Mapped at creation or not\n  `\n  )\n  .params(u =>\n    u\n      .combine('usageType', kBufferUsageKeys)\n      .beginSubcases()\n      .combine('usageCopy', kBufferUsageCopy)\n      .combine('awaitLost', [true, false])\n      .filter(({ usageType, usageCopy }) => {\n        if (usageType === 'COPY_SRC' || usageType === 'COPY_DST') {\n          return false;\n        }\n        if (usageType === 'MAP_READ') {\n          return usageCopy === 'COPY_NONE' || usageCopy === 'COPY_DST';\n        }\n        if (usageType === 'MAP_WRITE') {\n          return usageCopy === 'COPY_NONE' || usageCopy === 'COPY_SRC';\n        }\n        return true;\n      })\n      .combine('mappedAtCreation', [true, false])\n  )\n  .fn(async t => {\n    const { awaitLost, usageType, usageCopy, mappedAtCreation } = t.params;\n    await t.executeAfterDestroy(() => {\n      t.device.createBuffer({\n        size: 16,\n        usage: kBufferUsageInfo[usageType] | kBufferUsageCopyInfo[usageCopy],\n        mappedAtCreation,\n      });\n    }, awaitLost);\n  });\n\ng.test('createTexture,2d,uncompressed_format')\n  .desc(\n    `\nTests creating 2d uncompressed textures on destroyed device. Tests valid combinations of:\n  - Various uncompressed texture formats\n  - Various usages\n  `\n  )\n  .params(u =>\n    u\n      .combine('format', kRegularTextureFormats)\n      .beginSubcases()\n      .combine('usageType', kTextureUsageType)\n      .combine('usageCopy', kTextureUsageCopy)\n      .combine('awaitLost', [true, false])\n      .filter(({ format, usageType }) => {\n        const info = kTextureFormatInfo[format];\n        return !(\n          (!info.renderable && usageType === 'render') ||\n          (!info.storage && usageType === 'storage')\n        );\n      })\n  )\n  .fn(async t => {\n    const { awaitLost, format, usageType, usageCopy } = t.params;\n    const { blockWidth, blockHeight } = kTextureFormatInfo[format];\n    await t.executeAfterDestroy(() => {\n      t.device.createTexture({\n        size: { width: blockWidth, height: blockHeight },\n        usage: kTextureUsageTypeInfo[usageType] | kTextureUsageCopyInfo[usageCopy],\n        format,\n      });\n    }, awaitLost);\n  });\n\ng.test('createTexture,2d,compressed_format')\n  .desc(\n    `\nTests creating 2d compressed textures on destroyed device. Tests valid combinations of:\n  - Various compressed texture formats\n  - Various usages\n  `\n  )\n  .params(u =>\n    u\n      .combine('format', kCompressedTextureFormats)\n      .beginSubcases()\n      .combine('usageType', kTextureUsageType)\n      .combine('usageCopy', kTextureUsageCopy)\n      .combine('awaitLost', [true, false])\n      .filter(({ format, usageType }) => {\n        const info = kTextureFormatInfo[format];\n        return !(\n          (!info.renderable && usageType === 'render') ||\n          (!info.storage && usageType === 'storage')\n        );\n      })\n  )\n  .fn(async t => {\n    const { awaitLost, format, usageType, usageCopy } = t.params;\n    const { blockWidth, blockHeight, feature } = kTextureFormatInfo[format];\n    await t.selectDeviceOrSkipTestCase(feature);\n    await t.executeAfterDestroy(() => {\n      t.device.createTexture({\n        size: { width: blockWidth, height: blockHeight },\n        usage: kTextureUsageTypeInfo[usageType] | kTextureUsageCopyInfo[usageCopy],\n        format,\n      });\n    }, awaitLost);\n  });\n\ng.test('createView,2d,uncompressed_format')\n  .desc(\n    `\nTests creating texture views on 2d uncompressed textures from destroyed device. Tests valid combinations of:\n  - Various uncompressed texture formats\n  - Various usages\n  `\n  )\n  .params(u =>\n    u\n      .combine('format', kRegularTextureFormats)\n      .beginSubcases()\n      .combine('usageType', kTextureUsageType)\n      .combine('usageCopy', kTextureUsageCopy)\n      .combine('awaitLost', [true, false])\n      .filter(({ format, usageType }) => {\n        const info = kTextureFormatInfo[format];\n        return !(\n          (!info.renderable && usageType === 'render') ||\n          (!info.storage && usageType === 'storage')\n        );\n      })\n  )\n  .fn(async t => {\n    const { awaitLost, format, usageType, usageCopy } = t.params;\n    const { blockWidth, blockHeight } = kTextureFormatInfo[format];\n    const texture = t.device.createTexture({\n      size: { width: blockWidth, height: blockHeight },\n      usage: kTextureUsageTypeInfo[usageType] | kTextureUsageCopyInfo[usageCopy],\n      format,\n    });\n    await t.executeAfterDestroy(() => {\n      texture.createView({ format });\n    }, awaitLost);\n  });\n\ng.test('createView,2d,compressed_format')\n  .desc(\n    `\nTests creating texture views on 2d compressed textures from destroyed device. Tests valid combinations of:\n  - Various compressed texture formats\n  - Various usages\n  `\n  )\n  .params(u =>\n    u\n      .combine('format', kCompressedTextureFormats)\n      .beginSubcases()\n      .combine('usageType', kTextureUsageType)\n      .combine('usageCopy', kTextureUsageCopy)\n      .combine('awaitLost', [true, false])\n      .filter(({ format, usageType }) => {\n        const info = kTextureFormatInfo[format];\n        return !(\n          (!info.renderable && usageType === 'render') ||\n          (!info.storage && usageType === 'storage')\n        );\n      })\n  )\n  .fn(async t => {\n    const { awaitLost, format, usageType, usageCopy } = t.params;\n    const { blockWidth, blockHeight, feature } = kTextureFormatInfo[format];\n    await t.selectDeviceOrSkipTestCase(feature);\n    const texture = t.device.createTexture({\n      size: { width: blockWidth, height: blockHeight },\n      usage: kTextureUsageTypeInfo[usageType] | kTextureUsageCopyInfo[usageCopy],\n      format,\n    });\n    await t.executeAfterDestroy(() => {\n      texture.createView({ format });\n    }, awaitLost);\n  });\n\ng.test('createSampler')\n  .desc(\n    `\nTests creating samplers on destroyed device.\n  `\n  )\n  .params(u => u.beginSubcases().combine('awaitLost', [true, false]))\n  .fn(async t => {\n    const { awaitLost } = t.params;\n    await t.executeAfterDestroy(() => {\n      t.device.createSampler();\n    }, awaitLost);\n  });\n\ng.test('createBindGroupLayout')\n  .desc(\n    `\nTests creating bind group layouts on destroyed device. Tests valid combinations of:\n  - Various valid binding entries\n  - Maximum set of visibility for each binding entry\n  `\n  )\n  .params(u =>\n    u.combine('entry', allBindingEntries(false)).beginSubcases().combine('awaitLost', [true, false])\n  )\n  .fn(async t => {\n    const { awaitLost, entry } = t.params;\n    const visibility = bindingTypeInfo(entry).validStages;\n    await t.executeAfterDestroy(() => {\n      t.device.createBindGroupLayout({\n        entries: [{ binding: 0, visibility, ...entry }],\n      });\n    }, awaitLost);\n  });\n\ng.test('createBindGroup')\n  .desc(\n    `\nTests creating bind group on destroyed device. Tests valid combinations of:\n  - Various binded resource types\n  - Various valid binding entries\n  - Maximum set of visibility for each binding entry\n  `\n  )\n  .desc(`A destroyed device should not be able to create any valid bind groups.`)\n  .params(u =>\n    u\n      .combine('resourceType', kBindableResources)\n      .combine('entry', allBindingEntries(false))\n      .filter(({ resourceType, entry }) => {\n        const info = bindingTypeInfo(entry);\n        switch (info.resource) {\n          // Either type of sampler may be bound to a filtering sampler binding.\n          case 'filtSamp':\n            return resourceType === 'filtSamp' || resourceType === 'nonFiltSamp';\n          // But only non-filtering samplers can be used with non-filtering sampler bindings.\n          case 'nonFiltSamp':\n            return resourceType === 'nonFiltSamp';\n          default:\n            return info.resource === resourceType;\n        }\n      })\n      .beginSubcases()\n      .combine('awaitLost', [true, false])\n  )\n  .fn(async t => {\n    const { awaitLost, resourceType, entry } = t.params;\n    const visibility = bindingTypeInfo(entry).validStages;\n    const layout = t.device.createBindGroupLayout({\n      entries: [{ binding: 0, visibility, ...entry }],\n    });\n    const resource = t.getBindingResource(resourceType);\n    await t.executeAfterDestroy(() => {\n      t.device.createBindGroup({ layout, entries: [{ binding: 0, resource }] });\n    }, awaitLost);\n  });\n\ng.test('createPipelineLayout')\n  .desc(\n    `\nTests creating pipeline layouts on destroyed device. Tests valid combinations of:\n  - Various bind groups with valid binding entries\n  - Maximum set of visibility for each binding entry\n  `\n  )\n  .params(u =>\n    u.combine('entry', allBindingEntries(false)).beginSubcases().combine('awaitLost', [true, false])\n  )\n  .fn(async t => {\n    const { awaitLost, entry } = t.params;\n    const visibility = bindingTypeInfo(entry).validStages;\n    const bindGroupLayout = t.device.createBindGroupLayout({\n      entries: [{ binding: 0, visibility, ...entry }],\n    });\n    await t.executeAfterDestroy(() => {\n      t.device.createPipelineLayout({\n        bindGroupLayouts: [bindGroupLayout],\n      });\n    }, awaitLost);\n  });\n\ng.test('createShaderModule')\n  .desc(\n    `\nTests creating shader modules on destroyed device.\n  - Tests all shader stages: vertex, fragment, compute\n  `\n  )\n  .params(u =>\n    u.combine('stage', kShaderStageKeys).beginSubcases().combine('awaitLost', [true, false])\n  )\n  .fn(async t => {\n    const { awaitLost, stage } = t.params;\n    await t.executeAfterDestroy(() => {\n      t.device.createShaderModule({ code: t.getNoOpShaderCode(stage) });\n    }, awaitLost);\n  });\n\ng.test('createComputePipeline')\n  .desc(\n    `\nTests creating compute pipeline on destroyed device.\n  - Tests with a valid no-op compute shader\n  `\n  )\n  .params(u => u.beginSubcases().combine('awaitLost', [true, false]))\n  .fn(async t => {\n    const { awaitLost } = t.params;\n    const cShader = t.device.createShaderModule({ code: t.getNoOpShaderCode('COMPUTE') });\n    await t.executeAfterDestroy(() => {\n      t.device.createComputePipeline({\n        compute: { module: cShader, entryPoint: 'main' },\n      });\n    }, awaitLost);\n  });\n\ng.test('createRenderPipeline')\n  .desc(\n    `\nTests creating render pipeline on destroyed device.\n  - Tests with valid no-op vertex and fragment shaders\n  `\n  )\n  .params(u => u.beginSubcases().combine('awaitLost', [true, false]))\n  .fn(async t => {\n    const { awaitLost } = t.params;\n    const vShader = t.device.createShaderModule({ code: t.getNoOpShaderCode('VERTEX') });\n    const fShader = t.device.createShaderModule({ code: t.getNoOpShaderCode('FRAGMENT') });\n    await t.executeAfterDestroy(() => {\n      t.device.createRenderPipeline({\n        vertex: { module: vShader, entryPoint: 'main' },\n        fragment: {\n          module: fShader,\n          entryPoint: 'main',\n          targets: [{ format: 'rgba8unorm', writeMask: 0 }],\n        },\n      });\n    }, awaitLost);\n  });\n\ng.test('createCommandEncoder')\n  .desc(\n    `\nTests creating command encoders on destroyed device.\n  `\n  )\n  .params(u => u.beginSubcases().combine('awaitLost', [true, false]))\n  .fn(async t => {\n    const { awaitLost } = t.params;\n    await t.executeAfterDestroy(() => {\n      t.device.createCommandEncoder();\n    }, awaitLost);\n  });\n\ng.test('createRenderBundleEncoder')\n  .desc(\n    `\nTests creating render bundle encoders on destroyed device.\n  - Tests various renderable texture color formats\n  `\n  )\n  .params(u =>\n    u\n      .combine('format', kRenderableColorTextureFormats)\n      .beginSubcases()\n      .combine('awaitLost', [true, false])\n  )\n  .fn(async t => {\n    const { awaitLost, format } = t.params;\n    await t.executeAfterDestroy(() => {\n      t.device.createRenderBundleEncoder({ colorFormats: [format] });\n    }, awaitLost);\n  });\n\ng.test('createQuerySet')\n  .desc(\n    `\nTests creating query sets on destroyed device.\n  - Tests various query set types\n  `\n  )\n  .params(u => u.combine('type', kQueryTypes).beginSubcases().combine('awaitLost', [true, false]))\n  .fn(async t => {\n    const { awaitLost, type } = t.params;\n    await t.selectDeviceForQueryTypeOrSkipTestCase(type);\n    await t.executeAfterDestroy(() => {\n      t.device.createQuerySet({ type, count: 4 });\n    }, awaitLost);\n  });\n\ng.test('command,copyBufferToBuffer')\n  .desc(\n    `\nTests copyBufferToBuffer command on destroyed device fails.\n  - Tests that finishing encoding fails on destroyed device\n  - Tests that submitting command fails on destroyed device\n  `\n  )\n  .unimplemented();\n\ng.test('command,copyBufferToTexture')\n  .desc(\n    `\nTests copyBufferToTexture command on destroyed device fails.\n  - Tests that finishing encoding fails on destroyed device\n  - Tests that submitting command fails on destroyed device\n  `\n  )\n  .unimplemented();\n\ng.test('command,copyTextureToBuffer')\n  .desc(\n    `\nTests copyTextureToBuffer command on destroyed device fails.\n  - Tests that finishing encoding fails on destroyed device\n  - Tests that submitting command fails on destroyed device\n  `\n  )\n  .unimplemented();\n\ng.test('command,copyTextureToTexture')\n  .desc(\n    `\nTests copyTextureToTexture command on destroyed device fails.\n  - Tests that finishing encoding fails on destroyed device\n  - Tests that submitting command fails on destroyed device\n  `\n  )\n  .unimplemented();\n\ng.test('command,clearBuffer')\n  .desc(\n    `\nTests encoding and finishing a clearBuffer command on destroyed device fails.\n  - Tests that finishing encoding fails on destroyed device\n  - Tests that submitting command fails on destroyed device\n  `\n  )\n  .unimplemented();\n\ng.test('command,writeTimestamp')\n  .desc(\n    `\nTests encoding and finishing a writeTimestamp command on destroyed device fails.\n  - Tests that finishing encoding fails on destroyed device\n  - Tests that submitting command fails on destroyed device\n  `\n  )\n  .unimplemented();\n\ng.test('command,resolveQuerySet')\n  .desc(\n    `\nTests encoding and finishing a resolveQuerySet command on destroyed device fails.\n  - Tests that finishing encoding fails on destroyed device\n  - Tests that submitting command fails on destroyed device\n  `\n  )\n  .unimplemented();\n\ng.test('command,computePass,dispatch')\n  .desc(\n    `\nTests encoding and dispatching a simple valid compute pass on destroyed device fails.\n  - Binds valid pipeline and bindgroups, then dispatches\n  - Tests that finishing encoding fails on destroyed device\n  - Tests that submitting command fails on destroyed device\n  `\n  )\n  .unimplemented();\n\ng.test('command,renderPass,draw')\n  .desc(\n    `\nTests encoding and finishing a simple valid render pass on destroyed device fails.\n  - Binds valid pipeline and bindgroups, then draws\n  - Tests that finishing encoding fails on destroyed device\n  - Tests that submitting command fails on destroyed device\n  `\n  )\n  .unimplemented();\n\ng.test('command,renderPass,renderBundle')\n  .desc(\n    `\nTests encoding and drawing a render pass including a render bundle on destroyed device fails.\n  - Binds valid pipeline and bindgroups, executes render bundle, then draws\n  - Tests that finishing encoding fails on destroyed device\n  - Tests that submitting command fails on destroyed device\n  `\n  )\n  .unimplemented();\n\ng.test('queue,writeBuffer')\n  .desc(\n    `\nTests writeBuffer on queue on destroyed device fails.\n  `\n  )\n  .unimplemented();\n\ng.test('queue,writeTexture')\n  .desc(\n    `\nTests writeTexture on queue on destroyed device fails.\n  `\n  )\n  .unimplemented();\n\ng.test('queue,copyExternalImageToTexture')\n  .desc(\n    `\nTests copyExternalImageToTexture on queue on destroyed device fails.\n  `\n  )\n  .unimplemented();\n"],"file":"destroy.spec.js"}