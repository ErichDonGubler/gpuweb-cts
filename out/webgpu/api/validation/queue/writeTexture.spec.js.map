{"version":3,"sources":["../../../../../src/webgpu/api/validation/queue/writeTexture.spec.ts"],"names":["description","makeTestGroup","GPUConst","ValidationTest","g","test","desc","paramsSubcasesOnly","usage","TextureUsage","COPY_DST","STORAGE_BINDING","COPY_SRC","fn","t","params","texture","device","createTexture","size","width","height","format","data","Uint8Array","isValid","expectValidationError","queue","writeTexture"],"mappings":";AAAA;AACA,GADA,OAAO,MAAMA,WAAW,GAAI,gCAArB,CAEP,SAASC,aAAT,QAA8B,4CAA9B;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,SAASC,cAAT,QAA+B,uBAA/B;;AAEA,OAAO,MAAMC,CAAC,GAAGH,aAAa,CAACE,cAAD,CAAvB;;AAEPC,CAAC,CAACC,IAAF,CAAO,QAAP;AACGC,IADH;AAEK;AACL;AACA;AACA,GALA;;AAOGC,kBAPH,CAOsB;AAClB,EAAEC,KAAK,EAAEN,QAAQ,CAACO,YAAT,CAAsBC,QAA/B,EADkB,EACyB;AAC3C,EAAEF,KAAK,EAAEN,QAAQ,CAACO,YAAT,CAAsBE,eAA/B,EAFkB;AAGlB,EAAEH,KAAK,EAAEN,QAAQ,CAACO,YAAT,CAAsBE,eAAtB,GAAwCT,QAAQ,CAACO,YAAT,CAAsBG,QAAvE,EAHkB;AAIlB,EAAEJ,KAAK,EAAEN,QAAQ,CAACO,YAAT,CAAsBE,eAAtB,GAAwCT,QAAQ,CAACO,YAAT,CAAsBC,QAAvE,EAJkB,CAPtB;;AAaGG,EAbH,CAaM,OAAMC,CAAN,KAAW;AACb,QAAM,EAAEN,KAAF,KAAYM,CAAC,CAACC,MAApB;AACA,QAAMC,OAAO,GAAGF,CAAC,CAACG,MAAF,CAASC,aAAT,CAAuB;AACrCC,IAAAA,IAAI,EAAE,EAAEC,KAAK,EAAE,EAAT,EAAaC,MAAM,EAAE,EAArB,EAD+B;AAErCb,IAAAA,KAFqC;AAGrCc,IAAAA,MAAM,EAAE,YAH6B,EAAvB,CAAhB;;AAKA,QAAMC,IAAI,GAAG,IAAIC,UAAJ,CAAe,EAAf,CAAb;AACA,QAAML,IAAI,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAb;;AAEA,QAAMM,OAAO,GAAGjB,KAAK,GAAGN,QAAQ,CAACO,YAAT,CAAsBC,QAA9B,GAAyC,IAAzC,GAAgD,KAAhE;AACAI,EAAAA,CAAC,CAACY,qBAAF,CAAwB,MAAM;AAC5BZ,IAAAA,CAAC,CAACG,MAAF,CAASU,KAAT,CAAeC,YAAf,CAA4B,EAAEZ,OAAF,EAA5B,EAAyCO,IAAzC,EAA+C,EAA/C,EAAmDJ,IAAnD;AACD,GAFD,EAEG,CAACM,OAFJ;AAGD,CA3BH","sourcesContent":["export const description = `Tests writeTexture validation.`;\n\nimport { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { GPUConst } from '../../../constants.js';\nimport { ValidationTest } from '../validation_test.js';\n\nexport const g = makeTestGroup(ValidationTest);\n\ng.test('usages')\n  .desc(\n    `\n  Tests calling writeTexture with the texture missed COPY_DST usage.\n    - texture {with, without} COPY DST usage\n  `\n  )\n  .paramsSubcasesOnly([\n    { usage: GPUConst.TextureUsage.COPY_DST }, // control case\n    { usage: GPUConst.TextureUsage.STORAGE_BINDING },\n    { usage: GPUConst.TextureUsage.STORAGE_BINDING | GPUConst.TextureUsage.COPY_SRC },\n    { usage: GPUConst.TextureUsage.STORAGE_BINDING | GPUConst.TextureUsage.COPY_DST },\n  ])\n  .fn(async t => {\n    const { usage } = t.params;\n    const texture = t.device.createTexture({\n      size: { width: 16, height: 16 },\n      usage,\n      format: 'rgba8unorm' as const,\n    });\n    const data = new Uint8Array(16);\n    const size = [1, 1];\n\n    const isValid = usage & GPUConst.TextureUsage.COPY_DST ? true : false;\n    t.expectValidationError(() => {\n      t.device.queue.writeTexture({ texture }, data, {}, size);\n    }, !isValid);\n  });\n"],"file":"writeTexture.spec.js"}