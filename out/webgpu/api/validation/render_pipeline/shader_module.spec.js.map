{"version":3,"sources":["../../../../../src/webgpu/api/validation/render_pipeline/shader_module.spec.ts"],"names":["description","makeTestGroup","getFragmentShaderCodeWithOutput","getShaderWithEntryPoint","kDefaultVertexShaderCode","kDefaultFragmentShaderCode","CreateRenderPipelineValidationTest","g","values","test","desc","paramsSubcasesOnly","u","combine","combineWithParams","vertex_mismatched","fragment_mismatched","_success","beforeAllSubcases","t","selectMismatchedDeviceOrSkipTestCase","undefined","fn","isAsync","params","code","descriptor","vertex","module","mismatchedDevice","createShaderModule","device","entryPoint","fragment","plainType","componentCount","targets","format","layout","getPipelineLayout","doCreateRenderPipelineTest","isVertexShaderValid","createInvalidShaderModule","isFragmentShaderValid","kEntryPointTestCases","shaderModuleEntryPoint","stageEntryPoint"],"mappings":"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","sourcesContent":["export const description = `\nThis test dedicatedly tests createRenderPipeline validation issues related to the shader modules.\n\nNote: entry point matching tests are in ../shader_module/entry_point.spec.ts\n`;\n\nimport { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport {\n  getFragmentShaderCodeWithOutput,\n  getShaderWithEntryPoint,\n  kDefaultVertexShaderCode,\n  kDefaultFragmentShaderCode,\n} from '../../../util/shader.js';\n\nimport { CreateRenderPipelineValidationTest } from './common.js';\n\nexport const g = makeTestGroup(CreateRenderPipelineValidationTest);\n\nconst values = [0, 1, 0, 1];\n\ng.test('device_mismatch')\n  .desc(\n    'Tests createRenderPipeline(Async) cannot be called with a shader module created from another device'\n  )\n  .paramsSubcasesOnly(u =>\n    u.combine('isAsync', [true, false]).combineWithParams([\n      { vertex_mismatched: false, fragment_mismatched: false, _success: true },\n      { vertex_mismatched: true, fragment_mismatched: false, _success: false },\n      { vertex_mismatched: false, fragment_mismatched: true, _success: false },\n    ])\n  )\n  .beforeAllSubcases(t => {\n    t.selectMismatchedDeviceOrSkipTestCase(undefined);\n  })\n  .fn(async t => {\n    const { isAsync, vertex_mismatched, fragment_mismatched, _success } = t.params;\n\n    const code = `\n      @vertex fn main() -> @builtin(position) vec4<f32> {\n        return vec4<f32>(0.0, 0.0, 0.0, 1.0);\n      }\n    `;\n\n    const descriptor = {\n      vertex: {\n        module: vertex_mismatched\n          ? t.mismatchedDevice.createShaderModule({ code })\n          : t.device.createShaderModule({ code }),\n        entryPoint: 'main',\n      },\n      fragment: {\n        module: fragment_mismatched\n          ? t.mismatchedDevice.createShaderModule({\n              code: getFragmentShaderCodeWithOutput([\n                { values, plainType: 'f32', componentCount: 4 },\n              ]),\n            })\n          : t.device.createShaderModule({\n              code: getFragmentShaderCodeWithOutput([\n                { values, plainType: 'f32', componentCount: 4 },\n              ]),\n            }),\n        entryPoint: 'main',\n        targets: [{ format: 'rgba8unorm' }] as const,\n      },\n      layout: t.getPipelineLayout(),\n    };\n\n    t.doCreateRenderPipelineTest(isAsync, _success, descriptor);\n  });\n\ng.test('invalid,vertex')\n  .desc(`Tests shader module must be valid.`)\n  .params(u => u.combine('isAsync', [true, false]).combine('isVertexShaderValid', [true, false]))\n  .fn(async t => {\n    const { isAsync, isVertexShaderValid } = t.params;\n    t.doCreateRenderPipelineTest(isAsync, isVertexShaderValid, {\n      layout: 'auto',\n      vertex: {\n        module: isVertexShaderValid\n          ? t.device.createShaderModule({\n              code: kDefaultVertexShaderCode,\n            })\n          : t.createInvalidShaderModule(),\n        entryPoint: 'main',\n      },\n    });\n  });\n\ng.test('invalid,fragment')\n  .desc(`Tests shader module must be valid.`)\n  .params(u => u.combine('isAsync', [true, false]).combine('isFragmentShaderValid', [true, false]))\n  .fn(async t => {\n    const { isAsync, isFragmentShaderValid } = t.params;\n    t.doCreateRenderPipelineTest(isAsync, isFragmentShaderValid, {\n      layout: 'auto',\n      vertex: {\n        module: t.device.createShaderModule({\n          code: kDefaultVertexShaderCode,\n        }),\n        entryPoint: 'main',\n      },\n      fragment: {\n        module: isFragmentShaderValid\n          ? t.device.createShaderModule({\n              code: kDefaultFragmentShaderCode,\n            })\n          : t.createInvalidShaderModule(),\n        entryPoint: 'main',\n        targets: [{ format: 'rgba8unorm' }],\n      },\n    });\n  });\n\nconst kEntryPointTestCases = [\n  { shaderModuleEntryPoint: 'main', stageEntryPoint: 'main' },\n  { shaderModuleEntryPoint: 'main', stageEntryPoint: '' },\n  { shaderModuleEntryPoint: 'main', stageEntryPoint: 'main\\0' },\n  { shaderModuleEntryPoint: 'main', stageEntryPoint: 'main\\0a' },\n  { shaderModuleEntryPoint: 'main', stageEntryPoint: 'mian' },\n  { shaderModuleEntryPoint: 'main', stageEntryPoint: 'main ' },\n  { shaderModuleEntryPoint: 'main', stageEntryPoint: 'ma in' },\n  { shaderModuleEntryPoint: 'main', stageEntryPoint: 'main\\n' },\n  { shaderModuleEntryPoint: 'mian', stageEntryPoint: 'mian' },\n  { shaderModuleEntryPoint: 'mian', stageEntryPoint: 'main' },\n  { shaderModuleEntryPoint: 'mainmain', stageEntryPoint: 'mainmain' },\n  { shaderModuleEntryPoint: 'mainmain', stageEntryPoint: 'foo' },\n  { shaderModuleEntryPoint: 'main_t12V3', stageEntryPoint: 'main_t12V3' },\n  { shaderModuleEntryPoint: 'main_t12V3', stageEntryPoint: 'main_t12V5' },\n  { shaderModuleEntryPoint: 'main_t12V3', stageEntryPoint: '_main_t12V3' },\n  { shaderModuleEntryPoint: 'séquençage', stageEntryPoint: 'séquençage' },\n  { shaderModuleEntryPoint: 'séquençage', stageEntryPoint: 'sequencage' },\n];\n\ng.test('entry_point,vertex')\n  .desc(\n    `\nTests calling createRenderPipeline(Async) with valid vertex stage shader and different entryPoints,\nand check that the APIs only accept matching entryPoint.\n\nThe entryPoint in shader module include standard \"main\" and others.\nThe entryPoint assigned in descriptor include:\n- Matching case (control case)\n- Empty string\n- Mistyping\n- Containing invalid char, including space and control codes (Null character)\n- Unicode entrypoints and their ASCIIfied version\n\nTODO:\n- Test unicode normalization (gpuweb/gpuweb#1160)\n- Fine-tune test cases to reduce number by removing trivially similiar cases\n`\n  )\n  .params(u => u.combine('isAsync', [true, false]).combineWithParams(kEntryPointTestCases))\n  .fn(async t => {\n    const { isAsync, shaderModuleEntryPoint, stageEntryPoint } = t.params;\n    const descriptor: GPURenderPipelineDescriptor = {\n      layout: 'auto',\n      vertex: {\n        module: t.device.createShaderModule({\n          code: getShaderWithEntryPoint('vertex', shaderModuleEntryPoint),\n        }),\n        entryPoint: stageEntryPoint,\n      },\n    };\n    const _success = shaderModuleEntryPoint === stageEntryPoint;\n    t.doCreateRenderPipelineTest(isAsync, _success, descriptor);\n  });\n\ng.test('entry_point,fragment')\n  .desc(\n    `\nTests calling createRenderPipeline(Async) with valid fragment stage shader and different entryPoints,\nand check that the APIs only accept matching entryPoint.\n`\n  )\n  .params(u => u.combine('isAsync', [true, false]).combineWithParams(kEntryPointTestCases))\n  .fn(async t => {\n    const { isAsync, shaderModuleEntryPoint, stageEntryPoint } = t.params;\n    const descriptor: GPURenderPipelineDescriptor = {\n      layout: 'auto',\n      vertex: {\n        module: t.device.createShaderModule({\n          code: kDefaultVertexShaderCode,\n        }),\n        entryPoint: 'main',\n      },\n      fragment: {\n        module: t.device.createShaderModule({\n          code: getShaderWithEntryPoint('fragment', shaderModuleEntryPoint),\n        }),\n        entryPoint: stageEntryPoint,\n        targets: [{ format: 'rgba8unorm' }],\n      },\n    };\n    const _success = shaderModuleEntryPoint === stageEntryPoint;\n    t.doCreateRenderPipelineTest(isAsync, _success, descriptor);\n  });\n"],"file":"shader_module.spec.js"}