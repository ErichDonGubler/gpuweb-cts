{"version":3,"file":"overrides.spec.js","names":["description","makeTestGroup","CreateRenderPipelineValidationTest","g","test","desc","params","u","combine","combineWithParams","vertexConstants","_success","x","y","xxx","z","w","fn","t","isAsync","doCreateRenderPipelineTest","layout","vertex","module","device","createShaderModule","code","entryPoint","constants","fragment","targets","format","fragmentConstants","r","b","a","descriptor","getDescriptor","fragmentShaderCode"],"sources":["../../../../../src/webgpu/api/validation/render_pipeline/overrides.spec.ts"],"sourcesContent":["export const description = `\nThis test dedicatedly tests validation of pipeline overridable constants of createRenderPipeline.\n`;\n\nimport { makeTestGroup } from '../../../../common/framework/test_group.js';\n\nimport { CreateRenderPipelineValidationTest } from './common.js';\n\nexport const g = makeTestGroup(CreateRenderPipelineValidationTest);\n\ng.test('identifier,vertex')\n  .desc(\n    `\nTests calling createComputePipeline(Async) validation for overridable constants identifiers in vertex state.\n`\n  )\n  .params(u =>\n    u //\n      .combine('isAsync', [true, false])\n      .combineWithParams([\n        { vertexConstants: {}, _success: true },\n        { vertexConstants: { x: 1, y: 1 }, _success: true },\n        { vertexConstants: { x: 1, y: 1, 1: 1, 1000: 1 }, _success: true },\n        { vertexConstants: { xxx: 1 }, _success: false },\n        { vertexConstants: { 1: 1 }, _success: true },\n        { vertexConstants: { 2: 1 }, _success: false },\n        { vertexConstants: { z: 1 }, _success: false }, // pipeline constant id is specified for z\n        { vertexConstants: { w: 1 }, _success: false }, // pipeline constant id is specified for w\n        { vertexConstants: { 1: 1, z: 1 }, _success: false }, // pipeline constant id is specified for z\n      ] as { vertexConstants: Record<string, GPUPipelineConstantValue>; _success: boolean }[])\n  )\n  .fn(async t => {\n    const { isAsync, vertexConstants, _success } = t.params;\n\n    t.doCreateRenderPipelineTest(isAsync, _success, {\n      layout: 'auto',\n      vertex: {\n        module: t.device.createShaderModule({\n          code: `\n            override x: f32 = 0.0;\n            override y: f32 = 0.0;\n            @id(1) override z: f32 = 0.0;\n            @id(1000) override w: f32 = 1.0;\n            @vertex fn main() -> @builtin(position) vec4<f32> {\n              return vec4<f32>(x, y, z, w);\n            }`,\n        }),\n        entryPoint: 'main',\n        constants: vertexConstants,\n      },\n      fragment: {\n        module: t.device.createShaderModule({\n          code: `@fragment fn main() -> @location(0) vec4<f32> {\n              return vec4<f32>(0.0, 1.0, 0.0, 1.0);\n            }`,\n        }),\n        entryPoint: 'main',\n        targets: [{ format: 'rgba8unorm' }],\n      },\n    });\n  });\n\ng.test('identifier,fragment')\n  .desc(\n    `\nTests calling createComputePipeline(Async) validation for overridable constants identifiers in fragment state.\n`\n  )\n  .params(u =>\n    u //\n      .combine('isAsync', [true, false])\n      .combineWithParams([\n        { fragmentConstants: {}, _success: true },\n        { fragmentConstants: { r: 1, g: 1 }, _success: true },\n        { fragmentConstants: { r: 1, g: 1, 1: 1, 1000: 1 }, _success: true },\n        { fragmentConstants: { xxx: 1 }, _success: false },\n        { fragmentConstants: { 1: 1 }, _success: true },\n        { fragmentConstants: { 2: 1 }, _success: false },\n        { fragmentConstants: { b: 1 }, _success: false }, // pipeline constant id is specified for b\n        { fragmentConstants: { a: 1 }, _success: false }, // pipeline constant id is specified for a\n        { fragmentConstants: { 1: 1, b: 1 }, _success: false }, // pipeline constant id is specified for b\n      ] as { fragmentConstants: Record<string, GPUPipelineConstantValue>; _success: boolean }[])\n  )\n  .fn(async t => {\n    const { isAsync, fragmentConstants, _success } = t.params;\n\n    const descriptor = t.getDescriptor({\n      fragmentShaderCode: `\n        override r: f32 = 0.0;\n        override g: f32 = 0.0;\n        @id(1) override b: f32 = 0.0;\n        @id(1000) override a: f32 = 0.0;\n        @fragment fn main()\n            -> @location(0) vec4<f32> {\n            return vec4<f32>(r, g, b, a);\n        }`,\n      fragmentConstants,\n    });\n\n    t.doCreateRenderPipelineTest(isAsync, _success, descriptor);\n  });\n\ng.test('uninitialized,vertex')\n  .desc(\n    `\nTests calling createComputePipeline(Async) validation for uninitialized overridable constants in vertex state.\n`\n  )\n  .params(u =>\n    u //\n      .combine('isAsync', [true, false])\n      .combineWithParams([\n        { vertexConstants: {}, _success: false },\n        { vertexConstants: { x: 1, y: 1 }, _success: false }, // z is missing\n        { vertexConstants: { x: 1, z: 1 }, _success: true },\n        { vertexConstants: { x: 1, y: 1, z: 1, w: 1 }, _success: true },\n      ] as { vertexConstants: Record<string, GPUPipelineConstantValue>; _success: boolean }[])\n  )\n  .fn(async t => {\n    const { isAsync, vertexConstants, _success } = t.params;\n\n    t.doCreateRenderPipelineTest(isAsync, _success, {\n      layout: 'auto',\n      vertex: {\n        module: t.device.createShaderModule({\n          code: `\n            override x: f32;\n            override y: f32 = 0.0;\n            override z: f32;\n            override w: f32 = 1.0;\n            @vertex fn main() -> @builtin(position) vec4<f32> {\n              return vec4<f32>(x, y, z, w);\n            }`,\n        }),\n        entryPoint: 'main',\n        constants: vertexConstants,\n      },\n      fragment: {\n        module: t.device.createShaderModule({\n          code: `@fragment fn main() -> @location(0) vec4<f32> {\n              return vec4<f32>(0.0, 1.0, 0.0, 1.0);\n            }`,\n        }),\n        entryPoint: 'main',\n        targets: [{ format: 'rgba8unorm' }],\n      },\n    });\n  });\n\ng.test('uninitialized,fragment')\n  .desc(\n    `\nTests calling createComputePipeline(Async) validation for uninitialized overridable constants in fragment state.\n`\n  )\n  .params(u =>\n    u //\n      .combine('isAsync', [true, false])\n      .combineWithParams([\n        { fragmentConstants: {}, _success: false },\n        { fragmentConstants: { r: 1, g: 1 }, _success: false }, // b is missing\n        { fragmentConstants: { r: 1, b: 1 }, _success: true },\n        { fragmentConstants: { r: 1, g: 1, b: 1, a: 1 }, _success: true },\n      ] as { fragmentConstants: Record<string, GPUPipelineConstantValue>; _success: boolean }[])\n  )\n  .fn(async t => {\n    const { isAsync, fragmentConstants, _success } = t.params;\n\n    const descriptor = t.getDescriptor({\n      fragmentShaderCode: `\n        override r: f32;\n        override g: f32 = 0.0;\n        override b: f32;\n        override a: f32 = 0.0;\n        @fragment fn main()\n            -> @location(0) vec4<f32> {\n            return vec4<f32>(r, g, b, a);\n        }\n          `,\n      fragmentConstants,\n    });\n\n    t.doCreateRenderPipelineTest(isAsync, _success, descriptor);\n  });\n"],"mappings":"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"}