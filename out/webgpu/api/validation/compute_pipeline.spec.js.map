{"version":3,"file":"compute_pipeline.spec.js","names":["description","makeTestGroup","getShaderWithEntryPoint","ValidationTest","F","getShaderModule","shaderStage","entryPoint","device","createShaderModule","code","g","test","desc","params","u","combine","fn","t","isAsync","doCreateComputePipelineTest","layout","compute","module","createInvalidShaderModule","shaderModuleStage","descriptor","paramsSubcasesOnly","beforeAllSubcases","selectMismatchedDeviceOrSkipTestCase","undefined","mismatched","sourceDevice","mismatchedDevice","createPipelineLayout","bindGroupLayouts","combineWithParams","type","_typeSize","beginSubcases","countDeltaFromLimit","countAtLimit","Math","floor","limits","maxComputeWorkgroupStorageSize","count","size","join","maxComputeInvocationsPerWorkgroup","_success","maxComputeWorkgroupSizeX","maxComputeWorkgroupSizeY","maxComputeWorkgroupSizeZ","constants","c0","c1","c9","c3","c2","c8","c5","kOverridesWorkgroupSizeShaders","u32","i32","x","y","z","testFn","kVec4Size","maxVec4Count","kMat4Size","maxMat4Count","vec4Count","mat4Count","a","b"],"sources":["../../../../src/webgpu/api/validation/compute_pipeline.spec.ts"],"sourcesContent":["export const description = `\ncreateComputePipeline and createComputePipelineAsync validation tests.\n\nNote: entry point matching tests are in shader_module/entry_point.spec.ts\n`;\n\nimport { makeTestGroup } from '../../../common/framework/test_group.js';\nimport { TShaderStage, getShaderWithEntryPoint } from '../../util/shader.js';\n\nimport { ValidationTest } from './validation_test.js';\n\nclass F extends ValidationTest {\n  getShaderModule(\n    shaderStage: TShaderStage = 'compute',\n    entryPoint: string = 'main'\n  ): GPUShaderModule {\n    return this.device.createShaderModule({\n      code: getShaderWithEntryPoint(shaderStage, entryPoint),\n    });\n  }\n}\n\nexport const g = makeTestGroup(F);\n\ng.test('basic')\n  .desc(\n    `\nControl case for createComputePipeline and createComputePipelineAsync.\nCall the API with valid compute shader and matching valid entryPoint, making sure that the test function working well.\n`\n  )\n  .params(u => u.combine('isAsync', [true, false]))\n  .fn(async t => {\n    const { isAsync } = t.params;\n    t.doCreateComputePipelineTest(isAsync, true, {\n      layout: 'auto',\n      compute: { module: t.getShaderModule('compute', 'main'), entryPoint: 'main' },\n    });\n  });\n\ng.test('shader_module,invalid')\n  .desc(\n    `\nTests calling createComputePipeline(Async) with a invalid compute shader, and check that the APIs catch this error.\n`\n  )\n  .params(u => u.combine('isAsync', [true, false]))\n  .fn(async t => {\n    const { isAsync } = t.params;\n    t.doCreateComputePipelineTest(isAsync, false, {\n      layout: 'auto',\n      compute: {\n        module: t.createInvalidShaderModule(),\n        entryPoint: 'main',\n      },\n    });\n  });\n\ng.test('shader_module,compute')\n  .desc(\n    `\nTests calling createComputePipeline(Async) with valid but different stage shader and matching entryPoint,\nand check that the APIs only accept compute shader.\n`\n  )\n  .params(u =>\n    u //\n      .combine('isAsync', [true, false])\n      .combine('shaderModuleStage', ['compute', 'vertex', 'fragment'] as TShaderStage[])\n  )\n  .fn(async t => {\n    const { isAsync, shaderModuleStage } = t.params;\n    const descriptor = {\n      layout: 'auto' as const,\n      compute: {\n        module: t.getShaderModule(shaderModuleStage, 'main'),\n        entryPoint: 'main',\n      },\n    };\n    t.doCreateComputePipelineTest(isAsync, shaderModuleStage === 'compute', descriptor);\n  });\n\ng.test('shader_module,device_mismatch')\n  .desc(\n    'Tests createComputePipeline(Async) cannot be called with a shader module created from another device'\n  )\n  .paramsSubcasesOnly(u => u.combine('isAsync', [true, false]).combine('mismatched', [true, false]))\n  .beforeAllSubcases(t => {\n    t.selectMismatchedDeviceOrSkipTestCase(undefined);\n  })\n  .fn(async t => {\n    const { isAsync, mismatched } = t.params;\n\n    const sourceDevice = mismatched ? t.mismatchedDevice : t.device;\n\n    const module = sourceDevice.createShaderModule({\n      code: '@compute @workgroup_size(1) fn main() {}',\n    });\n\n    const descriptor = {\n      layout: 'auto' as const,\n      compute: {\n        module,\n        entryPoint: 'main',\n      },\n    };\n\n    t.doCreateComputePipelineTest(isAsync, !mismatched, descriptor);\n  });\n\ng.test('pipeline_layout,device_mismatch')\n  .desc(\n    'Tests createComputePipeline(Async) cannot be called with a pipeline layout created from another device'\n  )\n  .paramsSubcasesOnly(u => u.combine('isAsync', [true, false]).combine('mismatched', [true, false]))\n  .beforeAllSubcases(t => {\n    t.selectMismatchedDeviceOrSkipTestCase(undefined);\n  })\n  .fn(async t => {\n    const { isAsync, mismatched } = t.params;\n    const sourceDevice = mismatched ? t.mismatchedDevice : t.device;\n\n    const layout = sourceDevice.createPipelineLayout({ bindGroupLayouts: [] });\n\n    const descriptor = {\n      layout,\n      compute: {\n        module: t.getShaderModule('compute', 'main'),\n        entryPoint: 'main',\n      },\n    };\n\n    t.doCreateComputePipelineTest(isAsync, !mismatched, descriptor);\n  });\n\ng.test('limits,workgroup_storage_size')\n  .desc(\n    `\nTests calling createComputePipeline(Async) validation for compute using <= device.limits.maxComputeWorkgroupStorageSize bytes of workgroup storage.\n`\n  )\n  .params(u =>\n    u //\n      .combine('isAsync', [true, false])\n      .combineWithParams([\n        { type: 'vec4<f32>', _typeSize: 16 },\n        { type: 'mat4x4<f32>', _typeSize: 64 },\n      ])\n      .beginSubcases()\n      .combine('countDeltaFromLimit', [0, 1])\n  )\n  .fn(async t => {\n    const { isAsync, type, _typeSize, countDeltaFromLimit } = t.params;\n    const countAtLimit = Math.floor(t.device.limits.maxComputeWorkgroupStorageSize / _typeSize);\n    const count = countAtLimit + countDeltaFromLimit;\n\n    const descriptor = {\n      layout: 'auto' as const,\n      compute: {\n        module: t.device.createShaderModule({\n          code: `\n          var<workgroup> data: array<${type}, ${count}>;\n          @compute @workgroup_size(64) fn main () {\n            _ = data;\n          }\n          `,\n        }),\n        entryPoint: 'main',\n      },\n    };\n    t.doCreateComputePipelineTest(isAsync, count <= countAtLimit, descriptor);\n  });\n\ng.test('limits,invocations_per_workgroup')\n  .desc(\n    `\nTests calling createComputePipeline(Async) validation for compute using <= device.limits.maxComputeInvocationsPerWorkgroup per workgroup.\n`\n  )\n  .params(u =>\n    u //\n      .combine('isAsync', [true, false])\n      .combine('size', [\n        // Assume maxComputeWorkgroupSizeX/Y >= 129, maxComputeWorkgroupSizeZ >= 33\n        [128, 1, 2],\n        [129, 1, 2],\n        [2, 128, 1],\n        [2, 129, 1],\n        [1, 8, 32],\n        [1, 8, 33],\n      ])\n  )\n  .fn(async t => {\n    const { isAsync, size } = t.params;\n\n    const descriptor = {\n      layout: 'auto' as const,\n      compute: {\n        module: t.device.createShaderModule({\n          code: `\n          @compute @workgroup_size(${size.join(',')}) fn main () {\n          }\n          `,\n        }),\n        entryPoint: 'main',\n      },\n    };\n\n    t.doCreateComputePipelineTest(\n      isAsync,\n      size[0] * size[1] * size[2] <= t.device.limits.maxComputeInvocationsPerWorkgroup,\n      descriptor\n    );\n  });\n\ng.test('limits,invocations_per_workgroup,each_component')\n  .desc(\n    `\nTests calling createComputePipeline(Async) validation for compute workgroup_size attribute has each component no more than their limits.\n`\n  )\n  .params(u =>\n    u //\n      .combine('isAsync', [true, false])\n      .combine('size', [\n        // Assume maxComputeInvocationsPerWorkgroup >= 256\n        [64],\n        [256, 1, 1],\n        [257, 1, 1],\n        [1, 256, 1],\n        [1, 257, 1],\n        [1, 1, 63],\n        [1, 1, 64],\n        [1, 1, 65],\n      ])\n  )\n  .fn(async t => {\n    const { isAsync, size } = t.params;\n\n    const descriptor = {\n      layout: 'auto' as const,\n      compute: {\n        module: t.device.createShaderModule({\n          code: `\n          @compute @workgroup_size(${size.join(',')}) fn main () {\n          }\n          `,\n        }),\n        entryPoint: 'main',\n      },\n    };\n\n    size[1] = size[1] ?? 1;\n    size[2] = size[2] ?? 1;\n\n    const _success =\n      size[0] <= t.device.limits.maxComputeWorkgroupSizeX &&\n      size[1] <= t.device.limits.maxComputeWorkgroupSizeY &&\n      size[2] <= t.device.limits.maxComputeWorkgroupSizeZ;\n    t.doCreateComputePipelineTest(isAsync, _success, descriptor);\n  });\n\ng.test('overrides,identifier')\n  .desc(\n    `\nTests calling createComputePipeline(Async) validation for overridable constants identifiers.\n`\n  )\n  .params(u =>\n    u //\n      .combine('isAsync', [true, false])\n      .combineWithParams([\n        { constants: {}, _success: true },\n        { constants: { c0: 0 }, _success: true },\n        { constants: { c0: 0, c1: 1 }, _success: true },\n        { constants: { c9: 0 }, _success: false },\n        { constants: { 1: 0 }, _success: true },\n        { constants: { c3: 0 }, _success: false }, // pipeline constant id is specified for c3\n        { constants: { 2: 0 }, _success: false },\n        { constants: { 1000: 0 }, _success: true },\n        { constants: { 9999: 0 }, _success: false },\n        { constants: { 1000: 0, c2: 0 }, _success: false },\n      ] as { constants: Record<string, GPUPipelineConstantValue>; _success: boolean }[])\n  )\n  .fn(async t => {\n    const { isAsync, constants, _success } = t.params;\n\n    const descriptor = {\n      layout: 'auto' as const,\n      compute: {\n        module: t.device.createShaderModule({\n          code: `\n            override c0: bool = true;      // type: bool\n            override c1: u32 = 0u;          // default override\n            @id(1000) override c2: u32 = 10u;  // default\n            @id(1) override c3: u32 = 11u;     // default\n            @compute @workgroup_size(1) fn main () {\n              // make sure the overridable constants are not optimized out\n              _ = u32(c0);\n              _ = u32(c1);\n              _ = u32(c2);\n              _ = u32(c3);\n            }`,\n        }),\n        entryPoint: 'main',\n        constants,\n      },\n    };\n\n    t.doCreateComputePipelineTest(isAsync, _success, descriptor);\n  });\n\ng.test('overrides,uninitialized')\n  .desc(\n    `\nTests calling createComputePipeline(Async) validation for uninitialized overridable constants.\n`\n  )\n  .params(u =>\n    u //\n      .combine('isAsync', [true, false])\n      .combineWithParams([\n        { constants: {}, _success: false },\n        { constants: { c0: 0, c2: 0, c8: 0 }, _success: false }, // c5 is missing\n        { constants: { c0: 0, c2: 0, c5: 0, c8: 0 }, _success: true },\n        { constants: { c0: 0, c2: 0, c5: 0, c8: 0, c1: 0 }, _success: true },\n      ] as { constants: Record<string, GPUPipelineConstantValue>; _success: boolean }[])\n  )\n  .fn(async t => {\n    const { isAsync, constants, _success } = t.params;\n\n    const descriptor = {\n      layout: 'auto' as const,\n      compute: {\n        module: t.device.createShaderModule({\n          code: `\n            override c0: bool;              // type: bool\n            override c1: bool = false;      // default override\n            override c2: f32;               // type: float32\n            override c3: f32 = 0.0;         // default override\n            override c4: f32 = 4.0;         // default\n            override c5: i32;               // type: int32\n            override c6: i32 = 0;           // default override\n            override c7: i32 = 7;           // default\n            override c8: u32;               // type: uint32\n            override c9: u32 = 0u;          // default override\n            @id(1000) override c10: u32 = 10u;  // default\n            @compute @workgroup_size(1) fn main () {\n              // make sure the overridable constants are not optimized out\n              _ = u32(c0);\n              _ = u32(c1);\n              _ = u32(c2);\n              _ = u32(c3);\n              _ = u32(c4);\n              _ = u32(c5);\n              _ = u32(c6);\n              _ = u32(c7);\n              _ = u32(c8);\n              _ = u32(c9);\n              _ = u32(c10);\n            }`,\n        }),\n        entryPoint: 'main',\n        constants,\n      },\n    };\n\n    t.doCreateComputePipelineTest(isAsync, _success, descriptor);\n  });\n\nconst kOverridesWorkgroupSizeShaders = {\n  u32: `\noverride x: u32 = 1u;\noverride y: u32 = 1u;\noverride z: u32 = 1u;\n@compute @workgroup_size(x, y, z) fn main () {\n  _ = 0u;\n}\n`,\n  i32: `\noverride x: i32 = 1;\noverride y: i32 = 1;\noverride z: i32 = 1;\n@compute @workgroup_size(x, y, z) fn main () {\n  _ = 0u;\n}\n`,\n};\n\ng.test('overrides,workgroup_size')\n  .desc(\n    `\nTests calling createComputePipeline(Async) validation for overridable constants used for workgroup size.\n`\n  )\n  .params(u =>\n    u //\n      .combine('isAsync', [true, false])\n      .combine('type', ['u32', 'i32'] as const)\n      .combineWithParams([\n        { constants: {}, _success: true },\n        { constants: { x: 0, y: 0, z: 0 }, _success: false },\n        { constants: { x: 1, y: -1, z: 1 }, _success: false },\n        { constants: { x: 1, y: 0, z: 0 }, _success: false },\n        { constants: { x: 16, y: 1, z: 1 }, _success: true },\n      ] as { constants: Record<string, GPUPipelineConstantValue>; _success: boolean }[])\n  )\n  .fn(async t => {\n    const { isAsync, type, constants, _success } = t.params;\n\n    const descriptor = {\n      layout: 'auto' as const,\n      compute: {\n        module: t.device.createShaderModule({\n          code: kOverridesWorkgroupSizeShaders[type],\n        }),\n        entryPoint: 'main',\n        constants,\n      },\n    };\n\n    t.doCreateComputePipelineTest(isAsync, _success, descriptor);\n  });\n\ng.test('overrides,workgroup_size,limits')\n  .desc(\n    `\nTests calling createComputePipeline(Async) validation for overridable constants for workgroupSize exceeds device limits.\n`\n  )\n  .params(u =>\n    u //\n      .combine('isAsync', [true, false])\n      .combine('type', ['u32', 'i32'] as const)\n  )\n  .fn(async t => {\n    const { isAsync, type } = t.params;\n\n    const limits = t.device.limits;\n\n    const testFn = (x: number, y: number, z: number, _success: boolean) => {\n      const descriptor = {\n        layout: 'auto' as const,\n        compute: {\n          module: t.device.createShaderModule({\n            code: kOverridesWorkgroupSizeShaders[type],\n          }),\n          entryPoint: 'main',\n          constants: {\n            x,\n            y,\n            z,\n          },\n        },\n      };\n\n      t.doCreateComputePipelineTest(isAsync, _success, descriptor);\n    };\n\n    testFn(limits.maxComputeWorkgroupSizeX, 1, 1, true);\n    testFn(limits.maxComputeWorkgroupSizeX + 1, 1, 1, false);\n    testFn(1, limits.maxComputeWorkgroupSizeY, 1, true);\n    testFn(1, limits.maxComputeWorkgroupSizeY + 1, 1, false);\n    testFn(1, 1, limits.maxComputeWorkgroupSizeZ, true);\n    testFn(1, 1, limits.maxComputeWorkgroupSizeZ + 1, false);\n    testFn(\n      limits.maxComputeWorkgroupSizeX,\n      limits.maxComputeWorkgroupSizeY,\n      limits.maxComputeWorkgroupSizeZ,\n      limits.maxComputeWorkgroupSizeX *\n        limits.maxComputeWorkgroupSizeY *\n        limits.maxComputeWorkgroupSizeZ <=\n        limits.maxComputeInvocationsPerWorkgroup\n    );\n  });\n\ng.test('overrides,workgroup_size,limits,workgroup_storage_size')\n  .desc(\n    `\nTests calling createComputePipeline(Async) validation for overridable constants for workgroupStorageSize exceeds device limits.\n`\n  )\n  .params(u =>\n    u //\n      .combine('isAsync', [true, false])\n  )\n  .fn(async t => {\n    const { isAsync } = t.params;\n\n    const limits = t.device.limits;\n\n    const kVec4Size = 16;\n    const maxVec4Count = limits.maxComputeWorkgroupStorageSize / kVec4Size;\n    const kMat4Size = 64;\n    const maxMat4Count = limits.maxComputeWorkgroupStorageSize / kMat4Size;\n\n    const testFn = (vec4Count: number, mat4Count: number, _success: boolean) => {\n      const descriptor = {\n        layout: 'auto' as const,\n        compute: {\n          module: t.device.createShaderModule({\n            code: `\n              override a: u32;\n              override b: u32;\n              ${vec4Count <= 0 ? '' : 'var<workgroup> vec4_data: array<vec4<f32>, a>;'}\n              ${mat4Count <= 0 ? '' : 'var<workgroup> mat4_data: array<mat4x4<f32>, b>;'}\n              @compute @workgroup_size(1) fn main() {\n                ${vec4Count <= 0 ? '' : '_ = vec4_data[0];'}\n                ${mat4Count <= 0 ? '' : '_ = mat4_data[0];'}\n              }`,\n          }),\n          entryPoint: 'main',\n          constants: {\n            a: vec4Count,\n            b: mat4Count,\n          },\n        },\n      };\n\n      t.doCreateComputePipelineTest(isAsync, _success, descriptor);\n    };\n\n    testFn(1, 1, true);\n    testFn(maxVec4Count + 1, 0, false);\n    testFn(0, maxMat4Count + 1, false);\n  });\n"],"mappings":"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"}