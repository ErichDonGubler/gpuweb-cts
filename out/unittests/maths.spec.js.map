{"version":3,"sources":["../../src/unittests/maths.spec.ts"],"names":["description","makeTestGroup","objectEquals","kBit","kValue","f32","f32Bits","float16ToUint16","float32ToUint32","uint16ToFloat16","uint32ToFloat32","biasedRange","cartesianProduct","correctlyRoundedF32","fullF16Range","fullF32Range","fullI32Range","hexToF32","hexToF64","lerp","linearRange","nextAfterF32","oneULP","UnitTest","g","withinOneULP","got","expected","mode","ulp","compareArrayOfNumbers","expect","length","every","value","index","Number","isNaN","test","paramsSubcasesOnly","val","NaN","dir","result","POSITIVE_INFINITY","infinity","positive","NEGATIVE_INFINITY","negative","min","max","subnormal","fn","t","params","expect_type","got_type","paramsSimple","target","a","b","num_steps","Array","fill","neg_norm","neg_sub","pos_sub","pos_norm","f16","neg_count","pos_count","i32","bits","nearest_max","less_than_one","pi","whole","three_quarters","half","third","quarter","sixth","e","nearest_min","val_to_bits","bits_to_val","inputs","JSON","stringify"],"mappings":"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","sourcesContent":["export const description = `\nUtil math unit tests.\n`;\n\nimport { makeTestGroup } from '../common/framework/test_group.js';\nimport { objectEquals } from '../common/util/util.js';\nimport { kBit, kValue } from '../webgpu/util/constants.js';\nimport {\n  f32,\n  f32Bits,\n  float16ToUint16,\n  float32ToUint32,\n  Scalar,\n  uint16ToFloat16,\n  uint32ToFloat32,\n} from '../webgpu/util/conversion.js';\nimport {\n  biasedRange,\n  cartesianProduct,\n  correctlyRoundedF32,\n  FlushMode,\n  fullF16Range,\n  fullF32Range,\n  fullI32Range,\n  hexToF32,\n  hexToF64,\n  lerp,\n  linearRange,\n  nextAfterF32,\n  oneULP,\n} from '../webgpu/util/math.js';\n\nimport { UnitTest } from './unit_test.js';\n\nexport const g = makeTestGroup(UnitTest);\n\n/**\n * Utility wrapper around oneULP to test if a value is within 1 ULP(x)\n *\n * @param got number to test\n * @param expected number to be within 1 ULP of\n * @param mode should oneULP FTZ\n * @returns if got is within 1 ULP of expected\n */\nfunction withinOneULP(got: number, expected: number, mode: FlushMode): boolean {\n  const ulp = oneULP(expected, mode);\n  return got >= expected - ulp && got <= expected + ulp;\n}\n\n/**\n * @returns true if arrays are equal within 1ULP, doing element-wise comparison\n *               as needed, and considering NaNs to be equal.\n *\n * Depends on the correctness of oneULP, which is tested in this file.\n **\n * @param got array of numbers to compare for equality\n * @param expect array of numbers to compare against\n * @param mode should different subnormals be considered the same, i.e. should\n *              FTZ occur during comparison\n **/\nfunction compareArrayOfNumbers(\n  got: Array<number>,\n  expect: Array<number>,\n  mode: FlushMode = 'flush'\n): boolean {\n  return (\n    got.length === expect.length &&\n    got.every((value, index) => {\n      const expected = expect[index];\n      return (Number.isNaN(value) && Number.isNaN(expected)) || withinOneULP(value, expected, mode);\n    })\n  );\n}\n\ninterface nextAfterCase {\n  val: number;\n  dir: boolean;\n  result: Scalar;\n}\n\ng.test('nextAfterFlushToZero')\n  .paramsSubcasesOnly<nextAfterCase>(\n    // prettier-ignore\n    [\n    // Edge Cases\n    { val: Number.NaN, dir: true, result: f32Bits(0x7fffffff) },\n    { val: Number.NaN, dir: false, result: f32Bits(0x7fffffff) },\n    { val: Number.POSITIVE_INFINITY, dir: true, result: f32Bits(kBit.f32.infinity.positive) },\n    { val: Number.POSITIVE_INFINITY, dir: false, result: f32Bits(kBit.f32.infinity.positive) },\n    { val: Number.NEGATIVE_INFINITY, dir: true, result: f32Bits(kBit.f32.infinity.negative) },\n    { val: Number.NEGATIVE_INFINITY, dir: false, result: f32Bits(kBit.f32.infinity.negative) },\n\n    // Zeroes\n    { val: +0, dir: true, result: f32Bits(kBit.f32.positive.min) },\n    { val: +0, dir: false, result: f32Bits(kBit.f32.negative.max) },\n    { val: -0, dir: true, result: f32Bits(kBit.f32.positive.min) },\n    { val: -0, dir: false, result: f32Bits(kBit.f32.negative.max) },\n\n    // Subnormals\n    { val: hexToF32(kBit.f32.subnormal.positive.min), dir: true, result: f32Bits(kBit.f32.positive.min) },\n    { val: hexToF32(kBit.f32.subnormal.positive.min), dir: false, result: f32Bits(kBit.f32.negative.max) },\n    { val: hexToF32(kBit.f32.subnormal.positive.max), dir: true, result: f32Bits(kBit.f32.positive.min) },\n    { val: hexToF32(kBit.f32.subnormal.positive.max), dir: false, result: f32Bits(kBit.f32.negative.max) },\n    { val: hexToF32(kBit.f32.subnormal.negative.min), dir: true, result: f32Bits(kBit.f32.positive.min) },\n    { val: hexToF32(kBit.f32.subnormal.negative.min), dir: false, result: f32Bits(kBit.f32.negative.max) },\n    { val: hexToF32(kBit.f32.subnormal.negative.max), dir: true, result: f32Bits(kBit.f32.positive.min) },\n    { val: hexToF32(kBit.f32.subnormal.negative.max), dir: false, result: f32Bits(kBit.f32.negative.max) },\n\n    // Normals\n    { val: hexToF32(kBit.f32.positive.max), dir: true, result: f32Bits(kBit.f32.infinity.positive) },\n    { val: hexToF32(kBit.f32.positive.max), dir: false, result: f32Bits(0x7f7ffffe) },\n    { val: hexToF32(kBit.f32.positive.min), dir: true, result: f32Bits(0x00800001) },\n    { val: hexToF32(kBit.f32.positive.min), dir: false, result: f32(0) },\n    { val: hexToF32(kBit.f32.negative.max), dir: true, result: f32(0) },\n    { val: hexToF32(kBit.f32.negative.max), dir: false, result: f32Bits(0x80800001) },\n    { val: hexToF32(kBit.f32.negative.min), dir: true, result: f32Bits(0xff7ffffe) },\n    { val: hexToF32(kBit.f32.negative.min), dir: false, result: f32Bits(kBit.f32.infinity.negative) },\n    { val: hexToF32(0x03800000), dir: true, result: f32Bits(0x03800001) },\n    { val: hexToF32(0x03800000), dir: false, result: f32Bits(0x037fffff) },\n    { val: hexToF32(0x83800000), dir: true, result: f32Bits(0x837fffff) },\n    { val: hexToF32(0x83800000), dir: false, result: f32Bits(0x83800001) },\n\n    // Not precisely expressible as float32\n    { val: 0.001, dir: true, result: f32Bits(0x3a83126f) }, // positive normal\n    { val: 0.001, dir: false, result: f32Bits(0x3a83126e) }, // positive normal\n    { val: -0.001, dir: true, result: f32Bits(0xba83126e) }, // negative normal\n    { val: -0.001, dir: false, result: f32Bits(0xba83126f) }, // negative normal\n    { val: 2.82E-40, dir: true, result: f32Bits(kBit.f32.positive.min) }, // positive subnormal\n    { val: 2.82E-40, dir: false, result: f32Bits(kBit.f32.negative.max) }, // positive subnormal\n    { val: -2.82E-40, dir: true, result: f32Bits(kBit.f32.positive.min) }, // negative subnormal\n    { val: -2.82E-40, dir: false, result: f32Bits(kBit.f32.negative.max) }, // negative subnormal\n    ]\n  )\n  .fn(t => {\n    const val = t.params.val;\n    const dir = t.params.dir;\n    const expect = t.params.result;\n    const expect_type = typeof expect;\n    const got = nextAfterF32(val, dir, 'flush');\n    const got_type = typeof got;\n    t.expect(\n      got.value === expect.value || (Number.isNaN(got.value) && Number.isNaN(expect.value)),\n      `nextAfter(${val}, ${dir}, true) returned ${got} (${got_type}). Expected ${expect} (${expect_type})`\n    );\n  });\n\ng.test('nextAfterNoFlush')\n  .paramsSubcasesOnly<nextAfterCase>(\n    // prettier-ignore\n    [\n    // Edge Cases\n    { val: Number.NaN, dir: true, result: f32Bits(0x7fffffff) },\n    { val: Number.NaN, dir: false, result: f32Bits(0x7fffffff) },\n    { val: Number.POSITIVE_INFINITY, dir: true, result: f32Bits(kBit.f32.infinity.positive) },\n    { val: Number.POSITIVE_INFINITY, dir: false, result: f32Bits(kBit.f32.infinity.positive) },\n    { val: Number.NEGATIVE_INFINITY, dir: true, result: f32Bits(kBit.f32.infinity.negative) },\n    { val: Number.NEGATIVE_INFINITY, dir: false, result: f32Bits(kBit.f32.infinity.negative) },\n\n    // Zeroes\n    { val: +0, dir: true, result: f32Bits(kBit.f32.subnormal.positive.min) },\n    { val: +0, dir: false, result: f32Bits(kBit.f32.subnormal.negative.max) },\n    { val: -0, dir: true, result: f32Bits(kBit.f32.subnormal.positive.min) },\n    { val: -0, dir: false, result: f32Bits(kBit.f32.subnormal.negative.max) },\n\n    // Subnormals\n    { val: hexToF32(kBit.f32.subnormal.positive.min), dir: true, result: f32Bits(0x00000002) },\n    { val: hexToF32(kBit.f32.subnormal.positive.min), dir: false, result: f32(0) },\n    { val: hexToF32(kBit.f32.subnormal.positive.max), dir: true, result: f32Bits(kBit.f32.positive.min) },\n    { val: hexToF32(kBit.f32.subnormal.positive.max), dir: false, result: f32Bits(0x007ffffe) },\n    { val: hexToF32(kBit.f32.subnormal.negative.min), dir: true, result: f32Bits(0x807ffffe) },\n    { val: hexToF32(kBit.f32.subnormal.negative.min), dir: false, result: f32Bits(kBit.f32.negative.max) },\n    { val: hexToF32(kBit.f32.subnormal.negative.max), dir: true, result: f32(0) },\n    { val: hexToF32(kBit.f32.subnormal.negative.max), dir: false, result: f32Bits(0x80000002) },\n\n    // Normals\n    { val: hexToF32(kBit.f32.positive.max), dir: true, result: f32Bits(kBit.f32.infinity.positive) },\n    { val: hexToF32(kBit.f32.positive.max), dir: false, result: f32Bits(0x7f7ffffe) },\n    { val: hexToF32(kBit.f32.positive.min), dir: true, result: f32Bits(0x00800001) },\n    { val: hexToF32(kBit.f32.positive.min), dir: false, result: f32Bits(kBit.f32.subnormal.positive.max) },\n    { val: hexToF32(kBit.f32.negative.max), dir: true, result: f32Bits(kBit.f32.subnormal.negative.min) },\n    { val: hexToF32(kBit.f32.negative.max), dir: false, result: f32Bits(0x80800001) },\n    { val: hexToF32(kBit.f32.negative.min), dir: true, result: f32Bits(0xff7ffffe) },\n    { val: hexToF32(kBit.f32.negative.min), dir: false, result: f32Bits(kBit.f32.infinity.negative) },\n    { val: hexToF32(0x03800000), dir: true, result: f32Bits(0x03800001) },\n    { val: hexToF32(0x03800000), dir: false, result: f32Bits(0x037fffff) },\n    { val: hexToF32(0x83800000), dir: true, result: f32Bits(0x837fffff) },\n    { val: hexToF32(0x83800000), dir: false, result: f32Bits(0x83800001) },\n\n    // Not precisely expressible as float32\n    { val: 0.001, dir: true, result: f32Bits(0x3a83126f) }, // positive normal\n    { val: 0.001, dir: false, result: f32Bits(0x3a83126e) }, // positive normal\n    { val: -0.001, dir: true, result: f32Bits(0xba83126e) }, // negative normal\n    { val: -0.001, dir: false, result: f32Bits(0xba83126f) }, // negative normal\n    { val: 2.82E-40, dir: true, result: f32Bits(0x0003121a) }, // positive subnormal\n    { val: 2.82E-40, dir: false, result: f32Bits(0x00031219) }, // positive subnormal\n    { val: -2.82E-40, dir: true, result: f32Bits(0x80031219) }, // negative subnormal\n    { val: -2.82E-40, dir: false, result: f32Bits(0x8003121a) }, // negative subnormal\n  ]\n  )\n  .fn(t => {\n    const val = t.params.val;\n    const dir = t.params.dir;\n    const expect = t.params.result;\n    const expect_type = typeof expect;\n    const got = nextAfterF32(val, dir, 'no-flush');\n    const got_type = typeof got;\n    t.expect(\n      got.value === expect.value || (Number.isNaN(got.value) && Number.isNaN(expect.value)),\n      `nextAfter(${val}, ${dir}, false) returned ${got} (${got_type}). Expected ${expect} (${expect_type})`\n    );\n  });\n\ninterface OneULPCase {\n  target: number;\n  expect: number;\n}\n\ng.test('oneULPFlushToZero')\n  .paramsSimple<OneULPCase>([\n    // Edge Cases\n    { target: Number.NaN, expect: Number.NaN },\n    { target: Number.POSITIVE_INFINITY, expect: hexToF32(0x73800000) },\n    { target: Number.NEGATIVE_INFINITY, expect: hexToF32(0x73800000) },\n\n    // Zeroes\n    { target: +0, expect: hexToF32(0x00800000) },\n    { target: -0, expect: hexToF32(0x00800000) },\n\n    // Subnormals\n    { target: hexToF32(kBit.f32.subnormal.positive.min), expect: hexToF32(0x00800000) },\n    { target: 2.82e-40, expect: hexToF32(0x00800000) }, // positive subnormal\n    { target: hexToF32(kBit.f32.subnormal.positive.max), expect: hexToF32(0x00800000) },\n    { target: hexToF32(kBit.f32.subnormal.negative.min), expect: hexToF32(0x00800000) },\n    { target: -2.82e-40, expect: hexToF32(0x00800000) }, // negative subnormal\n    { target: hexToF32(kBit.f32.subnormal.negative.max), expect: hexToF32(0x00800000) },\n\n    // Normals\n    { target: hexToF32(kBit.f32.positive.min), expect: hexToF32(0x00000001) },\n    { target: 1, expect: hexToF32(0x33800000) },\n    { target: 2, expect: hexToF32(0x34000000) },\n    { target: 4, expect: hexToF32(0x34800000) },\n    { target: 1000000, expect: hexToF32(0x3d800000) },\n    { target: hexToF32(kBit.f32.positive.max), expect: hexToF32(0x73800000) },\n    { target: hexToF32(kBit.f32.negative.max), expect: hexToF32(0x00000001) },\n    { target: -1, expect: hexToF32(0x33800000) },\n    { target: -2, expect: hexToF32(0x34000000) },\n    { target: -4, expect: hexToF32(0x34800000) },\n    { target: -1000000, expect: hexToF32(0x3d800000) },\n    { target: hexToF32(kBit.f32.negative.min), expect: hexToF32(0x73800000) },\n\n    // No precise f32 value\n    { target: 0.001, expect: hexToF32(0x2f000000) }, // positive normal\n    { target: -0.001, expect: hexToF32(0x2f000000) }, // negative normal\n    { target: 1e40, expect: hexToF32(0x73800000) }, // positive out of range\n    { target: -1e40, expect: hexToF32(0x73800000) }, // negative out of range\n  ])\n  .fn(t => {\n    const target = t.params.target;\n    const got = oneULP(target, 'flush');\n    const expect = t.params.expect;\n    t.expect(\n      got === expect || (Number.isNaN(got) && Number.isNaN(expect)),\n      `oneULP(${target}, true) returned ${got}. Expected ${expect}`\n    );\n  });\n\ng.test('oneULPNoFlush')\n  .paramsSimple<OneULPCase>([\n    // Edge Cases\n    { target: Number.NaN, expect: Number.NaN },\n    { target: Number.POSITIVE_INFINITY, expect: hexToF32(0x73800000) },\n    { target: Number.NEGATIVE_INFINITY, expect: hexToF32(0x73800000) },\n\n    // Zeroes\n    { target: +0, expect: hexToF32(0x00000001) },\n    { target: -0, expect: hexToF32(0x00000001) },\n\n    // Subnormals\n    { target: hexToF32(kBit.f32.subnormal.positive.min), expect: hexToF32(0x00000001) },\n    { target: -2.82e-40, expect: hexToF32(0x00000001) }, // negative subnormal\n    { target: hexToF32(kBit.f32.subnormal.positive.max), expect: hexToF32(0x00000001) },\n    { target: hexToF32(kBit.f32.subnormal.negative.min), expect: hexToF32(0x00000001) },\n    { target: 2.82e-40, expect: hexToF32(0x00000001) }, // positive subnormal\n    { target: hexToF32(kBit.f32.subnormal.negative.max), expect: hexToF32(0x00000001) },\n\n    // Normals\n    { target: hexToF32(kBit.f32.positive.min), expect: hexToF32(0x00000001) },\n    { target: 1, expect: hexToF32(0x33800000) },\n    { target: 2, expect: hexToF32(0x34000000) },\n    { target: 4, expect: hexToF32(0x34800000) },\n    { target: 1000000, expect: hexToF32(0x3d800000) },\n    { target: hexToF32(kBit.f32.positive.max), expect: hexToF32(0x73800000) },\n    { target: hexToF32(kBit.f32.negative.max), expect: hexToF32(0x00000001) },\n    { target: -1, expect: hexToF32(0x33800000) },\n    { target: -2, expect: hexToF32(0x34000000) },\n    { target: -4, expect: hexToF32(0x34800000) },\n    { target: -1000000, expect: hexToF32(0x3d800000) },\n    { target: hexToF32(kBit.f32.negative.min), expect: hexToF32(0x73800000) },\n\n    // No precise f32 value\n    { target: 0.001, expect: hexToF32(0x2f000000) }, // positive normal\n    { target: -0.001, expect: hexToF32(0x2f000000) }, // negative normal\n    { target: 1e40, expect: hexToF32(0x73800000) }, // positive out of range\n    { target: -1e40, expect: hexToF32(0x73800000) }, // negative out of range\n  ])\n  .fn(t => {\n    const target = t.params.target;\n    const got = oneULP(target, 'no-flush');\n    const expect = t.params.expect;\n    t.expect(\n      got === expect || (Number.isNaN(got) && Number.isNaN(expect)),\n      `oneULPImpl(${target}, false) returned ${got}. Expected ${expect}`\n    );\n  });\n\ng.test('oneULP')\n  .paramsSimple<OneULPCase>([\n    // Edge Cases\n    { target: Number.NaN, expect: Number.NaN },\n    { target: Number.NEGATIVE_INFINITY, expect: hexToF32(0x73800000) },\n    { target: Number.POSITIVE_INFINITY, expect: hexToF32(0x73800000) },\n\n    // Zeroes\n    { target: +0, expect: hexToF32(0x00800000) },\n    { target: -0, expect: hexToF32(0x00800000) },\n\n    // Subnormals\n    { target: hexToF32(kBit.f32.subnormal.negative.max), expect: hexToF32(0x00800000) },\n    { target: -2.82e-40, expect: hexToF32(0x00800000) },\n    { target: hexToF32(kBit.f32.subnormal.negative.min), expect: hexToF32(0x00800000) },\n    { target: hexToF32(kBit.f32.subnormal.positive.max), expect: hexToF32(0x00800000) },\n    { target: 2.82e-40, expect: hexToF32(0x00800000) },\n    { target: hexToF32(kBit.f32.subnormal.positive.min), expect: hexToF32(0x00800000) },\n\n    // Normals\n    { target: hexToF32(kBit.f32.positive.min), expect: hexToF32(0x00000001) },\n    { target: 1, expect: hexToF32(0x33800000) },\n    { target: 2, expect: hexToF32(0x34000000) },\n    { target: 4, expect: hexToF32(0x34800000) },\n    { target: 1000000, expect: hexToF32(0x3d800000) },\n    { target: hexToF32(kBit.f32.positive.max), expect: hexToF32(0x73800000) },\n    { target: hexToF32(kBit.f32.negative.max), expect: hexToF32(0x000000001) },\n    { target: -1, expect: hexToF32(0x33800000) },\n    { target: -2, expect: hexToF32(0x34000000) },\n    { target: -4, expect: hexToF32(0x34800000) },\n    { target: -1000000, expect: hexToF32(0x3d800000) },\n    { target: hexToF32(kBit.f32.negative.min), expect: hexToF32(0x73800000) },\n\n    // No precise f32 value\n    { target: -0.001, expect: hexToF32(0x2f000000) }, // negative normal\n    { target: -1e40, expect: hexToF32(0x73800000) }, // negative out of range\n    { target: 0.001, expect: hexToF32(0x2f000000) }, // positive normal\n    { target: 1e40, expect: hexToF32(0x73800000) }, // positive out of range\n  ])\n  .fn(t => {\n    const target = t.params.target;\n    const got = oneULP(target);\n    const expect = t.params.expect;\n    t.expect(\n      got === expect || (Number.isNaN(got) && Number.isNaN(expect)),\n      `oneULP(${target}) returned ${got}. Expected ${expect}`\n    );\n  });\n\ninterface correctlyRoundedF32Case {\n  value: number;\n  expected: Array<number>;\n}\n\ng.test('correctlyRoundedF32')\n  .paramsSubcasesOnly<correctlyRoundedF32Case>(\n    // prettier-ignore\n    [\n      // Edge Cases\n      { value: kValue.f32.infinity.positive, expected: [kValue.f32.positive.max, Number.POSITIVE_INFINITY] },\n      { value: kValue.f32.infinity.negative, expected: [Number.NEGATIVE_INFINITY, kValue.f32.negative.min] },\n      { value: kValue.f32.positive.max, expected: [kValue.f32.positive.max] },\n      { value: kValue.f32.negative.min, expected: [kValue.f32.negative.min] },\n\n      // 32-bit subnormals\n      { value: kValue.f32.subnormal.positive.min, expected: [kValue.f32.subnormal.positive.min] },\n      { value: kValue.f32.subnormal.positive.max, expected: [kValue.f32.subnormal.positive.max] },\n      { value: kValue.f32.subnormal.negative.min, expected: [kValue.f32.subnormal.negative.min] },\n      { value: kValue.f32.subnormal.negative.max, expected: [kValue.f32.subnormal.negative.max] },\n\n      // 64-bit subnormals\n      { value: hexToF64(0x00000000, 0x00000001), expected: [0, kValue.f32.subnormal.positive.min] },\n      { value: hexToF64(0x00000000, 0x00000002), expected: [0, kValue.f32.subnormal.positive.min] },\n      { value: hexToF64(0x800fffff, 0xffffffff), expected: [kValue.f32.subnormal.negative.max, 0] },\n      { value: hexToF64(0x800fffff, 0xfffffffe), expected: [kValue.f32.subnormal.negative.max, 0] },\n\n      // 32-bit normals\n      { value: 0, expected: [0] },\n      { value: kValue.f32.positive.min, expected: [kValue.f32.positive.min] },\n      { value: kValue.f32.negative.max, expected: [kValue.f32.negative.max] },\n      { value: hexToF32(0x03800000), expected: [hexToF32(0x03800000)] },\n      { value: hexToF32(0x03800001), expected: [hexToF32(0x03800001)] },\n      { value: hexToF32(0x83800000), expected: [hexToF32(0x83800000)] },\n      { value: hexToF32(0x83800001), expected: [hexToF32(0x83800001)] },\n\n      // 64-bit normals\n      { value: hexToF64(0x3ff00000, 0x00000001), expected: [hexToF32(0x3f800000), hexToF32(0x3f800001)] },\n      { value: hexToF64(0x3ff00000, 0x00000002), expected: [hexToF32(0x3f800000), hexToF32(0x3f800001)] },\n      { value: hexToF64(0x3ff00010, 0x00000010), expected: [hexToF32(0x3f800080), hexToF32(0x3f800081)] },\n      { value: hexToF64(0x3ff00020, 0x00000020), expected: [hexToF32(0x3f800100), hexToF32(0x3f800101)] },\n      { value: hexToF64(0xbff00000, 0x00000001), expected: [hexToF32(0xbf800001), hexToF32(0xbf800000)] },\n      { value: hexToF64(0xbff00000, 0x00000002), expected: [hexToF32(0xbf800001), hexToF32(0xbf800000)] },\n      { value: hexToF64(0xbff00010, 0x00000010), expected: [hexToF32(0xbf800081), hexToF32(0xbf800080)] },\n      { value: hexToF64(0xbff00020, 0x00000020), expected: [hexToF32(0xbf800101), hexToF32(0xbf800100)] },\n    ]\n  )\n  .fn(t => {\n    const value = t.params.value;\n    const expected = t.params.expected;\n\n    const got = correctlyRoundedF32(value);\n    t.expect(\n      objectEquals(expected, got),\n      `correctlyRoundedF32(${value}) returned [${got}]. Expected [${expected}]`\n    );\n  });\n\ninterface lerpCase {\n  a: number;\n  b: number;\n  t: number;\n  result: number;\n}\n\ng.test('lerp')\n  .paramsSimple<lerpCase>([\n    // Infinite cases\n    { a: 0.0, b: Number.POSITIVE_INFINITY, t: 0.5, result: Number.NaN },\n    { a: Number.POSITIVE_INFINITY, b: 0.0, t: 0.5, result: Number.NaN },\n    { a: Number.NEGATIVE_INFINITY, b: 1.0, t: 0.5, result: Number.NaN },\n    { a: 1.0, b: Number.NEGATIVE_INFINITY, t: 0.5, result: Number.NaN },\n    { a: Number.NEGATIVE_INFINITY, b: Number.POSITIVE_INFINITY, t: 0.5, result: Number.NaN },\n    { a: Number.POSITIVE_INFINITY, b: Number.NEGATIVE_INFINITY, t: 0.5, result: Number.NaN },\n    { a: 0.0, b: 1.0, t: Number.NEGATIVE_INFINITY, result: Number.NaN },\n    { a: 1.0, b: 0.0, t: Number.NEGATIVE_INFINITY, result: Number.NaN },\n    { a: 0.0, b: 1.0, t: Number.POSITIVE_INFINITY, result: Number.NaN },\n    { a: 1.0, b: 0.0, t: Number.POSITIVE_INFINITY, result: Number.NaN },\n\n    // [0.0, 1.0] cases\n    { a: 0.0, b: 1.0, t: -1.0, result: -1.0 },\n    { a: 0.0, b: 1.0, t: 0.0, result: 0.0 },\n    { a: 0.0, b: 1.0, t: 0.1, result: 0.1 },\n    { a: 0.0, b: 1.0, t: 0.01, result: 0.01 },\n    { a: 0.0, b: 1.0, t: 0.001, result: 0.001 },\n    { a: 0.0, b: 1.0, t: 0.25, result: 0.25 },\n    { a: 0.0, b: 1.0, t: 0.5, result: 0.5 },\n    { a: 0.0, b: 1.0, t: 0.9, result: 0.9 },\n    { a: 0.0, b: 1.0, t: 0.99, result: 0.99 },\n    { a: 0.0, b: 1.0, t: 0.999, result: 0.999 },\n    { a: 0.0, b: 1.0, t: 1.0, result: 1.0 },\n    { a: 0.0, b: 1.0, t: 2.0, result: 2.0 },\n\n    // [1.0, 0.0] cases\n    { a: 1.0, b: 0.0, t: -1.0, result: 2.0 },\n    { a: 1.0, b: 0.0, t: 0.0, result: 1.0 },\n    { a: 1.0, b: 0.0, t: 0.1, result: 0.9 },\n    { a: 1.0, b: 0.0, t: 0.01, result: 0.99 },\n    { a: 1.0, b: 0.0, t: 0.001, result: 0.999 },\n    { a: 1.0, b: 0.0, t: 0.25, result: 0.75 },\n    { a: 1.0, b: 0.0, t: 0.5, result: 0.5 },\n    { a: 1.0, b: 0.0, t: 0.9, result: 0.1 },\n    { a: 1.0, b: 0.0, t: 0.99, result: 0.01 },\n    { a: 1.0, b: 0.0, t: 0.999, result: 0.001 },\n    { a: 1.0, b: 0.0, t: 1.0, result: 0.0 },\n    { a: 1.0, b: 0.0, t: 2.0, result: -1.0 },\n\n    // [0.0, 10.0] cases\n    { a: 0.0, b: 10.0, t: -1.0, result: -10.0 },\n    { a: 0.0, b: 10.0, t: 0.0, result: 0.0 },\n    { a: 0.0, b: 10.0, t: 0.1, result: 1.0 },\n    { a: 0.0, b: 10.0, t: 0.01, result: 0.1 },\n    { a: 0.0, b: 10.0, t: 0.001, result: 0.01 },\n    { a: 0.0, b: 10.0, t: 0.25, result: 2.5 },\n    { a: 0.0, b: 10.0, t: 0.5, result: 5.0 },\n    { a: 0.0, b: 10.0, t: 0.9, result: 9.0 },\n    { a: 0.0, b: 10.0, t: 0.99, result: 9.9 },\n    { a: 0.0, b: 10.0, t: 0.999, result: 9.99 },\n    { a: 0.0, b: 10.0, t: 1.0, result: 10.0 },\n    { a: 0.0, b: 10.0, t: 2.0, result: 20.0 },\n\n    // [10.0, 0.0] cases\n    { a: 10.0, b: 0.0, t: -1.0, result: 20.0 },\n    { a: 10.0, b: 0.0, t: 0.0, result: 10.0 },\n    { a: 10.0, b: 0.0, t: 0.1, result: 9 },\n    { a: 10.0, b: 0.0, t: 0.01, result: 9.9 },\n    { a: 10.0, b: 0.0, t: 0.001, result: 9.99 },\n    { a: 10.0, b: 0.0, t: 0.25, result: 7.5 },\n    { a: 10.0, b: 0.0, t: 0.5, result: 5.0 },\n    { a: 10.0, b: 0.0, t: 0.9, result: 1.0 },\n    { a: 10.0, b: 0.0, t: 0.99, result: 0.1 },\n    { a: 10.0, b: 0.0, t: 0.999, result: 0.01 },\n    { a: 10.0, b: 0.0, t: 1.0, result: 0.0 },\n    { a: 10.0, b: 0.0, t: 2.0, result: -10.0 },\n\n    // [2.0, 10.0] cases\n    { a: 2.0, b: 10.0, t: -1.0, result: -6.0 },\n    { a: 2.0, b: 10.0, t: 0.0, result: 2.0 },\n    { a: 2.0, b: 10.0, t: 0.1, result: 2.8 },\n    { a: 2.0, b: 10.0, t: 0.01, result: 2.08 },\n    { a: 2.0, b: 10.0, t: 0.001, result: 2.008 },\n    { a: 2.0, b: 10.0, t: 0.25, result: 4.0 },\n    { a: 2.0, b: 10.0, t: 0.5, result: 6.0 },\n    { a: 2.0, b: 10.0, t: 0.9, result: 9.2 },\n    { a: 2.0, b: 10.0, t: 0.99, result: 9.92 },\n    { a: 2.0, b: 10.0, t: 0.999, result: 9.992 },\n    { a: 2.0, b: 10.0, t: 1.0, result: 10.0 },\n    { a: 2.0, b: 10.0, t: 2.0, result: 18.0 },\n\n    // [10.0, 2.0] cases\n    { a: 10.0, b: 2.0, t: -1.0, result: 18.0 },\n    { a: 10.0, b: 2.0, t: 0.0, result: 10.0 },\n    { a: 10.0, b: 2.0, t: 0.1, result: 9.2 },\n    { a: 10.0, b: 2.0, t: 0.01, result: 9.92 },\n    { a: 10.0, b: 2.0, t: 0.001, result: 9.992 },\n    { a: 10.0, b: 2.0, t: 0.25, result: 8.0 },\n    { a: 10.0, b: 2.0, t: 0.5, result: 6.0 },\n    { a: 10.0, b: 2.0, t: 0.9, result: 2.8 },\n    { a: 10.0, b: 2.0, t: 0.99, result: 2.08 },\n    { a: 10.0, b: 2.0, t: 0.999, result: 2.008 },\n    { a: 10.0, b: 2.0, t: 1.0, result: 2.0 },\n    { a: 10.0, b: 2.0, t: 2.0, result: -6.0 },\n\n    // [-1.0, 1.0] cases\n    { a: -1.0, b: 1.0, t: -2.0, result: -5.0 },\n    { a: -1.0, b: 1.0, t: 0.0, result: -1.0 },\n    { a: -1.0, b: 1.0, t: 0.1, result: -0.8 },\n    { a: -1.0, b: 1.0, t: 0.01, result: -0.98 },\n    { a: -1.0, b: 1.0, t: 0.001, result: -0.998 },\n    { a: -1.0, b: 1.0, t: 0.25, result: -0.5 },\n    { a: -1.0, b: 1.0, t: 0.5, result: 0.0 },\n    { a: -1.0, b: 1.0, t: 0.9, result: 0.8 },\n    { a: -1.0, b: 1.0, t: 0.99, result: 0.98 },\n    { a: -1.0, b: 1.0, t: 0.999, result: 0.998 },\n    { a: -1.0, b: 1.0, t: 1.0, result: 1.0 },\n    { a: -1.0, b: 1.0, t: 2.0, result: 3.0 },\n\n    // [1.0, -1.0] cases\n    { a: 1.0, b: -1.0, t: -2.0, result: 5.0 },\n    { a: 1.0, b: -1.0, t: 0.0, result: 1.0 },\n    { a: 1.0, b: -1.0, t: 0.1, result: 0.8 },\n    { a: 1.0, b: -1.0, t: 0.01, result: 0.98 },\n    { a: 1.0, b: -1.0, t: 0.001, result: 0.998 },\n    { a: 1.0, b: -1.0, t: 0.25, result: 0.5 },\n    { a: 1.0, b: -1.0, t: 0.5, result: 0.0 },\n    { a: 1.0, b: -1.0, t: 0.9, result: -0.8 },\n    { a: 1.0, b: -1.0, t: 0.99, result: -0.98 },\n    { a: 1.0, b: -1.0, t: 0.999, result: -0.998 },\n    { a: 1.0, b: -1.0, t: 1.0, result: -1.0 },\n    { a: 1.0, b: -1.0, t: 2.0, result: -3.0 },\n\n    // [-1.0, 0.0] cases\n    { a: -1.0, b: 0.0, t: -1.0, result: -2.0 },\n    { a: -1.0, b: 0.0, t: 0.0, result: -1.0 },\n    { a: -1.0, b: 0.0, t: 0.1, result: -0.9 },\n    { a: -1.0, b: 0.0, t: 0.01, result: -0.99 },\n    { a: -1.0, b: 0.0, t: 0.001, result: -0.999 },\n    { a: -1.0, b: 0.0, t: 0.25, result: -0.75 },\n    { a: -1.0, b: 0.0, t: 0.5, result: -0.5 },\n    { a: -1.0, b: 0.0, t: 0.9, result: -0.1 },\n    { a: -1.0, b: 0.0, t: 0.99, result: -0.01 },\n    { a: -1.0, b: 0.0, t: 0.999, result: -0.001 },\n    { a: -1.0, b: 0.0, t: 1.0, result: 0.0 },\n    { a: -1.0, b: 0.0, t: 2.0, result: 1.0 },\n\n    // [0.0, -1.0] cases\n    { a: 0.0, b: -1.0, t: -1.0, result: 1.0 },\n    { a: 0.0, b: -1.0, t: 0.0, result: 0.0 },\n    { a: 0.0, b: -1.0, t: 0.1, result: -0.1 },\n    { a: 0.0, b: -1.0, t: 0.01, result: -0.01 },\n    { a: 0.0, b: -1.0, t: 0.001, result: -0.001 },\n    { a: 0.0, b: -1.0, t: 0.25, result: -0.25 },\n    { a: 0.0, b: -1.0, t: 0.5, result: -0.5 },\n    { a: 0.0, b: -1.0, t: 0.9, result: -0.9 },\n    { a: 0.0, b: -1.0, t: 0.99, result: -0.99 },\n    { a: 0.0, b: -1.0, t: 0.999, result: -0.999 },\n    { a: 0.0, b: -1.0, t: 1.0, result: -1.0 },\n    { a: 0.0, b: -1.0, t: 2.0, result: -2.0 },\n  ])\n  .fn(test => {\n    const a = test.params.a;\n    const b = test.params.b;\n    const t = test.params.t;\n    const got = lerp(a, b, t);\n    const expect = test.params.result;\n\n    test.expect(\n      (Number.isNaN(got) && Number.isNaN(expect)) || withinOneULP(got, expect, 'flush'),\n      `lerp(${a}, ${b}, ${t}) returned ${got}. Expected ${expect}`\n    );\n  });\n\ninterface rangeCase {\n  a: number;\n  b: number;\n  num_steps: number;\n  result: Array<number>;\n}\n\ng.test('linearRange')\n  .paramsSimple<rangeCase>(\n    // prettier-ignore\n    [\n    { a: 0.0, b: Number.POSITIVE_INFINITY, num_steps: 10, result: new Array<number>(10).fill(Number.NaN) },\n    { a: Number.POSITIVE_INFINITY, b: 0.0, num_steps: 10, result: new Array<number>(10).fill(Number.NaN) },\n    { a: Number.NEGATIVE_INFINITY, b: 1.0, num_steps: 10, result: new Array<number>(10).fill(Number.NaN) },\n    { a: 1.0, b: Number.NEGATIVE_INFINITY, num_steps: 10, result: new Array<number>(10).fill(Number.NaN) },\n    { a: Number.NEGATIVE_INFINITY, b: Number.POSITIVE_INFINITY, num_steps: 10, result: new Array<number>(10).fill(Number.NaN) },\n    { a: Number.POSITIVE_INFINITY, b: Number.NEGATIVE_INFINITY, num_steps: 10, result: new Array<number>(10).fill(Number.NaN) },\n    { a: 0.0, b: 0.0, num_steps: 10, result: new Array<number>(10).fill(0.0) },\n    { a: 10.0, b: 10.0, num_steps: 10, result: new Array<number>(10).fill(10.0) },\n    { a: 0.0, b: 10.0, num_steps: 1, result: [0.0] },\n    { a: 10.0, b: 0.0, num_steps: 1, result: [10] },\n    { a: 0.0, b: 10.0, num_steps: 11, result: [0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0] },\n    { a: 10.0, b: 0.0, num_steps: 11, result: [10.0, 9.0, 8.0, 7.0, 6.0, 5.0, 4.0, 3.0, 2.0, 1.0, 0.0] },\n    { a: 0.0, b: 1000.0, num_steps: 11, result: [0.0, 100.0, 200.0, 300.0, 400.0, 500.0, 600.0, 700.0, 800.0, 900.0, 1000.0] },\n    { a: 1000.0, b: 0.0, num_steps: 11, result: [1000.0, 900.0, 800.0, 700.0, 600.0, 500.0, 400.0, 300.0, 200.0, 100.0, 0.0] },\n    { a: 1.0, b: 5.0, num_steps: 5, result: [1.0, 2.0, 3.0, 4.0, 5.0] },\n    { a: 5.0, b: 1.0, num_steps: 5, result: [5.0, 4.0, 3.0, 2.0, 1.0] },\n    { a: 0.0, b: 1.0, num_steps: 11, result: [0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0] },\n    { a: 1.0, b: 0.0, num_steps: 11, result: [1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1, 0.0] },\n    { a: 0.0, b: 1.0, num_steps: 5, result: [0.0, 0.25, 0.5, 0.75, 1.0] },\n    { a: 1.0, b: 0.0, num_steps: 5, result: [1.0, 0.75, 0.5, 0.25, 0.0] },\n    { a: -1.0, b: 1.0, num_steps: 11, result: [-1.0, -0.8, -0.6, -0.4, -0.2, 0.0, 0.2, 0.4, 0.6, 0.8, 1.0] },\n    { a: 1.0, b: -1.0, num_steps: 11, result: [1.0, 0.8, 0.6, 0.4, 0.2, 0.0, -0.2, -0.4, -0.6, -0.8, -1.0] },\n    { a: -1.0, b: 0, num_steps: 11, result: [-1.0, -0.9, -0.8, -0.7, -0.6, -0.5, -0.4, -0.3, -0.2, -0.1, 0.0] },\n    { a: 0.0, b: -1.0, num_steps: 11, result: [0.0, -0.1, -0.2, -0.3, -0.4, -0.5, -0.6, -0.7, -0.8, -0.9, -1.0] },\n  ]\n  )\n  .fn(test => {\n    const a = test.params.a;\n    const b = test.params.b;\n    const num_steps = test.params.num_steps;\n    const got = linearRange(a, b, num_steps);\n    const expect = test.params.result;\n\n    test.expect(\n      compareArrayOfNumbers(got, expect, 'no-flush'),\n      `linearRange(${a}, ${b}, ${num_steps}) returned ${got}. Expected ${expect}`\n    );\n  });\n\ng.test('biasedRange')\n  .paramsSimple<rangeCase>(\n    // prettier-ignore\n    [\n    { a: 0.0, b: Number.POSITIVE_INFINITY, num_steps: 10, result: new Array<number>(10).fill(Number.NaN) },\n    { a: Number.POSITIVE_INFINITY, b: 0.0, num_steps: 10, result: new Array<number>(10).fill(Number.NaN) },\n    { a: Number.NEGATIVE_INFINITY, b: 1.0, num_steps: 10, result: new Array<number>(10).fill(Number.NaN) },\n    { a: 1.0, b: Number.NEGATIVE_INFINITY, num_steps: 10, result: new Array<number>(10).fill(Number.NaN) },\n    { a: Number.NEGATIVE_INFINITY, b: Number.POSITIVE_INFINITY, num_steps: 10, result: new Array<number>(10).fill(Number.NaN) },\n    { a: Number.POSITIVE_INFINITY, b: Number.NEGATIVE_INFINITY, num_steps: 10, result: new Array<number>(10).fill(Number.NaN) },\n    { a: 0.0, b: 0.0, num_steps: 10, result: new Array<number>(10).fill(0.0) },\n    { a: 10.0, b: 10.0, num_steps: 10, result: new Array<number>(10).fill(10.0) },\n    { a: 0.0, b: 10.0, num_steps: 1, result: [0.0] },\n    { a: 10.0, b: 0.0, num_steps: 1, result: [10.0] },\n    { a: 0.0, b: 10.0, num_steps: 11, result: [0.0, 0.1, 0.4, 0.9, 1.6, 2.5, 3.6, 4.9, 6.4, 8.1, 10.0] },\n    { a: 10.0, b: 0.0, num_steps: 11, result: [10.0, 9.9, 9.6, 9.1, 8.4, 7.5, 6.4, 5.1, 3.6, 1.9, 0.0] },\n    { a: 0.0, b: 1000.0, num_steps: 11, result: [0.0, 10.0, 40.0, 90.0, 160.0, 250.0, 360.0, 490.0, 640.0, 810.0, 1000.0] },\n    { a: 1000.0, b: 0.0, num_steps: 11, result: [1000.0, 990.0, 960.0, 910.0, 840.0, 750.0, 640.0, 510.0, 360.0, 190.0, 0.0] },\n    { a: 1.0, b: 5.0, num_steps: 5, result: [1.0, 1.25, 2.0, 3.25, 5.0] },\n    { a: 5.0, b: 1.0, num_steps: 5, result: [5.0, 4.75, 4.0, 2.75, 1.0] },\n    { a: 0.0, b: 1.0, num_steps: 11, result: [0.0, 0.01, 0.04, 0.09, 0.16, 0.25, 0.36, 0.49, 0.64, 0.81, 1.0] },\n    { a: 1.0, b: 0.0, num_steps: 11, result: [1.0, 0.99, 0.96, 0.91, 0.84, 0.75, 0.64, 0.51, 0.36, 0.19, 0.0] },\n    { a: 0.0, b: 1.0, num_steps: 5, result: [0.0, 0.0625, 0.25, 0.5625, 1.0] },\n    { a: 1.0, b: 0.0, num_steps: 5, result: [1.0, 0.9375, 0.75, 0.4375, 0.0] },\n    { a: -1.0, b: 1.0, num_steps: 11, result: [-1.0, -0.98, -0.92, -0.82, -0.68, -0.5, -0.28 ,-0.02, 0.28, 0.62, 1.0] },\n    { a: 1.0, b: -1.0, num_steps: 11, result: [1.0, 0.98, 0.92, 0.82, 0.68, 0.5, 0.28 ,0.02, -0.28, -0.62, -1.0] },\n    { a: -1.0, b: 0, num_steps: 11, result: [-1.0 , -0.99, -0.96, -0.91, -0.84, -0.75, -0.64, -0.51, -0.36, -0.19, 0.0] },\n    { a: 0.0, b: -1.0, num_steps: 11, result: [0.0, -0.01, -0.04, -0.09, -0.16, -0.25, -0.36, -0.49, -0.64, -0.81, -1.0] },\n  ]\n  )\n  .fn(test => {\n    const a = test.params.a;\n    const b = test.params.b;\n    const num_steps = test.params.num_steps;\n    const got = biasedRange(a, b, num_steps);\n    const expect = test.params.result;\n\n    test.expect(\n      compareArrayOfNumbers(got, expect, 'no-flush'),\n      `biasedRange(${a}, ${b}, ${num_steps}) returned ${got}. Expected ${expect}`\n    );\n  });\n\ninterface fullF32RangeCase {\n  neg_norm: number;\n  neg_sub: number;\n  pos_sub: number;\n  pos_norm: number;\n  expect: Array<number>;\n}\n\ng.test('fullF32Range')\n  .paramsSimple<fullF32RangeCase>(\n    // prettier-ignore\n    [\n        { neg_norm: 0, neg_sub: 0, pos_sub: 0, pos_norm: 0, expect: [ 0.0 ] },\n        { neg_norm: 1, neg_sub: 0, pos_sub: 0, pos_norm: 0, expect: [ kValue.f32.negative.min, 0.0] },\n        { neg_norm: 2, neg_sub: 0, pos_sub: 0, pos_norm: 0, expect: [ kValue.f32.negative.min, kValue.f32.negative.max, 0.0 ] },\n        { neg_norm: 3, neg_sub: 0, pos_sub: 0, pos_norm: 0, expect: [ kValue.f32.negative.min, -1.9999998807907104, kValue.f32.negative.max, 0.0 ] },\n        { neg_norm: 0, neg_sub: 1, pos_sub: 0, pos_norm: 0, expect: [ kValue.f32.subnormal.negative.min, 0.0 ] },\n        { neg_norm: 0, neg_sub: 2, pos_sub: 0, pos_norm: 0, expect: [ kValue.f32.subnormal.negative.min, kValue.f32.subnormal.negative.max, 0.0 ] },\n        { neg_norm: 0, neg_sub: 0, pos_sub: 1, pos_norm: 0, expect: [ 0.0, kValue.f32.subnormal.positive.min ] },\n        { neg_norm: 0, neg_sub: 0, pos_sub: 2, pos_norm: 0, expect: [ 0.0, kValue.f32.subnormal.positive.min, kValue.f32.subnormal.positive.max ] },\n        { neg_norm: 0, neg_sub: 0, pos_sub: 0, pos_norm: 1, expect: [ 0.0, kValue.f32.positive.min ] },\n        { neg_norm: 0, neg_sub: 0, pos_sub: 0, pos_norm: 2, expect: [ 0.0, kValue.f32.positive.min, kValue.f32.positive.max ] },\n        { neg_norm: 0, neg_sub: 0, pos_sub: 0, pos_norm: 3, expect: [ 0.0, kValue.f32.positive.min, 1.9999998807907104, kValue.f32.positive.max ] },\n        { neg_norm: 1, neg_sub: 1, pos_sub: 1, pos_norm: 1, expect: [ kValue.f32.negative.min, kValue.f32.subnormal.negative.min, 0.0, kValue.f32.subnormal.positive.min, kValue.f32.positive.min ] },\n        { neg_norm: 2, neg_sub: 2, pos_sub: 2, pos_norm: 2, expect: [ kValue.f32.negative.min, kValue.f32.negative.max, kValue.f32.subnormal.negative.min, kValue.f32.subnormal.negative.max, 0.0, kValue.f32.subnormal.positive.min, kValue.f32.subnormal.positive.max, kValue.f32.positive.min, kValue.f32.positive.max ] },\n    ]\n  )\n  .fn(test => {\n    const neg_norm = test.params.neg_norm;\n    const neg_sub = test.params.neg_sub;\n    const pos_sub = test.params.pos_sub;\n    const pos_norm = test.params.pos_norm;\n    const got = fullF32Range({ neg_norm, neg_sub, pos_sub, pos_norm });\n    const expect = test.params.expect;\n\n    test.expect(\n      compareArrayOfNumbers(got, expect, 'no-flush'),\n      `fullF32Range(${neg_norm}, ${neg_sub}, ${pos_sub}, ${pos_norm}) returned [${got}]. Expected [${expect}]`\n    );\n  });\n\ninterface fullF16RangeCase {\n  neg_norm: number;\n  neg_sub: number;\n  pos_sub: number;\n  pos_norm: number;\n  expect: Array<number>;\n}\n\ng.test('fullF16Range')\n  .paramsSimple<fullF16RangeCase>(\n    // prettier-ignore\n    [\n          { neg_norm: 0, neg_sub: 0, pos_sub: 0, pos_norm: 0, expect: [ 0.0 ] },\n          { neg_norm: 1, neg_sub: 0, pos_sub: 0, pos_norm: 0, expect: [ kValue.f16.negative.min, 0.0] },\n          { neg_norm: 2, neg_sub: 0, pos_sub: 0, pos_norm: 0, expect: [ kValue.f16.negative.min, kValue.f16.negative.max, 0.0 ] },\n          { neg_norm: 3, neg_sub: 0, pos_sub: 0, pos_norm: 0, expect: [ kValue.f16.negative.min, -1.9990234375, kValue.f16.negative.max, 0.0 ] },\n          { neg_norm: 0, neg_sub: 1, pos_sub: 0, pos_norm: 0, expect: [ kValue.f16.subnormal.negative.min, 0.0 ] },\n          { neg_norm: 0, neg_sub: 2, pos_sub: 0, pos_norm: 0, expect: [ kValue.f16.subnormal.negative.min, kValue.f16.subnormal.negative.max, 0.0 ] },\n          { neg_norm: 0, neg_sub: 0, pos_sub: 1, pos_norm: 0, expect: [ 0.0, kValue.f16.subnormal.positive.min ] },\n          { neg_norm: 0, neg_sub: 0, pos_sub: 2, pos_norm: 0, expect: [ 0.0, kValue.f16.subnormal.positive.min, kValue.f16.subnormal.positive.max ] },\n          { neg_norm: 0, neg_sub: 0, pos_sub: 0, pos_norm: 1, expect: [ 0.0, kValue.f16.positive.min ] },\n          { neg_norm: 0, neg_sub: 0, pos_sub: 0, pos_norm: 2, expect: [ 0.0, kValue.f16.positive.min, kValue.f16.positive.max ] },\n          { neg_norm: 0, neg_sub: 0, pos_sub: 0, pos_norm: 3, expect: [ 0.0, kValue.f16.positive.min, 1.9990234375, kValue.f16.positive.max ] },\n          { neg_norm: 1, neg_sub: 1, pos_sub: 1, pos_norm: 1, expect: [ kValue.f16.negative.min, kValue.f16.subnormal.negative.min, 0.0, kValue.f16.subnormal.positive.min, kValue.f16.positive.min ] },\n          { neg_norm: 2, neg_sub: 2, pos_sub: 2, pos_norm: 2, expect: [ kValue.f16.negative.min, kValue.f16.negative.max, kValue.f16.subnormal.negative.min, kValue.f16.subnormal.negative.max, 0.0, kValue.f16.subnormal.positive.min, kValue.f16.subnormal.positive.max, kValue.f16.positive.min, kValue.f16.positive.max ] },\n      ]\n  )\n  .fn(test => {\n    const neg_norm = test.params.neg_norm;\n    const neg_sub = test.params.neg_sub;\n    const pos_sub = test.params.pos_sub;\n    const pos_norm = test.params.pos_norm;\n    const got = fullF16Range({ neg_norm, neg_sub, pos_sub, pos_norm });\n    const expect = test.params.expect;\n\n    test.expect(\n      compareArrayOfNumbers(got, expect),\n      `fullF16Range(${neg_norm}, ${neg_sub}, ${pos_sub}, ${pos_norm}) returned [${got}]. Expected [${expect}]`\n    );\n  });\n\ninterface fullI32RangeCase {\n  neg_count: number;\n  pos_count: number;\n  expect: Array<number>;\n}\n\ng.test('fullI32Range')\n  .paramsSimple<fullI32RangeCase>(\n    // prettier-ignore\n    [\n      { neg_count: 0, pos_count: 0, expect: [0] },\n      { neg_count: 1, pos_count: 0, expect: [kValue.i32.negative.min, 0] },\n      { neg_count: 2, pos_count: 0, expect: [kValue.i32.negative.min, -1, 0] },\n      { neg_count: 3, pos_count: 0, expect: [kValue.i32.negative.min, -1610612736, -1, 0] },\n      { neg_count: 0, pos_count: 1, expect: [0, 1] },\n      { neg_count: 0, pos_count: 2, expect: [0, 1, kValue.i32.positive.max] },\n      { neg_count: 0, pos_count: 3, expect: [0, 1, 536870912, kValue.i32.positive.max] },\n      { neg_count: 1, pos_count: 1, expect: [kValue.i32.negative.min, 0, 1] },\n      { neg_count: 2, pos_count: 2, expect: [kValue.i32.negative.min, -1, 0, 1, kValue.i32.positive.max ] },\n    ]\n  )\n  .fn(test => {\n    const neg_count = test.params.neg_count;\n    const pos_count = test.params.pos_count;\n    const got = fullI32Range({ negative: neg_count, positive: pos_count });\n    const expect = test.params.expect;\n\n    test.expect(\n      compareArrayOfNumbers(got, expect),\n      `fullI32Range(${neg_count}, ${pos_count}) returned [${got}]. Expected [${expect}]`\n    );\n  });\n\ninterface limitsCase {\n  bits: number;\n  value: number;\n}\n\n// Test to confirm kBit and kValue constants are equivalent for f32\ng.test('f32LimitsEquivalency')\n  .paramsSimple<limitsCase>([\n    { bits: kBit.f32.positive.max, value: kValue.f32.positive.max },\n    { bits: kBit.f32.positive.min, value: kValue.f32.positive.min },\n    { bits: kBit.f32.positive.nearest_max, value: kValue.f32.positive.nearest_max },\n    { bits: kBit.f32.positive.less_than_one, value: kValue.f32.positive.less_than_one },\n    { bits: kBit.f32.positive.pi.whole, value: kValue.f32.positive.pi.whole },\n    { bits: kBit.f32.positive.pi.three_quarters, value: kValue.f32.positive.pi.three_quarters },\n    { bits: kBit.f32.positive.pi.half, value: kValue.f32.positive.pi.half },\n    { bits: kBit.f32.positive.pi.third, value: kValue.f32.positive.pi.third },\n    { bits: kBit.f32.positive.pi.quarter, value: kValue.f32.positive.pi.quarter },\n    { bits: kBit.f32.positive.pi.sixth, value: kValue.f32.positive.pi.sixth },\n    { bits: kBit.f32.positive.e, value: kValue.f32.positive.e },\n    { bits: kBit.f32.negative.max, value: kValue.f32.negative.max },\n    { bits: kBit.f32.negative.min, value: kValue.f32.negative.min },\n    { bits: kBit.f32.negative.nearest_min, value: kValue.f32.negative.nearest_min },\n    { bits: kBit.f32.negative.pi.whole, value: kValue.f32.negative.pi.whole },\n    { bits: kBit.f32.negative.pi.three_quarters, value: kValue.f32.negative.pi.three_quarters },\n    { bits: kBit.f32.negative.pi.half, value: kValue.f32.negative.pi.half },\n    { bits: kBit.f32.negative.pi.third, value: kValue.f32.negative.pi.third },\n    { bits: kBit.f32.negative.pi.quarter, value: kValue.f32.negative.pi.quarter },\n    { bits: kBit.f32.negative.pi.sixth, value: kValue.f32.negative.pi.sixth },\n    { bits: kBit.f32.subnormal.positive.max, value: kValue.f32.subnormal.positive.max },\n    { bits: kBit.f32.subnormal.positive.min, value: kValue.f32.subnormal.positive.min },\n    { bits: kBit.f32.subnormal.negative.max, value: kValue.f32.subnormal.negative.max },\n    { bits: kBit.f32.subnormal.negative.min, value: kValue.f32.subnormal.negative.min },\n    { bits: kBit.f32.infinity.positive, value: kValue.f32.infinity.positive },\n    { bits: kBit.f32.infinity.negative, value: kValue.f32.infinity.negative },\n  ])\n  .fn(test => {\n    const bits = test.params.bits;\n    const value = test.params.value;\n\n    const val_to_bits = bits === float32ToUint32(value);\n    const bits_to_val = value === uint32ToFloat32(bits);\n    test.expect(\n      val_to_bits && bits_to_val,\n      `bits = ${bits}, value = ${value}, returned val_to_bits as ${val_to_bits}, and bits_to_val as ${bits_to_val}, they are expected to be equivalent`\n    );\n  });\n\n// Test to confirm kBit and kValue constants are equivalent for f16\ng.test('f16LimitsEquivalency')\n  .paramsSimple<limitsCase>([\n    { bits: kBit.f16.positive.max, value: kValue.f16.positive.max },\n    { bits: kBit.f16.positive.min, value: kValue.f16.positive.min },\n    { bits: kBit.f16.negative.max, value: kValue.f16.negative.max },\n    { bits: kBit.f16.negative.min, value: kValue.f16.negative.min },\n    { bits: kBit.f16.subnormal.positive.max, value: kValue.f16.subnormal.positive.max },\n    { bits: kBit.f16.subnormal.positive.min, value: kValue.f16.subnormal.positive.min },\n    { bits: kBit.f16.subnormal.negative.max, value: kValue.f16.subnormal.negative.max },\n    { bits: kBit.f16.subnormal.negative.min, value: kValue.f16.subnormal.negative.min },\n    { bits: kBit.f16.infinity.positive, value: kValue.f16.infinity.positive },\n    { bits: kBit.f16.infinity.negative, value: kValue.f16.infinity.negative },\n  ])\n  .fn(test => {\n    const bits = test.params.bits;\n    const value = test.params.value;\n\n    const val_to_bits = bits === float16ToUint16(value);\n    const bits_to_val = value === uint16ToFloat16(bits);\n    test.expect(\n      val_to_bits && bits_to_val,\n      `bits = ${bits}, value = ${value}, returned val_to_bits as ${val_to_bits}, and bits_to_val as ${bits_to_val}, they are expected to be equivalent`\n    );\n  });\n\ninterface cartesianProductCase<T> {\n  inputs: T[][];\n  result: T[][];\n}\n\ng.test('cartesianProductNumber')\n  .paramsSimple<cartesianProductCase<number>>(\n    // prettier-ignore\n    [\n      { inputs: [[0], [1]], result: [[0, 1]] },\n      { inputs: [[0, 1], [2]], result: [[0, 2],\n                                        [1, 2]] },\n      { inputs: [[0], [1, 2]], result: [[0, 1],\n                                        [0, 2]] },\n      { inputs: [[0, 1], [2, 3]], result: [[0,2],\n                                           [1, 2],\n                                           [0, 3],\n                                           [1, 3]] },\n      { inputs: [[0, 1, 2], [3, 4, 5]], result: [[0, 3],\n                                                 [1, 3],\n                                                 [2, 3],\n                                                 [0, 4],\n                                                 [1, 4],\n                                                 [2, 4],\n                                                 [0, 5],\n                                                 [1, 5],\n                                                 [2, 5]] },\n      { inputs: [[0, 1], [2, 3], [4, 5]], result: [[0, 2, 4],\n                                                   [1, 2, 4],\n                                                   [0, 3, 4],\n                                                   [1, 3, 4],\n                                                   [0, 2, 5],\n                                                   [1, 2, 5],\n                                                   [0, 3, 5],\n                                                   [1, 3, 5]] },\n\n  ]\n  )\n  .fn(test => {\n    const inputs = test.params.inputs;\n    const got = cartesianProduct(...inputs);\n    const expect = test.params.result;\n\n    test.expect(\n      objectEquals(got, expect),\n      `cartesianProduct(${JSON.stringify(inputs)}) returned ${JSON.stringify(\n        got\n      )}. Expected ${JSON.stringify(expect)} `\n    );\n  });\n\ng.test('cartesianProductArray')\n  .paramsSimple<cartesianProductCase<number[]>>(\n    // prettier-ignore\n    [\n      { inputs: [[[0, 1], [2, 3]], [[4, 5], [6, 7]]], result: [[[0, 1], [4, 5]],\n                                                               [[2, 3], [4, 5]],\n                                                               [[0, 1], [6, 7]],\n                                                               [[2, 3], [6, 7]]]},\n      { inputs: [[[0, 1], [2, 3]], [[4, 5], [6, 7]], [[8, 9]]], result: [[[0, 1], [4, 5], [8, 9]],\n                                                                         [[2, 3], [4, 5], [8, 9]],\n                                                                         [[0, 1], [6, 7], [8, 9]],\n                                                                         [[2, 3], [6, 7], [8, 9]]]},\n      { inputs: [[[0, 1, 2], [3, 4, 5], [6, 7, 8]], [[2, 1, 0], [5, 4, 3], [8, 7, 6]]], result:  [[[0, 1, 2], [2, 1, 0]],\n                                                                                                  [[3, 4, 5], [2, 1, 0]],\n                                                                                                  [[6, 7, 8], [2, 1, 0]],\n                                                                                                  [[0, 1, 2], [5, 4, 3]],\n                                                                                                  [[3, 4, 5], [5, 4, 3]],\n                                                                                                  [[6, 7, 8], [5, 4, 3]],\n                                                                                                  [[0, 1, 2], [8, 7, 6]],\n                                                                                                  [[3, 4, 5], [8, 7, 6]],\n                                                                                                  [[6, 7, 8], [8, 7, 6]]]}\n\n    ]\n  )\n  .fn(test => {\n    const inputs = test.params.inputs;\n    const got = cartesianProduct(...inputs);\n    const expect = test.params.result;\n\n    test.expect(\n      objectEquals(got, expect),\n      `cartesianProduct(${JSON.stringify(inputs)}) returned ${JSON.stringify(\n        got\n      )}. Expected ${JSON.stringify(expect)} `\n    );\n  });\n"],"file":"maths.spec.js"}