{"version":3,"file":"floating_point.spec.js","names":["description","makeTestGroup","objectEquals","unreachable","kValue","FP","hexToF32","hexToF64","oneULPF32","UnitTest","g","kAnyBounds","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","plusNULPF32","x","n","plusOneULPF32","minusNULPF32","minusOneULPF32","applyError","expected","error","unpack","Array","length","begin","end","test","paramsSubcasesOnly","input","f32","infinity","positive","negative","max","min","subnormal","fn","t","toInterval","params","got","absInterval","expect","acosInterval","acoshAlternativeInterval","acoshPrimaryInterval","asinInterval","asinhInterval","pi","third","quarter","sixth","atanInterval","atanhInterval","powTwo","to30","ceilInterval","whole","_","cosInterval","coshInterval","three_quarters","half","degreesInterval","e","Math","abs","expInterval","exp2Interval","floorInterval","less_than_one","fractInterval","inverseSqrtInterval","lengthInterval","logInterval","log2Interval","negationInterval","f16","quantizeToF16Interval","radiansInterval","roundInterval","saturateInterval","signInterval","sinInterval","sinhInterval","sqrtInterval","tanInterval","tanhInterval","truncInterval","nearest_max"],"sources":["../../src/unittests/floating_point.spec.ts"],"sourcesContent":["export const description = `\nFloating Point unit tests.\n`;\n\nimport { makeTestGroup } from '../common/framework/test_group.js';\nimport { objectEquals, unreachable } from '../common/util/util.js';\nimport { kValue } from '../webgpu/util/constants.js';\nimport { FP, IntervalBounds } from '../webgpu/util/floating_point.js';\nimport { hexToF32, hexToF64, oneULPF32 } from '../webgpu/util/math.js';\n\nimport { UnitTest } from './unit_test.js';\n\nexport const g = makeTestGroup(UnitTest);\n\n/** Bounds indicating an expectation of an interval of all possible values */\nconst kAnyBounds: IntervalBounds = [Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY];\n\n/** @returns a number N * ULP greater than the provided number, treats input as f32 */\nfunction plusNULPF32(x: number, n: number): number {\n  return x + n * oneULPF32(x);\n}\n\n/** @returns a number one ULP greater than the provided number, treats input as f32 */\nfunction plusOneULPF32(x: number): number {\n  return plusNULPF32(x, 1);\n}\n\n/** @returns a number N * ULP less than the provided number, treats input as f32 */\nfunction minusNULPF32(x: number, n: number): number {\n  return x - n * oneULPF32(x);\n}\n\n/** @returns a number one ULP less than the provided number, treats input as f32 */\nfunction minusOneULPF32(x: number): number {\n  return minusNULPF32(x, 1);\n}\n\n/** @returns the expected IntervalBounds adjusted by the given error function\n *\n * @param expected the bounds to be adjusted\n * @param error error function to adjust the bounds via\n */\nfunction applyError(\n  expected: number | IntervalBounds,\n  error: (n: number) => number\n): IntervalBounds {\n  // Avoiding going through FPInterval to avoid tying this to a specific kind\n  const unpack = (n: number | IntervalBounds): [number, number] => {\n    if (expected instanceof Array) {\n      switch (expected.length) {\n        case 1:\n          return [expected[0], expected[0]];\n        case 2:\n          return [expected[0], expected[1]];\n      }\n      unreachable(`Tried to unpack an IntervalBounds with length other than 1 or 2`);\n    } else {\n      // TS doesn't narrow this to number automatically\n      return [n as number, n as number];\n    }\n  };\n\n  let [begin, end] = unpack(expected);\n\n  begin -= error(begin);\n  end += error(end);\n\n  if (begin === end) {\n    return [begin];\n  }\n  return [begin, end];\n}\n\ninterface ScalarToIntervalCase {\n  input: number;\n  expected: number | IntervalBounds;\n}\n\ng.test('absInterval_f32')\n  .paramsSubcasesOnly<ScalarToIntervalCase>(\n    // prettier-ignore\n    [\n      // Common usages\n      { input: 1, expected: 1 },\n      { input: -1, expected: 1 },\n      { input: 0.1, expected: [hexToF32(0x3dcccccc), hexToF32(0x3dcccccd)] },\n      { input: -0.1, expected: [hexToF32(0x3dcccccc), hexToF32(0x3dcccccd)] },\n\n      // Edge cases\n      { input: kValue.f32.infinity.positive, expected: kAnyBounds },\n      { input: kValue.f32.infinity.negative, expected: kAnyBounds },\n      { input: kValue.f32.positive.max, expected: kValue.f32.positive.max },\n      { input: kValue.f32.positive.min, expected: kValue.f32.positive.min },\n      { input: kValue.f32.negative.min, expected: kValue.f32.positive.max },\n      { input: kValue.f32.negative.max, expected: kValue.f32.positive.min },\n\n      // 32-bit subnormals\n      { input: kValue.f32.subnormal.positive.max, expected: [0, kValue.f32.subnormal.positive.max] },\n      { input: kValue.f32.subnormal.positive.min, expected: [0, kValue.f32.subnormal.positive.min] },\n      { input: kValue.f32.subnormal.negative.min, expected: [0, kValue.f32.subnormal.positive.max] },\n      { input: kValue.f32.subnormal.negative.max, expected: [0, kValue.f32.subnormal.positive.min] },\n\n      // 64-bit subnormals\n      { input: hexToF64(0x0000_0000_0000_0001n), expected: [0, kValue.f32.subnormal.positive.min] },\n      { input: hexToF64(0x800f_ffff_ffff_ffffn), expected: [0, kValue.f32.subnormal.positive.min] },\n\n      // Zero\n      { input: 0, expected: 0 },\n    ]\n  )\n  .fn(t => {\n    const expected = FP.f32.toInterval(t.params.expected);\n    const got = FP.f32.absInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.absInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('acosInterval_f32')\n  .paramsSubcasesOnly<ScalarToIntervalCase>(\n    // prettier-ignore\n    [\n      // Some of these are hard coded, since the error intervals are difficult\n      // to express in a closed human-readable form due to the complexity of\n      // their derivation.\n      //\n      // The acceptance interval @ x = -1 and 1 is kAnyBounds, because\n      // sqrt(1 - x*x) = sqrt(0), and sqrt is defined in terms of inverseqrt\n      // The acceptance interval @ x = 0 is kAnyBounds, because atan2 is not\n      // well-defined/implemented at 0.\n      // Near 1, the absolute error should be larger and, away from 1 the atan2\n      // inherited error should be larger.\n      { input: kValue.f32.infinity.negative, expected: kAnyBounds },\n      { input: kValue.f32.negative.min, expected: kAnyBounds },\n      { input: -1, expected: kAnyBounds },\n      { input: -1/2, expected: [hexToF32(0x4005fa91), hexToF32(0x40061a94)] },  // ~2π/3\n      { input: 0, expected: kAnyBounds },\n      { input: 1/2, expected: [hexToF32(0x3f85fa8f), hexToF32(0x3f861a94)] },  // ~π/3\n      { input: minusOneULPF32(1), expected: [hexToF64(0x3f2f_fdff_6000_0000n), hexToF64(0x3f3b_106f_c933_4fb9n)] },  // ~0.0003\n      { input: 1, expected: kAnyBounds },\n      { input: kValue.f32.positive.max, expected: kAnyBounds },\n      { input: kValue.f32.infinity.positive, expected: kAnyBounds },\n    ]\n  )\n  .fn(t => {\n    const expected = FP.f32.toInterval(t.params.expected);\n    const got = FP.f32.acosInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.acosInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('acoshAlternativeInterval_f32')\n  .paramsSubcasesOnly<ScalarToIntervalCase>(\n    // prettier-ignore\n    [\n      // Some of these are hard coded, since the error intervals are difficult\n      // to express in a closed human-readable form due to the inherited nature\n      // of the errors.\n      { input: kValue.f32.infinity.negative, expected: kAnyBounds },\n      { input: kValue.f32.negative.min, expected: kAnyBounds },\n      { input: -1, expected: kAnyBounds },\n      { input: 0, expected: kAnyBounds },\n      { input: 1, expected: kAnyBounds },  // 1/0 occurs in inverseSqrt in this formulation\n      { input: 1.1, expected: [hexToF64(0x3fdc_6368_8000_0000n), hexToF64(0x3fdc_636f_2000_0000n)] },  // ~0.443..., differs from the primary in the later digits\n      { input: 10, expected: [hexToF64(0x4007_f21e_4000_0000n), hexToF64(0x4007_f21f_6000_0000n)] },  // ~2.993...\n      { input: kValue.f32.positive.max, expected: kAnyBounds },\n      { input: kValue.f32.infinity.positive, expected: kAnyBounds },\n    ]\n  )\n  .fn(t => {\n    const expected = FP.f32.toInterval(t.params.expected);\n    const got = FP.f32.acoshAlternativeInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.acoshInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('acoshPrimaryInterval_f32')\n  .paramsSubcasesOnly<ScalarToIntervalCase>(\n    // prettier-ignore\n    [\n      // Some of these are hard coded, since the error intervals are difficult\n      // to express in a closed human-readable form due to the inherited nature\n      // of the errors.\n      { input: kValue.f32.infinity.negative, expected: kAnyBounds },\n      { input: kValue.f32.negative.min, expected: kAnyBounds },\n      { input: -1, expected: kAnyBounds },\n      { input: 0, expected: kAnyBounds },\n      { input: 1, expected: kAnyBounds },  // 1/0 occurs in inverseSqrt in this formulation\n      { input: 1.1, expected: [hexToF64(0x3fdc_6368_2000_0000n), hexToF64(0x3fdc_636f_8000_0000n)] }, // ~0.443..., differs from the alternative in the later digits\n      { input: 10, expected: [hexToF64(0x4007_f21e_4000_0000n), hexToF64(0x4007_f21f_6000_0000n)] },  // ~2.993...\n      { input: kValue.f32.positive.max, expected: kAnyBounds },\n      { input: kValue.f32.infinity.positive, expected: kAnyBounds },\n    ]\n  )\n  .fn(t => {\n    const expected = FP.f32.toInterval(t.params.expected);\n    const got = FP.f32.acoshPrimaryInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.acoshInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('asinInterval_f32')\n  .paramsSubcasesOnly<ScalarToIntervalCase>(\n    // prettier-ignore\n    [\n      // Some of these are hard coded, since the error intervals are difficult\n      // to express in a simple human-readable form due to the complexity of their derivation.\n      //\n      // The acceptance interval @ x = -1 and 1 is kAnyBounds, because\n      // sqrt(1 - x*x) = sqrt(0), and sqrt is defined in terms of inversqrt.\n      // The acceptance interval @ x = 0 is kAnyBounds, because atan2 is not\n      // well-defined/implemented at 0.\n      // Near 0, but not subnormal the absolute error should be larger, so will\n      // be +/- 6.77e-5, away from 0 the atan2 inherited error should be larger.\n      { input: kValue.f32.infinity.negative, expected: kAnyBounds },\n      { input: kValue.f32.negative.min, expected: kAnyBounds },\n      { input: -1, expected: kAnyBounds },\n      { input: -1/2, expected: [hexToF64(0xbfe0_c352_c000_0000n), hexToF64(0xbfe0_bf51_c000_0000n)] },  // ~-π/6\n      { input: kValue.f32.negative.max, expected: [-6.77e-5, 6.77e-5] },  // ~0\n      { input: 0, expected: kAnyBounds },\n      { input: kValue.f32.positive.min, expected: [-6.77e-5, 6.77e-5] },  // ~0\n      { input: 1/2, expected: [hexToF64(0x3fe0_bf51_c000_0000n), hexToF64(0x3fe0_c352_c000_0000n)] },  // ~π/6\n      { input: 1, expected: kAnyBounds },  // ~π/2\n      { input: kValue.f32.positive.max, expected: kAnyBounds },\n      { input: kValue.f32.infinity.positive, expected: kAnyBounds },\n    ]\n  )\n  .fn(t => {\n    const expected = FP.f32.toInterval(t.params.expected);\n    const got = FP.f32.asinInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.asinInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('asinhInterval_f32')\n  .paramsSubcasesOnly<ScalarToIntervalCase>(\n    // prettier-ignore\n    [\n      // Some of these are hard coded, since the error intervals are difficult\n      // to express in a closed human-readable form due to the inherited nature\n      // of the errors.\n      { input: kValue.f32.infinity.negative, expected: kAnyBounds },\n      { input: kValue.f32.negative.min, expected: kAnyBounds },\n      { input: -1, expected: [hexToF64(0xbfec_343a_8000_0000n), hexToF64(0xbfec_3432_8000_0000n)] },  // ~-0.88137...\n      { input: 0, expected: [hexToF64(0xbeaa_0000_2000_0000n), hexToF64(0x3eb1_ffff_d000_0000n)] },  // ~0\n      { input: 1, expected: [hexToF64(0x3fec_3435_4000_0000n), hexToF64(0x3fec_3437_8000_0000n)] },  // ~0.88137...\n      { input: kValue.f32.positive.max, expected: kAnyBounds },\n      { input: kValue.f32.infinity.positive, expected: kAnyBounds },\n    ]\n  )\n  .fn(t => {\n    const expected = FP.f32.toInterval(t.params.expected);\n    const got = FP.f32.asinhInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.asinhInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('atanInterval_f32')\n  .paramsSubcasesOnly<ScalarToIntervalCase>(\n    // prettier-ignore\n    [\n      { input: kValue.f32.infinity.negative, expected: kAnyBounds },\n      { input: hexToF32(0xbfddb3d7), expected: [kValue.f32.negative.pi.third, plusOneULPF32(kValue.f32.negative.pi.third)] }, // x = -√3\n      { input: -1, expected: [kValue.f32.negative.pi.quarter, plusOneULPF32(kValue.f32.negative.pi.quarter)] },\n      { input: hexToF32(0xbf13cd3a), expected: [kValue.f32.negative.pi.sixth, plusOneULPF32(kValue.f32.negative.pi.sixth)] },  // x = -1/√3\n      { input: 0, expected: 0 },\n      { input: hexToF32(0x3f13cd3a), expected: [minusOneULPF32(kValue.f32.positive.pi.sixth), kValue.f32.positive.pi.sixth] },  // x = 1/√3\n      { input: 1, expected: [minusOneULPF32(kValue.f32.positive.pi.quarter), kValue.f32.positive.pi.quarter] },\n      { input: hexToF32(0x3fddb3d7), expected: [minusOneULPF32(kValue.f32.positive.pi.third), kValue.f32.positive.pi.third] }, // x = √3\n      { input: kValue.f32.infinity.positive, expected: kAnyBounds },\n    ]\n  )\n  .fn(t => {\n    const error = (n: number): number => {\n      return 4096 * oneULPF32(n);\n    };\n\n    t.params.expected = applyError(t.params.expected, error);\n    const expected = FP.f32.toInterval(t.params.expected);\n\n    const got = FP.f32.atanInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.atanInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('atanhInterval_f32')\n  .paramsSubcasesOnly<ScalarToIntervalCase>(\n    // prettier-ignore\n    [\n      // Some of these are hard coded, since the error intervals are difficult\n      // to express in a closed human-readable form due to the inherited nature of the errors.\n      { input: kValue.f32.infinity.negative, expected: kAnyBounds },\n      { input: kValue.f32.negative.min, expected: kAnyBounds },\n      { input: -1, expected: kAnyBounds },\n      { input: -0.1, expected: [hexToF64(0xbfb9_af9a_6000_0000n), hexToF64(0xbfb9_af8c_c000_0000n)] },  // ~-0.1003...\n      { input: 0, expected: [hexToF64(0xbe96_0000_2000_0000n), hexToF64(0x3e98_0000_0000_0000n)] },  // ~0\n      { input: 0.1, expected: [hexToF64(0x3fb9_af8b_8000_0000n), hexToF64(0x3fb9_af9b_0000_0000n)] },  // ~0.1003...\n      { input: 1, expected: kAnyBounds },\n      { input: kValue.f32.positive.max, expected: kAnyBounds },\n      { input: kValue.f32.infinity.positive, expected: kAnyBounds },\n    ]\n  )\n  .fn(t => {\n    const expected = FP.f32.toInterval(t.params.expected);\n    const got = FP.f32.atanhInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.atanhInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('ceilInterval_f32')\n  .paramsSubcasesOnly<ScalarToIntervalCase>(\n    // prettier-ignore\n    [\n      { input: 0, expected: 0 },\n      { input: 0.1, expected: 1 },\n      { input: 0.9, expected: 1 },\n      { input: 1.0, expected: 1 },\n      { input: 1.1, expected: 2 },\n      { input: 1.9, expected: 2 },\n      { input: -0.1, expected: 0 },\n      { input: -0.9, expected: 0 },\n      { input: -1.0, expected: -1 },\n      { input: -1.1, expected: -1 },\n      { input: -1.9, expected: -1 },\n\n      // Edge cases\n      { input: kValue.f32.infinity.positive, expected: kAnyBounds },\n      { input: kValue.f32.infinity.negative, expected: kAnyBounds },\n      { input: kValue.f32.positive.max, expected: kValue.f32.positive.max },\n      { input: kValue.f32.positive.min, expected: 1 },\n      { input: kValue.f32.negative.min, expected: kValue.f32.negative.min },\n      { input: kValue.f32.negative.max, expected: 0 },\n      { input: kValue.powTwo.to30, expected: kValue.powTwo.to30 },\n      { input: -kValue.powTwo.to30, expected: -kValue.powTwo.to30 },\n\n      // 32-bit subnormals\n      { input: kValue.f32.subnormal.positive.max, expected: [0, 1] },\n      { input: kValue.f32.subnormal.positive.min, expected: [0, 1] },\n      { input: kValue.f32.subnormal.negative.min, expected: 0 },\n      { input: kValue.f32.subnormal.negative.max, expected: 0 },\n    ]\n  )\n  .fn(t => {\n    const expected = FP.f32.toInterval(t.params.expected);\n    const got = FP.f32.ceilInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.ceilInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('cosInterval_f32')\n  .paramsSubcasesOnly<ScalarToIntervalCase>(\n    // prettier-ignore\n    [\n      // This test does not include some common cases. i.e. f(x = π/2) = 0,\n      // because the difference between true x and x as a f32 is sufficiently\n      // large, such that the high slope of f @ x causes the results to be\n      // substantially different, so instead of getting 0 you get a value on the\n      // order of 10^-8 away from 0, thus difficult to express in a\n      // human-readable manner.\n      { input: kValue.f32.infinity.negative, expected: kAnyBounds },\n      { input: kValue.f32.negative.min, expected: kAnyBounds },\n      { input: kValue.f32.negative.pi.whole, expected: [-1, plusOneULPF32(-1)] },\n      { input: kValue.f32.negative.pi.third, expected: [minusOneULPF32(1/2), 1/2] },\n      { input: 0, expected: [1, 1] },\n      { input: kValue.f32.positive.pi.third, expected: [minusOneULPF32(1/2), 1/2] },\n      { input: kValue.f32.positive.pi.whole, expected: [-1, plusOneULPF32(-1)] },\n      { input: kValue.f32.positive.max, expected: kAnyBounds },\n      { input: kValue.f32.infinity.positive, expected: kAnyBounds },\n    ]\n  )\n  .fn(t => {\n    const error = (_: number): number => {\n      return 2 ** -11;\n    };\n\n    t.params.expected = applyError(t.params.expected, error);\n    const expected = FP.f32.toInterval(t.params.expected);\n\n    const got = FP.f32.cosInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.cosInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('coshInterval_f32')\n  .paramsSubcasesOnly<ScalarToIntervalCase>(\n    // prettier-ignore\n    [\n      // Some of these are hard coded, since the error intervals are difficult\n      // to express in a closed human-readable form due to the inherited nature\n      // of the errors.\n      { input: kValue.f32.infinity.negative, expected: kAnyBounds },\n      { input: kValue.f32.negative.min, expected: kAnyBounds },\n      { input: -1, expected: [ hexToF32(0x3fc583a4), hexToF32(0x3fc583b1)] },  // ~1.1543...\n      { input: 0, expected: [hexToF32(0x3f7ffffd), hexToF32(0x3f800002)] },  // ~1\n      { input: 1, expected: [ hexToF32(0x3fc583a4), hexToF32(0x3fc583b1)] },  // ~1.1543...\n      { input: kValue.f32.positive.max, expected: kAnyBounds },\n      { input: kValue.f32.infinity.positive, expected: kAnyBounds },\n    ]\n  )\n  .fn(t => {\n    const expected = FP.f32.toInterval(t.params.expected);\n\n    const got = FP.f32.coshInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.coshInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('degreesInterval_f32')\n  .paramsSubcasesOnly<ScalarToIntervalCase>(\n    // prettier-ignore\n    [\n      { input: kValue.f32.infinity.negative, expected: kAnyBounds },\n      { input: kValue.f32.negative.min, expected: kAnyBounds },\n      { input: kValue.f32.negative.pi.whole, expected: [minusOneULPF32(-180), plusOneULPF32(-180)] },\n      { input: kValue.f32.negative.pi.three_quarters, expected: [minusOneULPF32(-135), plusOneULPF32(-135)] },\n      { input: kValue.f32.negative.pi.half, expected: [minusOneULPF32(-90), plusOneULPF32(-90)] },\n      { input: kValue.f32.negative.pi.third, expected: [minusOneULPF32(-60), plusOneULPF32(-60)] },\n      { input: kValue.f32.negative.pi.quarter, expected: [minusOneULPF32(-45), plusOneULPF32(-45)] },\n      { input: kValue.f32.negative.pi.sixth, expected: [minusOneULPF32(-30), plusOneULPF32(-30)] },\n      { input: 0, expected: 0 },\n      { input: kValue.f32.positive.pi.sixth, expected: [minusOneULPF32(30), plusOneULPF32(30)] },\n      { input: kValue.f32.positive.pi.quarter, expected: [minusOneULPF32(45), plusOneULPF32(45)] },\n      { input: kValue.f32.positive.pi.third, expected: [minusOneULPF32(60), plusOneULPF32(60)] },\n      { input: kValue.f32.positive.pi.half, expected: [minusOneULPF32(90), plusOneULPF32(90)] },\n      { input: kValue.f32.positive.pi.three_quarters, expected: [minusOneULPF32(135), plusOneULPF32(135)] },\n      { input: kValue.f32.positive.pi.whole, expected: [minusOneULPF32(180), plusOneULPF32(180)] },\n      { input: kValue.f32.positive.max, expected: kAnyBounds },\n      { input: kValue.f32.infinity.positive, expected: kAnyBounds },\n    ]\n  )\n  .fn(t => {\n    const expected = FP.f32.toInterval(t.params.expected);\n    const got = FP.f32.degreesInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.degreesInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('expInterval_f32')\n  .paramsSubcasesOnly<ScalarToIntervalCase>(\n    // prettier-ignore\n    [\n      { input: kValue.f32.infinity.negative, expected: kAnyBounds },\n      { input: 0, expected: 1 },\n      { input: 1, expected: [kValue.f32.positive.e, plusOneULPF32(kValue.f32.positive.e)] },\n      { input: 89, expected: kAnyBounds },\n    ]\n  )\n  .fn(t => {\n    const error = (x: number): number => {\n      const n = 3 + 2 * Math.abs(t.params.input);\n      return n * oneULPF32(x);\n    };\n\n    t.params.expected = applyError(t.params.expected, error);\n    const expected = FP.f32.toInterval(t.params.expected);\n\n    const got = FP.f32.expInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.expInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('exp2Interval_f32')\n  .paramsSubcasesOnly<ScalarToIntervalCase>(\n    // prettier-ignore\n    [\n      { input: kValue.f32.infinity.negative, expected: kAnyBounds },\n      { input: 0, expected: 1 },\n      { input: 1, expected: 2 },\n      { input: 128, expected: kAnyBounds },\n    ]\n  )\n  .fn(t => {\n    const error = (x: number): number => {\n      const n = 3 + 2 * Math.abs(t.params.input);\n      return n * oneULPF32(x);\n    };\n\n    t.params.expected = applyError(t.params.expected, error);\n    const expected = FP.f32.toInterval(t.params.expected);\n\n    const got = FP.f32.exp2Interval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.exp2Interval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('floorInterval_f32')\n  .paramsSubcasesOnly<ScalarToIntervalCase>(\n    // prettier-ignore\n    [\n      { input: 0, expected: 0 },\n      { input: 0.1, expected: 0 },\n      { input: 0.9, expected: 0 },\n      { input: 1.0, expected: 1 },\n      { input: 1.1, expected: 1 },\n      { input: 1.9, expected: 1 },\n      { input: -0.1, expected: -1 },\n      { input: -0.9, expected: -1 },\n      { input: -1.0, expected: -1 },\n      { input: -1.1, expected: -2 },\n      { input: -1.9, expected: -2 },\n\n      // Edge cases\n      { input: kValue.f32.infinity.positive, expected: kAnyBounds },\n      { input: kValue.f32.infinity.negative, expected: kAnyBounds },\n      { input: kValue.f32.positive.max, expected: kValue.f32.positive.max },\n      { input: kValue.f32.positive.min, expected: 0 },\n      { input: kValue.f32.negative.min, expected: kValue.f32.negative.min },\n      { input: kValue.f32.negative.max, expected: -1 },\n      { input: kValue.powTwo.to30, expected: kValue.powTwo.to30 },\n      { input: -kValue.powTwo.to30, expected: -kValue.powTwo.to30 },\n\n      // 32-bit subnormals\n      { input: kValue.f32.subnormal.positive.max, expected: 0 },\n      { input: kValue.f32.subnormal.positive.min, expected: 0 },\n      { input: kValue.f32.subnormal.negative.min, expected: [-1, 0] },\n      { input: kValue.f32.subnormal.negative.max, expected: [-1, 0] },\n    ]\n  )\n  .fn(t => {\n    const expected = FP.f32.toInterval(t.params.expected);\n    const got = FP.f32.floorInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.floorInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('fractInterval_f32')\n  .paramsSubcasesOnly<ScalarToIntervalCase>(\n    // prettier-ignore\n    [\n      { input: 0, expected: 0 },\n      { input: 0.1, expected: [minusOneULPF32(hexToF32(0x3dcccccd)), hexToF32(0x3dcccccd)] }, // ~0.1\n      { input: 0.9, expected: [hexToF32(0x3f666666), plusOneULPF32(hexToF32(0x3f666666))] },  // ~0.9\n      { input: 1.0, expected: 0 },\n      { input: 1.1, expected: [hexToF64(0x3fb9_9998_0000_0000n), hexToF64(0x3fb9_999a_0000_0000n)] }, // ~0.1\n      { input: -0.1, expected: [hexToF32(0x3f666666), plusOneULPF32(hexToF32(0x3f666666))] },  // ~0.9\n      { input: -0.9, expected: [hexToF64(0x3fb9_9999_0000_0000n), hexToF64(0x3fb9_999a_0000_0000n)] }, // ~0.1\n      { input: -1.0, expected: 0 },\n      { input: -1.1, expected: [hexToF64(0x3fec_cccc_c000_0000n), hexToF64(0x3fec_cccd_0000_0000n), ] }, // ~0.9\n\n      // Edge cases\n      { input: kValue.f32.infinity.positive, expected: kAnyBounds },\n      { input: kValue.f32.infinity.negative, expected: kAnyBounds },\n      { input: kValue.f32.positive.max, expected: 0 },\n      { input: kValue.f32.positive.min, expected: [kValue.f32.positive.min, kValue.f32.positive.min] },\n      { input: kValue.f32.negative.min, expected: 0 },\n      { input: kValue.f32.negative.max, expected: [kValue.f32.positive.less_than_one, 1.0] },\n    ]\n  )\n  .fn(t => {\n    const expected = FP.f32.toInterval(t.params.expected);\n    const got = FP.f32.fractInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.fractInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('inverseSqrtInterval_f32')\n  .paramsSubcasesOnly<ScalarToIntervalCase>(\n    // prettier-ignore\n    [\n      { input: -1, expected: kAnyBounds },\n      { input: 0, expected: kAnyBounds },\n      { input: 0.04, expected: [minusOneULPF32(5), plusOneULPF32(5)] },\n      { input: 1, expected: 1 },\n      { input: 100, expected: [minusOneULPF32(hexToF32(0x3dcccccd)), hexToF32(0x3dcccccd)] },  // ~0.1\n      { input: kValue.f32.positive.max, expected: [hexToF32(0x1f800000), plusNULPF32(hexToF32(0x1f800000), 2)] },  // ~5.421...e-20, i.e. 1/√max f32\n      { input: kValue.f32.infinity.positive, expected: kAnyBounds },\n    ]\n  )\n  .fn(t => {\n    const error = (n: number): number => {\n      return 2 * oneULPF32(n);\n    };\n\n    t.params.expected = applyError(t.params.expected, error);\n    const expected = FP.f32.toInterval(t.params.expected);\n\n    const got = FP.f32.inverseSqrtInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.inverseSqrtInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('lengthIntervalScalar_f32')\n  .paramsSubcasesOnly<ScalarToIntervalCase>(\n    // prettier-ignore\n    [\n      // Some of these are hard coded, since the error intervals are difficult\n      // to express in a closed human-readable form due to the inherited nature\n      // of the errors.\n      //\n      // length(0) = kAnyBounds, because length uses sqrt, which is defined as 1/inversesqrt\n      {input: 0, expected: kAnyBounds },\n      {input: 1.0, expected: [hexToF64(0x3fef_ffff_7000_0000n), hexToF64(0x3ff0_0000_9000_0000n)] },  // ~1\n      {input: -1.0, expected: [hexToF64(0x3fef_ffff_7000_0000n), hexToF64(0x3ff0_0000_9000_0000n)] },  // ~1\n      {input: 0.1, expected: [hexToF64(0x3fb9_9998_9000_0000n), hexToF64(0x3fb9_999a_7000_0000n)] },  // ~0.1\n      {input: -0.1, expected: [hexToF64(0x3fb9_9998_9000_0000n), hexToF64(0x3fb9_999a_7000_0000n)] },  // ~0.1\n      {input: 10.0, expected: [hexToF64(0x4023_ffff_7000_0000n), hexToF64(0x4024_0000_b000_0000n)] },  // ~10\n      {input: -10.0, expected: [hexToF64(0x4023_ffff_7000_0000n), hexToF64(0x4024_0000_b000_0000n)] },  // ~10\n\n      // Subnormal Cases\n      { input: kValue.f32.subnormal.negative.min, expected: kAnyBounds },\n      { input: kValue.f32.subnormal.negative.max, expected: kAnyBounds },\n      { input: kValue.f32.subnormal.positive.min, expected: kAnyBounds },\n      { input: kValue.f32.subnormal.positive.max, expected: kAnyBounds },\n\n      // Edge cases\n      { input: kValue.f32.infinity.positive, expected: kAnyBounds },\n      { input: kValue.f32.infinity.negative, expected: kAnyBounds },\n      { input: kValue.f32.negative.min, expected: kAnyBounds },\n      { input: kValue.f32.negative.max, expected: kAnyBounds },\n      { input: kValue.f32.positive.min, expected: kAnyBounds },\n      { input: kValue.f32.positive.max, expected: kAnyBounds },\n    ]\n  )\n  .fn(t => {\n    const expected = FP.f32.toInterval(t.params.expected);\n    const got = FP.f32.lengthInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.lengthInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('logInterval_f32')\n  .paramsSubcasesOnly<ScalarToIntervalCase>(\n    // prettier-ignore\n    [\n      { input: -1, expected: kAnyBounds },\n      { input: 0, expected: kAnyBounds },\n      { input: 1, expected: 0 },\n      { input: kValue.f32.positive.e, expected: [minusOneULPF32(1), 1] },\n      { input: kValue.f32.positive.max, expected: [minusOneULPF32(hexToF32(0x42b17218)), hexToF32(0x42b17218)] },  // ~88.72...\n    ]\n  )\n  .fn(t => {\n    const error = (n: number): number => {\n      if (t.params.input >= 0.5 && t.params.input <= 2.0) {\n        return 2 ** -21;\n      }\n      return 3 * oneULPF32(n);\n    };\n\n    t.params.expected = applyError(t.params.expected, error);\n    const expected = FP.f32.toInterval(t.params.expected);\n\n    const got = FP.f32.logInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.logInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('log2Interval_f32')\n  .paramsSubcasesOnly<ScalarToIntervalCase>(\n    // prettier-ignore\n    [\n      { input: -1, expected: kAnyBounds },\n      { input: 0, expected: kAnyBounds },\n      { input: 1, expected: 0 },\n      { input: 2, expected: 1 },\n      { input: kValue.f32.positive.max, expected: [minusOneULPF32(128), 128] },\n    ]\n  )\n  .fn(t => {\n    const error = (n: number): number => {\n      if (t.params.input >= 0.5 && t.params.input <= 2.0) {\n        return 2 ** -21;\n      }\n      return 3 * oneULPF32(n);\n    };\n\n    t.params.expected = applyError(t.params.expected, error);\n    const expected = FP.f32.toInterval(t.params.expected);\n\n    const got = FP.f32.log2Interval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.log2Interval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('negationInterval_f32')\n  .paramsSubcasesOnly<ScalarToIntervalCase>(\n    // prettier-ignore\n    [\n      { input: 0, expected: 0 },\n      { input: 0.1, expected: [hexToF32(0xbdcccccd), plusOneULPF32(hexToF32(0xbdcccccd))] }, // ~-0.1\n      { input: 1.0, expected: -1.0 },\n      { input: 1.9, expected: [hexToF32(0xbff33334), plusOneULPF32(hexToF32(0xbff33334))] },  // ~-1.9\n      { input: -0.1, expected: [minusOneULPF32(hexToF32(0x3dcccccd)), hexToF32(0x3dcccccd)] }, // ~0.1\n      { input: -1.0, expected: 1 },\n      { input: -1.9, expected: [minusOneULPF32(hexToF32(0x3ff33334)), hexToF32(0x3ff33334)] },  // ~1.9\n\n      // Edge cases\n      { input: kValue.f32.infinity.positive, expected: kAnyBounds },\n      { input: kValue.f32.infinity.negative, expected: kAnyBounds },\n      { input: kValue.f32.positive.max, expected: kValue.f32.negative.min },\n      { input: kValue.f32.positive.min, expected: kValue.f32.negative.max },\n      { input: kValue.f32.negative.min, expected: kValue.f32.positive.max },\n      { input: kValue.f32.negative.max, expected: kValue.f32.positive.min },\n\n      // 32-bit subnormals\n      { input: kValue.f32.subnormal.positive.max, expected: [kValue.f32.subnormal.negative.min, 0] },\n      { input: kValue.f32.subnormal.positive.min, expected: [kValue.f32.subnormal.negative.max, 0] },\n      { input: kValue.f32.subnormal.negative.min, expected: [0, kValue.f32.subnormal.positive.max] },\n      { input: kValue.f32.subnormal.negative.max, expected: [0, kValue.f32.subnormal.positive.min] },\n    ]\n  )\n  .fn(t => {\n    const expected = FP.f32.toInterval(t.params.expected);\n    const got = FP.f32.negationInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.negationInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('quantizeToF16Interval_f32')\n  .paramsSubcasesOnly<ScalarToIntervalCase>(\n    // prettier-ignore\n    [\n      { input: kValue.f32.infinity.negative, expected: kAnyBounds },\n      { input: kValue.f32.negative.min, expected: kAnyBounds },\n      { input: kValue.f16.negative.min, expected: kValue.f16.negative.min },\n      { input: -1, expected: -1 },\n      { input: -0.1, expected: [hexToF32(0xbdcce000), hexToF32(0xbdccc000)] },  // ~-0.1\n      { input: kValue.f16.negative.max, expected: kValue.f16.negative.max },\n      { input: kValue.f16.subnormal.negative.min, expected: [kValue.f16.subnormal.negative.min, 0] },\n      { input: kValue.f16.subnormal.negative.max, expected: [kValue.f16.subnormal.negative.max, 0] },\n      { input: kValue.f32.subnormal.negative.max, expected: [kValue.f16.subnormal.negative.max, 0] },\n      { input: 0, expected: 0 },\n      { input: kValue.f32.subnormal.positive.min, expected: [0, kValue.f16.subnormal.positive.min] },\n      { input: kValue.f16.subnormal.positive.min, expected: [0, kValue.f16.subnormal.positive.min] },\n      { input: kValue.f16.subnormal.positive.max, expected: [0, kValue.f16.subnormal.positive.max] },\n      { input: kValue.f16.positive.min, expected: kValue.f16.positive.min },\n      { input: 0.1, expected: [hexToF32(0x3dccc000), hexToF32(0x3dcce000)] },  // ~0.1\n      { input: 1, expected: 1 },\n      { input: kValue.f16.positive.max, expected: kValue.f16.positive.max },\n      { input: kValue.f32.positive.max, expected: kAnyBounds },\n      { input: kValue.f32.infinity.positive, expected: kAnyBounds },\n    ]\n  )\n  .fn(t => {\n    const expected = FP.f32.toInterval(t.params.expected);\n\n    const got = FP.f32.quantizeToF16Interval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.quantizeToF16Interval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('radiansInterval_f32')\n  .paramsSubcasesOnly<ScalarToIntervalCase>(\n    // prettier-ignore\n    [\n      { input: kValue.f32.infinity.negative, expected: kAnyBounds },\n      { input: -180, expected: [minusOneULPF32(kValue.f32.negative.pi.whole), plusOneULPF32(kValue.f32.negative.pi.whole)] },\n      { input: -135, expected: [minusOneULPF32(kValue.f32.negative.pi.three_quarters), plusOneULPF32(kValue.f32.negative.pi.three_quarters)] },\n      { input: -90, expected: [minusOneULPF32(kValue.f32.negative.pi.half), plusOneULPF32(kValue.f32.negative.pi.half)] },\n      { input: -60, expected: [minusOneULPF32(kValue.f32.negative.pi.third), plusOneULPF32(kValue.f32.negative.pi.third)] },\n      { input: -45, expected: [minusOneULPF32(kValue.f32.negative.pi.quarter), plusOneULPF32(kValue.f32.negative.pi.quarter)] },\n      { input: -30, expected: [minusOneULPF32(kValue.f32.negative.pi.sixth), plusOneULPF32(kValue.f32.negative.pi.sixth)] },\n      { input: 0, expected: 0 },\n      { input: 30, expected: [minusOneULPF32(kValue.f32.positive.pi.sixth), plusOneULPF32(kValue.f32.positive.pi.sixth)] },\n      { input: 45, expected: [minusOneULPF32(kValue.f32.positive.pi.quarter), plusOneULPF32(kValue.f32.positive.pi.quarter)] },\n      { input: 60, expected: [minusOneULPF32(kValue.f32.positive.pi.third), plusOneULPF32(kValue.f32.positive.pi.third)] },\n      { input: 90, expected: [minusOneULPF32(kValue.f32.positive.pi.half), plusOneULPF32(kValue.f32.positive.pi.half)] },\n      { input: 135, expected: [minusOneULPF32(kValue.f32.positive.pi.three_quarters), plusOneULPF32(kValue.f32.positive.pi.three_quarters)] },\n      { input: 180, expected: [minusOneULPF32(kValue.f32.positive.pi.whole), plusOneULPF32(kValue.f32.positive.pi.whole)] },\n      { input: kValue.f32.infinity.positive, expected: kAnyBounds },\n    ]\n  )\n  .fn(t => {\n    const expected = FP.f32.toInterval(t.params.expected);\n    const got = FP.f32.radiansInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.radiansInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('roundInterval_f32')\n  .paramsSubcasesOnly<ScalarToIntervalCase>(\n    // prettier-ignore\n    [\n      { input: 0, expected: 0 },\n      { input: 0.1, expected: 0 },\n      { input: 0.5, expected: 0 },  // Testing tie breaking\n      { input: 0.9, expected: 1 },\n      { input: 1.0, expected: 1 },\n      { input: 1.1, expected: 1 },\n      { input: 1.5, expected: 2 },  // Testing tie breaking\n      { input: 1.9, expected: 2 },\n      { input: -0.1, expected: 0 },\n      { input: -0.5, expected: 0 },  // Testing tie breaking\n      { input: -0.9, expected: -1 },\n      { input: -1.0, expected: -1 },\n      { input: -1.1, expected: -1 },\n      { input: -1.5, expected: -2 },  // Testing tie breaking\n      { input: -1.9, expected: -2 },\n\n      // Edge cases\n      { input: kValue.f32.infinity.positive, expected: kAnyBounds },\n      { input: kValue.f32.infinity.negative, expected: kAnyBounds },\n      { input: kValue.f32.positive.max, expected: kValue.f32.positive.max },\n      { input: kValue.f32.positive.min, expected: 0 },\n      { input: kValue.f32.negative.min, expected: kValue.f32.negative.min },\n      { input: kValue.f32.negative.max, expected: 0 },\n      { input: kValue.powTwo.to30, expected: kValue.powTwo.to30 },\n      { input: -kValue.powTwo.to30, expected: -kValue.powTwo.to30 },\n\n      // 32-bit subnormals\n      { input: kValue.f32.subnormal.positive.max, expected: 0 },\n      { input: kValue.f32.subnormal.positive.min, expected: 0 },\n      { input: kValue.f32.subnormal.negative.min, expected: 0 },\n      { input: kValue.f32.subnormal.negative.max, expected: 0 },\n    ]\n  )\n  .fn(t => {\n    const expected = FP.f32.toInterval(t.params.expected);\n    const got = FP.f32.roundInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.roundInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('saturateInterval_f32')\n  .paramsSubcasesOnly<ScalarToIntervalCase>(\n    // prettier-ignore\n    [\n      // Normals\n      { input: 0, expected: 0 },\n      { input: 1, expected: 1.0 },\n      { input: -0.1, expected: 0 },\n      { input: -1, expected: 0 },\n      { input: -10, expected: 0 },\n      { input: 0.1, expected: [minusOneULPF32(hexToF32(0x3dcccccd)), hexToF32(0x3dcccccd)] },  // ~0.1\n      { input: 10, expected: 1.0 },\n      { input: 11.1, expected: 1.0 },\n      { input: kValue.f32.positive.max, expected: 1.0 },\n      { input: kValue.f32.positive.min, expected: kValue.f32.positive.min },\n      { input: kValue.f32.negative.max, expected: 0.0 },\n      { input: kValue.f32.negative.min, expected: 0.0 },\n\n      // Subnormals\n      { input: kValue.f32.subnormal.positive.max, expected: [0.0, kValue.f32.subnormal.positive.max] },\n      { input: kValue.f32.subnormal.positive.min, expected: [0.0, kValue.f32.subnormal.positive.min] },\n      { input: kValue.f32.subnormal.negative.min, expected: [kValue.f32.subnormal.negative.min, 0.0] },\n      { input: kValue.f32.subnormal.negative.max, expected: [kValue.f32.subnormal.negative.max, 0.0] },\n\n      // Infinities\n      { input: kValue.f32.infinity.positive, expected: kAnyBounds },\n      { input: kValue.f32.infinity.negative, expected: kAnyBounds },\n    ]\n  )\n  .fn(t => {\n    const expected = FP.f32.toInterval(t.params.expected);\n    const got = FP.f32.saturateInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.saturationInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('signInterval_f32')\n  .paramsSubcasesOnly<ScalarToIntervalCase>(\n    // prettier-ignore\n    [\n      { input: kValue.f32.infinity.negative, expected: kAnyBounds },\n      { input: kValue.f32.negative.min, expected: -1 },\n      { input: -10, expected: -1 },\n      { input: -1, expected: -1 },\n      { input: -0.1, expected: -1 },\n      { input: kValue.f32.negative.max, expected:  -1 },\n      { input: kValue.f32.subnormal.negative.min, expected: [-1, 0] },\n      { input: kValue.f32.subnormal.negative.max, expected: [-1, 0] },\n      { input: 0, expected: 0 },\n      { input: kValue.f32.subnormal.positive.max, expected: [0, 1] },\n      { input: kValue.f32.subnormal.positive.min, expected: [0, 1] },\n      { input: kValue.f32.positive.min, expected: 1 },\n      { input: 0.1, expected: 1 },\n      { input: 1, expected: 1 },\n      { input: 10, expected: 1 },\n      { input: kValue.f32.positive.max, expected: 1 },\n      { input: kValue.f32.infinity.positive, expected: kAnyBounds },\n    ]\n  )\n  .fn(t => {\n    const expected = FP.f32.toInterval(t.params.expected);\n    const got = FP.f32.signInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.signInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('sinInterval_f32')\n  .paramsSubcasesOnly<ScalarToIntervalCase>(\n    // prettier-ignore\n    [\n      // This test does not include some common cases, i.e. f(x = -π|π) = 0,\n      // because the difference between true x and x as a f32 is sufficiently\n      // large, such that the high slope of f @ x causes the results to be\n      // substantially different, so instead of getting 0 you get a value on the\n      // order of 10^-8 away from it, thus difficult to express in a\n      // human-readable manner.\n      { input: kValue.f32.infinity.negative, expected: kAnyBounds },\n      { input: kValue.f32.negative.min, expected: kAnyBounds },\n      { input: kValue.f32.negative.pi.half, expected: [-1, plusOneULPF32(-1)] },\n      { input: 0, expected: 0 },\n      { input: kValue.f32.positive.pi.half, expected: [minusOneULPF32(1), 1] },\n      { input: kValue.f32.positive.max, expected: kAnyBounds },\n      { input: kValue.f32.infinity.positive, expected: kAnyBounds },\n    ]\n  )\n  .fn(t => {\n    const error = (_: number): number => {\n      return 2 ** -11;\n    };\n\n    t.params.expected = applyError(t.params.expected, error);\n    const expected = FP.f32.toInterval(t.params.expected);\n\n    const got = FP.f32.sinInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.sinInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('sinhInterval_f32')\n  .paramsSubcasesOnly<ScalarToIntervalCase>(\n    // prettier-ignore\n    [\n      // Some of these are hard coded, since the error intervals are difficult\n      // to express in a closed human-readable form due to the inherited nature\n      // of the errors.\n      { input: kValue.f32.infinity.negative, expected: kAnyBounds },\n      { input: kValue.f32.negative.min, expected: kAnyBounds },\n      { input: -1, expected: [ hexToF32(0xbf966d05), hexToF32(0xbf966cf8)] },  // ~-1.175...\n      { input: 0, expected: [hexToF32(0xb4600000), hexToF32(0x34600000)] },  // ~0\n      { input: 1, expected: [ hexToF32(0x3f966cf8), hexToF32(0x3f966d05)] },  // ~1.175...\n      { input: kValue.f32.positive.max, expected: kAnyBounds },\n      { input: kValue.f32.infinity.positive, expected: kAnyBounds },\n    ]\n  )\n  .fn(t => {\n    const expected = FP.f32.toInterval(t.params.expected);\n    const got = FP.f32.sinhInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.sinhInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('sqrtInterval_f32')\n  .paramsSubcasesOnly<ScalarToIntervalCase>(\n    // prettier-ignore\n    [\n      // Some of these are hard coded, since the error intervals are difficult\n      // to express in a closed human-readable form due to the inherited nature\n      // of the errors.\n      { input: -1, expected: kAnyBounds },\n      { input: 0, expected: kAnyBounds },\n      { input: 0.01, expected: [hexToF64(0x3fb9_9998_b000_0000n), hexToF64(0x3fb9_999a_7000_0000n)] },  // ~0.1\n      { input: 1, expected: [hexToF64(0x3fef_ffff_7000_0000n), hexToF64(0x3ff0_0000_9000_0000n)] },  // ~1\n      { input: 4, expected: [hexToF64(0x3fff_ffff_7000_0000n), hexToF64(0x4000_0000_9000_0000n)] },  // ~2\n      { input: 100, expected: [hexToF64(0x4023_ffff_7000_0000n), hexToF64(0x4024_0000_b000_0000n)] },  // ~10\n      { input: kValue.f32.infinity.positive, expected: kAnyBounds },\n    ]\n  )\n  .fn(t => {\n    const expected = FP.f32.toInterval(t.params.expected);\n    const got = FP.f32.sqrtInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.sqrtInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('tanInterval_f32')\n  .paramsSubcasesOnly<ScalarToIntervalCase>(\n    // prettier-ignore\n    [\n      // All of these are hard coded, since the error intervals are difficult to\n      // express in a closed human--readable form.\n      // Some easy looking cases like f(x = -π|π) = 0 are actually quite\n      // difficult. This is because the interval is calculated from the results\n      // of sin(x)/cos(x), which becomes very messy at x = -π|π, since π is\n      // irrational, thus does not have an exact representation as a f32.\n      //\n      // Even at 0, which has a precise f32 value, there is still the problem\n      // that result of sin(0) and cos(0) will be intervals due to the inherited\n      // nature of errors, so the proper interval will be an interval calculated\n      // from dividing an interval by another interval and applying an error\n      // function to that.\n      //\n      // This complexity is why the entire interval framework was developed.\n      //\n      // The examples here have been manually traced to confirm the expectation\n      // values are correct.\n      { input: kValue.f32.infinity.negative, expected: kAnyBounds },\n      { input: kValue.f32.negative.min, expected: kAnyBounds },\n      { input: kValue.f32.negative.pi.whole, expected: [hexToF64(0xbf40_02bc_9000_0000n), hexToF64(0x3f40_0144_f000_0000n)] },  // ~0.0\n      { input: kValue.f32.negative.pi.half, expected: kAnyBounds },\n      { input: 0, expected: [hexToF64(0xbf40_0200_b000_0000n), hexToF64(0x3f40_0200_b000_0000n)] },  // ~0.0\n      { input: kValue.f32.positive.pi.half, expected: kAnyBounds },\n      { input: kValue.f32.positive.pi.whole, expected: [hexToF64(0xbf40_0144_f000_0000n), hexToF64(0x3f40_02bc_9000_0000n)] },  // ~0.0\n      { input: kValue.f32.positive.max, expected: kAnyBounds },\n      { input: kValue.f32.infinity.positive, expected: kAnyBounds },\n    ]\n  )\n  .fn(t => {\n    const expected = FP.f32.toInterval(t.params.expected);\n    const got = FP.f32.tanInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.tanInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('tanhInterval_f32')\n  .paramsSubcasesOnly<ScalarToIntervalCase>(\n    // prettier-ignore\n    [\n      // Some of these are hard coded, since the error intervals are difficult\n      // to express in a closed human-readable form due to the inherited nature\n      // of the errors.\n      { input: kValue.f32.infinity.negative, expected: kAnyBounds },\n      { input: kValue.f32.negative.min, expected: kAnyBounds },\n      { input: -1, expected: [hexToF64(0xbfe8_5efd_1000_0000n), hexToF64(0xbfe8_5ef8_9000_0000n)] },  // ~-0.7615...\n      { input: 0, expected: [hexToF64(0xbe8c_0000_b000_0000n), hexToF64(0x3e8c_0000_b000_0000n)] },  // ~0\n      { input: 1, expected: [hexToF64(0x3fe8_5ef8_9000_0000n), hexToF64(0x3fe8_5efd_1000_0000n)] },  // ~0.7615...\n      { input: kValue.f32.positive.max, expected: kAnyBounds },\n      { input: kValue.f32.infinity.positive, expected: kAnyBounds },\n    ]\n  )\n  .fn(t => {\n    const expected = FP.f32.toInterval(t.params.expected);\n    const got = FP.f32.tanhInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.tanhInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('truncInterval_f32')\n  .paramsSubcasesOnly<ScalarToIntervalCase>(\n    // prettier-ignore\n    [\n      { input: 0, expected: 0 },\n      { input: 0.1, expected: 0 },\n      { input: 0.9, expected: 0 },\n      { input: 1.0, expected: 1 },\n      { input: 1.1, expected: 1 },\n      { input: 1.9, expected: 1 },\n      { input: -0.1, expected: 0 },\n      { input: -0.9, expected: 0 },\n      { input: -1.0, expected: -1 },\n      { input: -1.1, expected: -1 },\n      { input: -1.9, expected: -1 },\n\n      // Edge cases\n      { input: kValue.f32.infinity.positive, expected: kAnyBounds },\n      { input: kValue.f32.infinity.negative, expected: kAnyBounds },\n      { input: kValue.f32.positive.max, expected: kValue.f32.positive.max },\n      { input: kValue.f32.positive.min, expected: 0 },\n      { input: kValue.f32.negative.min, expected: kValue.f32.negative.min },\n      { input: kValue.f32.negative.max, expected: 0 },\n\n      // 32-bit subnormals\n      { input: kValue.f32.subnormal.positive.max, expected: 0 },\n      { input: kValue.f32.subnormal.positive.min, expected: 0 },\n      { input: kValue.f32.subnormal.negative.min, expected: 0 },\n      { input: kValue.f32.subnormal.negative.max, expected: 0 },\n    ]\n  )\n  .fn(t => {\n    const expected = FP.f32.toInterval(t.params.expected);\n    const got = FP.f32.truncInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.truncInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ninterface VectorToIntervalCase {\n  input: number[];\n  expected: number | IntervalBounds;\n}\n\ng.test('lengthIntervalVector_f32')\n  .paramsSubcasesOnly<VectorToIntervalCase>(\n    // prettier-ignore\n    [\n      // Some of these are hard coded, since the error intervals are difficult\n      // to express in a closed human-readable form due to the inherited nature\n      // of the errors.\n\n      // vec2\n      {input: [1.0, 0.0], expected: [hexToF64(0x3fef_ffff_7000_0000n), hexToF64(0x3ff0_0000_9000_0000n)] },  // ~1\n      {input: [0.0, 1.0], expected: [hexToF64(0x3fef_ffff_7000_0000n), hexToF64(0x3ff0_0000_9000_0000n)] },  // ~1\n      {input: [1.0, 1.0], expected: [hexToF64(0x3ff6_a09d_b000_0000n), hexToF64(0x3ff6_a09f_1000_0000n)] },  // ~√2\n      {input: [-1.0, -1.0], expected: [hexToF64(0x3ff6_a09d_b000_0000n), hexToF64(0x3ff6_a09f_1000_0000n)] },  // ~√2\n      {input: [-1.0, 1.0], expected: [hexToF64(0x3ff6_a09d_b000_0000n), hexToF64(0x3ff6_a09f_1000_0000n)] },  // ~√2\n      {input: [0.1, 0.0], expected: [hexToF64(0x3fb9_9998_9000_0000n), hexToF64(0x3fb9_999a_7000_0000n)] },  // ~0.1\n\n      // vec3\n      {input: [1.0, 0.0, 0.0], expected: [hexToF64(0x3fef_ffff_7000_0000n), hexToF64(0x3ff0_0000_9000_0000n)] },  // ~1\n      {input: [0.0, 1.0, 0.0], expected: [hexToF64(0x3fef_ffff_7000_0000n), hexToF64(0x3ff0_0000_9000_0000n)] },  // ~1\n      {input: [0.0, 0.0, 1.0], expected: [hexToF64(0x3fef_ffff_7000_0000n), hexToF64(0x3ff0_0000_9000_0000n)] },  // ~1\n      {input: [1.0, 1.0, 1.0], expected: [hexToF64(0x3ffb_b67a_1000_0000n), hexToF64(0x3ffb_b67b_b000_0000n)] },  // ~√3\n      {input: [-1.0, -1.0, -1.0], expected: [hexToF64(0x3ffb_b67a_1000_0000n), hexToF64(0x3ffb_b67b_b000_0000n)] },  // ~√3\n      {input: [1.0, -1.0, -1.0], expected: [hexToF64(0x3ffb_b67a_1000_0000n), hexToF64(0x3ffb_b67b_b000_0000n)] },  // ~√3\n      {input: [0.1, 0.0, 0.0], expected: [hexToF64(0x3fb9_9998_9000_0000n), hexToF64(0x3fb9_999a_7000_0000n)] },  // ~0.1\n\n      // vec4\n      {input: [1.0, 0.0, 0.0, 0.0], expected: [hexToF64(0x3fef_ffff_7000_0000n), hexToF64(0x3ff0_0000_9000_0000n)] },  // ~1\n      {input: [0.0, 1.0, 0.0, 0.0], expected: [hexToF64(0x3fef_ffff_7000_0000n), hexToF64(0x3ff0_0000_9000_0000n)] },  // ~1\n      {input: [0.0, 0.0, 1.0, 0.0], expected: [hexToF64(0x3fef_ffff_7000_0000n), hexToF64(0x3ff0_0000_9000_0000n)] },  // ~1\n      {input: [0.0, 0.0, 0.0, 1.0], expected: [hexToF64(0x3fef_ffff_7000_0000n), hexToF64(0x3ff0_0000_9000_0000n)] },  // ~1\n      {input: [1.0, 1.0, 1.0, 1.0], expected: [hexToF64(0x3fff_ffff_7000_0000n), hexToF64(0x4000_0000_9000_0000n)] },  // ~2\n      {input: [-1.0, -1.0, -1.0, -1.0], expected: [hexToF64(0x3fff_ffff_7000_0000n), hexToF64(0x4000_0000_9000_0000n)] },  // ~2\n      {input: [-1.0, 1.0, -1.0, 1.0], expected: [hexToF64(0x3fff_ffff_7000_0000n), hexToF64(0x4000_0000_9000_0000n)] },  // ~2\n      {input: [0.1, 0.0, 0.0, 0.0], expected: [hexToF64(0x3fb9_9998_9000_0000n), hexToF64(0x3fb9_999a_7000_0000n)] },  // ~0.1\n\n      // Test that dot going OOB bounds in the intermediate calculations propagates\n      { input: [kValue.f32.positive.nearest_max, kValue.f32.positive.max, kValue.f32.negative.min], expected: kAnyBounds },\n      { input: [kValue.f32.positive.max, kValue.f32.positive.nearest_max, kValue.f32.negative.min], expected: kAnyBounds },\n      { input: [kValue.f32.negative.min, kValue.f32.positive.max, kValue.f32.positive.nearest_max], expected: kAnyBounds },\n    ]\n  )\n  .fn(t => {\n    const expected = FP.f32.toInterval(t.params.expected);\n    const got = FP.f32.lengthInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.lengthInterval([${t.params.input}]) returned ${got}. Expected ${expected}`\n    );\n  });\n"],"mappings":"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"}