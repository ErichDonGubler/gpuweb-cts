{"version":3,"sources":["../../src/unittests/f32_interval.spec.ts"],"names":["description","makeTestGroup","objectEquals","kValue","absInterval","absoluteErrorInterval","additionInterval","atanInterval","atan2Interval","ceilInterval","correctlyRoundedInterval","cosInterval","divisionInterval","expInterval","exp2Interval","F32Interval","floorInterval","inverseSqrtInterval","logInterval","log2Interval","maxInterval","minInterval","multiplicationInterval","negationInterval","sinInterval","subtractionInterval","ulpInterval","hexToF32","hexToF64","oneULP","UnitTest","g","arrayToInterval","bounds","begin","end","plusNULP","x","n","plusOneULP","minusNULP","minusOneULP","test","paramsSubcasesOnly","input","expected","f32","positive","max","negative","min","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","infinity","fn","t","input_begin","input_end","params","expected_begin","expected_end","i","expect","value","NaN","subnormal","got","contains","lhs","rhs","intervals","nearest_max","nearest_min","map","span","error","num_ulp","Array","pi","half","third","quarter","sixth","powTwo","to30","whole","e","result","Math","abs","y","three_quarters"],"mappings":"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","sourcesContent":["export const description = `\nF32Interval unit tests.\n`;\n\nimport { makeTestGroup } from '../common/framework/test_group.js';\nimport { objectEquals } from '../common/util/util.js';\nimport { kValue } from '../webgpu/util/constants.js';\nimport {\n  absInterval,\n  absoluteErrorInterval,\n  additionInterval,\n  atanInterval,\n  atan2Interval,\n  ceilInterval,\n  correctlyRoundedInterval,\n  cosInterval,\n  divisionInterval,\n  expInterval,\n  exp2Interval,\n  F32Interval,\n  floorInterval,\n  inverseSqrtInterval,\n  logInterval,\n  log2Interval,\n  maxInterval,\n  minInterval,\n  multiplicationInterval,\n  negationInterval,\n  sinInterval,\n  subtractionInterval,\n  ulpInterval,\n} from '../webgpu/util/f32_interval.js';\nimport { hexToF32, hexToF64, oneULP } from '../webgpu/util/math.js';\n\nimport { UnitTest } from './unit_test.js';\n\nexport const g = makeTestGroup(UnitTest);\n\n/** Convert a pair of numbers in an array to a F32Interval\n *\n * Used for fluently specifying test params as `[a, b]` instead of\n * `new F32Interval(a, b)`\n */\nfunction arrayToInterval(bounds: [number, number]): F32Interval {\n  const [begin, end] = bounds;\n  return new F32Interval(begin, end);\n}\n\n/** @returns a number N * ULP greater than the provided number */\nfunction plusNULP(x: number, n: number): number {\n  return x + n * oneULP(x);\n}\n\n/** @returns a number one ULP greater than the provided number */\nfunction plusOneULP(x: number): number {\n  return plusNULP(x, 1);\n}\n\n/** @returns a number N * ULP less than the provided number */\nfunction minusNULP(x: number, n: number): number {\n  return x - n * oneULP(x);\n}\n\n/** @returns a number one ULP less than the provided number */\nfunction minusOneULP(x: number): number {\n  return minusNULP(x, 1);\n}\n\ninterface ConstructorCase {\n  input: [number, number];\n  expected: [number, number];\n}\n\ng.test('constructor')\n  .paramsSubcasesOnly<ConstructorCase>(\n    // prettier-ignore\n    [\n      // Common cases\n      { input: [0, 10], expected: [0, 10]},\n      { input: [-5, 0], expected: [-5, 0]},\n      { input: [-5, 10], expected: [-5, 10]},\n      { input: [0, 0], expected: [0, 0]},\n      { input: [10, 10], expected: [10, 10]},\n      { input: [-5, -5], expected: [-5, -5]},\n\n      // Edges\n      { input: [0, kValue.f32.positive.max], expected: [0, kValue.f32.positive.max]},\n      { input: [kValue.f32.negative.min, 0], expected: [kValue.f32.negative.min, 0]},\n      { input: [kValue.f32.negative.min, kValue.f32.positive.max], expected: [kValue.f32.negative.min, kValue.f32.positive.max]},\n\n      // Out of range\n      { input: [0, 2 * kValue.f32.positive.max], expected: [0, Number.POSITIVE_INFINITY]},\n      { input: [2 * kValue.f32.negative.min, 0], expected: [Number.NEGATIVE_INFINITY, 0]},\n      { input: [2 * kValue.f32.negative.min, 2 * kValue.f32.positive.max], expected: [Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY]},\n\n      // Infinities\n      { input: [0, kValue.f32.infinity.positive], expected: [0, Number.POSITIVE_INFINITY]},\n      { input: [kValue.f32.infinity.negative, 0], expected: [Number.NEGATIVE_INFINITY, 0]},\n      { input: [kValue.f32.infinity.negative, kValue.f32.infinity.positive], expected: [Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY]},\n    ]\n  )\n  .fn(t => {\n    const [input_begin, input_end] = t.params.input;\n    const [expected_begin, expected_end] = t.params.expected;\n\n    const i = new F32Interval(input_begin, input_end);\n    t.expect(\n      i.begin === expected_begin && i.end === expected_end,\n      `F32Interval(${input_begin}, ${input_end}) returned ${i}. Expected [${expected_begin}, ${expected_end}`\n    );\n  });\n\ninterface ContainsNumberCase {\n  bounds: [number, number];\n  value: number;\n  expected: boolean;\n}\n\ng.test('contains_number')\n  .paramsSubcasesOnly<ContainsNumberCase>(\n    // prettier-ignore\n    [\n    // Common usage\n    { bounds: [0, 10], value: 0, expected: true },\n    { bounds: [0, 10], value: 10, expected: true },\n    { bounds: [0, 10], value: 5, expected: true },\n    { bounds: [0, 10], value: -5, expected: false },\n    { bounds: [0, 10], value: 50, expected: false },\n    { bounds: [0, 10], value: Number.NaN, expected: false },\n    { bounds: [-5, 10], value: 0, expected: true },\n    { bounds: [-5, 10], value: 10, expected: true },\n    { bounds: [-5, 10], value: 5, expected: true },\n    { bounds: [-5, 10], value: -5, expected: true },\n    { bounds: [-5, 10], value: -6, expected: false },\n    { bounds: [-5, 10], value: 50, expected: false },\n    { bounds: [-5, 10], value: -10, expected: false },\n\n    // Point\n    { bounds: [0, 0], value: 0, expected: true },\n    { bounds: [0, 0], value: 10, expected: false },\n    { bounds: [0, 0], value: -1000, expected: false },\n    { bounds: [10, 10], value: 10, expected: true },\n    { bounds: [10, 10], value: 0, expected: false },\n    { bounds: [10, 10], value: -10, expected: false },\n    { bounds: [10, 10], value: 11, expected: false },\n\n    // Upper infinity\n    { bounds: [0, kValue.f32.infinity.positive], value: kValue.f32.positive.min, expected: true },\n    { bounds: [0, kValue.f32.infinity.positive], value: kValue.f32.positive.max, expected: true },\n    { bounds: [0, kValue.f32.infinity.positive], value: Number.POSITIVE_INFINITY, expected: true },\n    { bounds: [0, kValue.f32.infinity.positive], value: kValue.f32.negative.min, expected: false },\n    { bounds: [0, kValue.f32.infinity.positive], value: kValue.f32.negative.max, expected: false },\n    { bounds: [0, kValue.f32.infinity.positive], value: Number.NEGATIVE_INFINITY, expected: false },\n\n    // Lower infinity\n    { bounds: [kValue.f32.infinity.negative, 0], value: kValue.f32.positive.min, expected: false },\n    { bounds: [kValue.f32.infinity.negative, 0], value: kValue.f32.positive.max, expected: false },\n    { bounds: [kValue.f32.infinity.negative, 0], value: Number.POSITIVE_INFINITY, expected: false },\n    { bounds: [kValue.f32.infinity.negative, 0], value: kValue.f32.negative.min, expected: true },\n    { bounds: [kValue.f32.infinity.negative, 0], value: kValue.f32.negative.max, expected: true },\n    { bounds: [kValue.f32.infinity.negative, 0], value: Number.NEGATIVE_INFINITY, expected: true },\n\n    // Full infinity\n    { bounds: [kValue.f32.infinity.negative, kValue.f32.infinity.positive], value: kValue.f32.positive.min, expected: true },\n    { bounds: [kValue.f32.infinity.negative, kValue.f32.infinity.positive], value: kValue.f32.positive.max, expected: true },\n    { bounds: [kValue.f32.infinity.negative, kValue.f32.infinity.positive], value: Number.POSITIVE_INFINITY, expected: true },\n    { bounds: [kValue.f32.infinity.negative, kValue.f32.infinity.positive], value: kValue.f32.negative.min, expected: true },\n    { bounds: [kValue.f32.infinity.negative, kValue.f32.infinity.positive], value: kValue.f32.negative.max, expected: true },\n    { bounds: [kValue.f32.infinity.negative, kValue.f32.infinity.positive], value: Number.NEGATIVE_INFINITY, expected: true },\n    { bounds: [kValue.f32.infinity.negative, kValue.f32.infinity.positive], value: Number.NaN, expected: true },\n\n    // Maximum f32 boundary\n    { bounds: [0, kValue.f32.positive.max], value: kValue.f32.positive.min, expected: true },\n    { bounds: [0, kValue.f32.positive.max], value: kValue.f32.positive.max, expected: true },\n    { bounds: [0, kValue.f32.positive.max], value: Number.POSITIVE_INFINITY, expected: false },\n    { bounds: [0, kValue.f32.positive.max], value: kValue.f32.negative.min, expected: false },\n    { bounds: [0, kValue.f32.positive.max], value: kValue.f32.negative.max, expected: false },\n    { bounds: [0, kValue.f32.positive.max], value: Number.NEGATIVE_INFINITY, expected: false },\n\n    // Minimum f32 boundary\n    { bounds: [kValue.f32.negative.min, 0], value: kValue.f32.positive.min, expected: false },\n    { bounds: [kValue.f32.negative.min, 0], value: kValue.f32.positive.max, expected: false },\n    { bounds: [kValue.f32.negative.min, 0], value: Number.POSITIVE_INFINITY, expected: false },\n    { bounds: [kValue.f32.negative.min, 0], value: kValue.f32.negative.min, expected: true },\n    { bounds: [kValue.f32.negative.min, 0], value: kValue.f32.negative.max, expected: true },\n    { bounds: [kValue.f32.negative.min, 0], value: Number.NEGATIVE_INFINITY, expected: false },\n\n    // Out of range high\n    { bounds: [0, 2 * kValue.f32.positive.max], value: kValue.f32.positive.min, expected: true },\n    { bounds: [0, 2 * kValue.f32.positive.max], value: kValue.f32.positive.max, expected: true },\n    { bounds: [0, 2 * kValue.f32.positive.max], value: Number.POSITIVE_INFINITY, expected: true },\n    { bounds: [0, 2 * kValue.f32.positive.max], value: kValue.f32.negative.min, expected: false },\n    { bounds: [0, 2 * kValue.f32.positive.max], value: kValue.f32.negative.max, expected: false },\n    { bounds: [0, 2 * kValue.f32.positive.max], value: Number.NEGATIVE_INFINITY, expected: false },\n\n    // Out of range low\n    { bounds: [2 * kValue.f32.negative.min, 0], value: kValue.f32.positive.min, expected: false },\n    { bounds: [2 * kValue.f32.negative.min, 0], value: kValue.f32.positive.max, expected: false },\n    { bounds: [2 * kValue.f32.negative.min, 0], value: Number.POSITIVE_INFINITY, expected: false },\n    { bounds: [2 * kValue.f32.negative.min, 0], value: kValue.f32.negative.min, expected: true },\n    { bounds: [2 * kValue.f32.negative.min, 0], value: kValue.f32.negative.max, expected: true },\n    { bounds: [2 * kValue.f32.negative.min, 0], value: Number.NEGATIVE_INFINITY, expected: true },\n\n    // Subnormals\n    { bounds: [0, kValue.f32.positive.min], value: kValue.f32.subnormal.positive.min, expected: true },\n    { bounds: [0, kValue.f32.positive.min], value: kValue.f32.subnormal.positive.max, expected: true },\n    { bounds: [0, kValue.f32.positive.min], value: kValue.f32.subnormal.negative.min, expected: false },\n    { bounds: [0, kValue.f32.positive.min], value: kValue.f32.subnormal.negative.max, expected: false },\n    { bounds: [kValue.f32.negative.max, 0], value: kValue.f32.subnormal.positive.min, expected: false },\n    { bounds: [kValue.f32.negative.max, 0], value: kValue.f32.subnormal.positive.max, expected: false },\n    { bounds: [kValue.f32.negative.max, 0], value: kValue.f32.subnormal.negative.min, expected: true },\n    { bounds: [kValue.f32.negative.max, 0], value: kValue.f32.subnormal.negative.max, expected: true },\n    { bounds: [0, kValue.f32.subnormal.positive.min], value: kValue.f32.subnormal.positive.min, expected: true },\n    { bounds: [0, kValue.f32.subnormal.positive.min], value: kValue.f32.subnormal.positive.max, expected: false },\n    { bounds: [0, kValue.f32.subnormal.positive.min], value: kValue.f32.subnormal.negative.min, expected: false },\n    { bounds: [0, kValue.f32.subnormal.positive.min], value: kValue.f32.subnormal.negative.max, expected: false },\n    { bounds: [kValue.f32.subnormal.negative.max, 0], value: kValue.f32.subnormal.positive.min, expected: false },\n    { bounds: [kValue.f32.subnormal.negative.max, 0], value: kValue.f32.subnormal.positive.max, expected: false },\n    { bounds: [kValue.f32.subnormal.negative.max, 0], value: kValue.f32.subnormal.negative.min, expected: false },\n    { bounds: [kValue.f32.subnormal.negative.max, 0], value: kValue.f32.subnormal.negative.max, expected: true },\n    ]\n  )\n  .fn(t => {\n    const i = arrayToInterval(t.params.bounds);\n    const value = t.params.value;\n    const expected = t.params.expected;\n\n    const got = i.contains(value);\n    t.expect(expected === got, `${i}.contains(${value}) returned ${got}. Expected ${expected}`);\n  });\n\ninterface ContainsIntervalCase {\n  lhs: [number, number];\n  rhs: [number, number];\n  expected: boolean;\n}\n\ng.test('contains_interval')\n  .paramsSubcasesOnly<ContainsIntervalCase>(\n    // prettier-ignore\n    [\n      // Common usage\n      { lhs: [-10, 10], rhs: [0, 0], expected: true},\n      { lhs: [-10, 10], rhs: [-1, 0], expected: true},\n      { lhs: [-10, 10], rhs: [0, 2], expected: true},\n      { lhs: [-10, 10], rhs: [-1, 2], expected: true},\n      { lhs: [-10, 10], rhs: [0, 10], expected: true},\n      { lhs: [-10, 10], rhs: [-10, 2], expected: true},\n      { lhs: [-10, 10], rhs: [-10, 10], expected: true},\n      { lhs: [-10, 10], rhs: [-100, 10], expected: false},\n\n      // Upper infinity\n      { lhs: [0, kValue.f32.infinity.positive], rhs: [0, 0], expected: true},\n      { lhs: [0, kValue.f32.infinity.positive], rhs: [-1, 0], expected: false},\n      { lhs: [0, kValue.f32.infinity.positive], rhs: [0, 1], expected: true},\n      { lhs: [0, kValue.f32.infinity.positive], rhs: [0, kValue.f32.positive.max], expected: true},\n      { lhs: [0, kValue.f32.infinity.positive], rhs: [0, Number.POSITIVE_INFINITY], expected: true},\n      { lhs: [0, kValue.f32.infinity.positive], rhs: [100, Number.POSITIVE_INFINITY], expected: true},\n      { lhs: [0, kValue.f32.infinity.positive], rhs: [Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY], expected: false},\n\n      // Lower infinity\n      { lhs: [kValue.f32.infinity.negative, 0], rhs: [0, 0], expected: true},\n      { lhs: [kValue.f32.infinity.negative, 0], rhs: [-1, 0], expected: true},\n      { lhs: [kValue.f32.infinity.negative, 0], rhs: [kValue.f32.negative.min, 0], expected: true},\n      { lhs: [kValue.f32.infinity.negative, 0], rhs: [0, 1], expected: false},\n      { lhs: [kValue.f32.infinity.negative, 0], rhs: [Number.NEGATIVE_INFINITY, 0], expected: true},\n      { lhs: [kValue.f32.infinity.negative, 0], rhs: [Number.NEGATIVE_INFINITY, -100 ], expected: true},\n      { lhs: [kValue.f32.infinity.negative, 0], rhs: [Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY], expected: false},\n\n      // Full infinity\n      { lhs: [kValue.f32.infinity.negative, kValue.f32.infinity.positive], rhs: [0, 0], expected: true},\n      { lhs: [kValue.f32.infinity.negative, kValue.f32.infinity.positive], rhs: [-1, 0], expected: true},\n      { lhs: [kValue.f32.infinity.negative, kValue.f32.infinity.positive], rhs: [0, 1], expected: true},\n      { lhs: [kValue.f32.infinity.negative, kValue.f32.infinity.positive], rhs: [0, Number.POSITIVE_INFINITY], expected: true},\n      { lhs: [kValue.f32.infinity.negative, kValue.f32.infinity.positive], rhs: [100, Number.POSITIVE_INFINITY], expected: true},\n      { lhs: [kValue.f32.infinity.negative, kValue.f32.infinity.positive], rhs: [Number.NEGATIVE_INFINITY, 0], expected: true},\n      { lhs: [kValue.f32.infinity.negative, kValue.f32.infinity.positive], rhs: [Number.NEGATIVE_INFINITY, -100 ], expected: true},\n      { lhs: [kValue.f32.infinity.negative, kValue.f32.infinity.positive], rhs: [Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY], expected: true},\n\n      // Maximum f32 boundary\n      { lhs: [0, kValue.f32.positive.max], rhs: [0, 0], expected: true},\n      { lhs: [0, kValue.f32.positive.max], rhs: [-1, 0], expected: false},\n      { lhs: [0, kValue.f32.positive.max], rhs: [0, 1], expected: true},\n      { lhs: [0, kValue.f32.positive.max], rhs: [0, kValue.f32.positive.max], expected: true},\n      { lhs: [0, kValue.f32.positive.max], rhs: [0, Number.POSITIVE_INFINITY], expected: false},\n      { lhs: [0, kValue.f32.positive.max], rhs: [100, Number.POSITIVE_INFINITY], expected: false},\n      { lhs: [0, kValue.f32.positive.max], rhs: [Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY], expected: false},\n\n      // Minimum f32 boundary\n      { lhs: [kValue.f32.negative.min, 0], rhs: [0, 0], expected: true},\n      { lhs: [kValue.f32.negative.min, 0], rhs: [-1, 0], expected: true},\n      { lhs: [kValue.f32.negative.min, 0], rhs: [kValue.f32.negative.min, 0], expected: true},\n      { lhs: [kValue.f32.negative.min, 0], rhs: [0, 1], expected: false},\n      { lhs: [kValue.f32.negative.min, 0], rhs: [Number.NEGATIVE_INFINITY, 0], expected: false},\n      { lhs: [kValue.f32.negative.min, 0], rhs: [Number.NEGATIVE_INFINITY, -100 ], expected: false},\n      { lhs: [kValue.f32.negative.min, 0], rhs: [Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY], expected: false},\n\n      // Out of range high\n      { lhs: [0, 2 * kValue.f32.positive.max], rhs: [0, 0], expected: true},\n      { lhs: [0, 2 * kValue.f32.positive.max], rhs: [-1, 0], expected: false},\n      { lhs: [0, 2 * kValue.f32.positive.max], rhs: [0, 1], expected: true},\n      { lhs: [0, 2 * kValue.f32.positive.max], rhs: [0, kValue.f32.positive.max], expected: true},\n      { lhs: [0, 2 * kValue.f32.positive.max], rhs: [0, Number.POSITIVE_INFINITY], expected: true},\n      { lhs: [0, 2 * kValue.f32.positive.max], rhs: [100, Number.POSITIVE_INFINITY], expected: true},\n      { lhs: [0, 2 * kValue.f32.positive.max], rhs: [Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY], expected: false},\n\n      // Out of range low\n      { lhs: [2 * kValue.f32.negative.min, 0], rhs: [0, 0], expected: true},\n      { lhs: [2 * kValue.f32.negative.min, 0], rhs: [-1, 0], expected: true},\n      { lhs: [2 * kValue.f32.negative.min, 0], rhs: [kValue.f32.negative.min, 0], expected: true},\n      { lhs: [2 * kValue.f32.negative.min, 0], rhs: [0, 1], expected: false},\n      { lhs: [2 * kValue.f32.negative.min, 0], rhs: [Number.NEGATIVE_INFINITY, 0], expected: true},\n      { lhs: [2 * kValue.f32.negative.min, 0], rhs: [Number.NEGATIVE_INFINITY, -100 ], expected: true},\n      { lhs: [2 * kValue.f32.negative.min, 0], rhs: [Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY], expected: false},\n    ]\n  )\n  .fn(t => {\n    const lhs = arrayToInterval(t.params.lhs);\n    const rhs = arrayToInterval(t.params.rhs);\n    const expected = t.params.expected;\n\n    const got = lhs.contains(rhs);\n    t.expect(expected === got, `${lhs}.contains(${rhs}) returned ${got}. Expected ${expected}`);\n  });\n\ninterface SpanCase {\n  intervals: Array<[number, number]>;\n  expected: [number, number];\n}\n\ng.test('span')\n  .paramsSubcasesOnly<SpanCase>(\n    // prettier-ignore\n    [\n      // Single Intervals\n      { intervals: [[0, 10]], expected: [0, 10]},\n      { intervals: [[0, kValue.f32.positive.max]], expected: [0, kValue.f32.positive.max]},\n      { intervals: [[0, kValue.f32.positive.nearest_max]], expected: [0, kValue.f32.positive.nearest_max]},\n      { intervals: [[0, kValue.f32.infinity.positive]], expected: [0, Number.POSITIVE_INFINITY]},\n      { intervals: [[kValue.f32.negative.min, 0]], expected: [kValue.f32.negative.min, 0]},\n      { intervals: [[kValue.f32.negative.nearest_min, 0]], expected: [kValue.f32.negative.nearest_min, 0]},\n      { intervals: [[kValue.f32.infinity.negative, 0]], expected: [Number.NEGATIVE_INFINITY, 0]},\n\n      // Double Intervals\n      { intervals: [[0, 1], [2, 5]], expected: [0, 5]},\n      { intervals: [[2, 5], [0, 1]], expected: [0, 5]},\n      { intervals: [[0, 2], [1, 5]], expected: [0, 5]},\n      { intervals: [[0, 5], [1, 2]], expected: [0, 5]},\n      { intervals: [[kValue.f32.infinity.negative, 0], [0, kValue.f32.infinity.positive]], expected: [Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY]},\n\n      // Multiple Intervals\n      { intervals: [[0, 1], [2, 3], [4, 5]], expected: [0, 5]},\n      { intervals: [[0, 1], [4, 5], [2, 3]], expected: [0, 5]},\n      { intervals: [[0, 1], [0, 1], [0, 1]], expected: [0, 1]},\n    ]\n  )\n  .fn(t => {\n    const intervals = t.params.intervals.map(arrayToInterval);\n    const expected = arrayToInterval(t.params.expected);\n\n    const got = F32Interval.span(...intervals);\n    t.expect(\n      objectEquals(got, expected),\n      `span({${intervals}}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ninterface CorrectlyRoundedCase {\n  value: number;\n  expected: [number, number];\n}\n\ng.test('correctlyRoundedInterval')\n  .paramsSubcasesOnly<CorrectlyRoundedCase>(\n    // prettier-ignore\n    [\n      // Edge Cases\n      { value: kValue.f32.infinity.positive, expected: [kValue.f32.positive.max, Number.POSITIVE_INFINITY] },\n      { value: kValue.f32.infinity.negative, expected: [Number.NEGATIVE_INFINITY, kValue.f32.negative.min] },\n      { value: kValue.f32.positive.max, expected: [kValue.f32.positive.max, kValue.f32.positive.max] },\n      { value: kValue.f32.negative.min, expected: [kValue.f32.negative.min, kValue.f32.negative.min] },\n      { value: kValue.f32.positive.min, expected: [kValue.f32.positive.min, kValue.f32.positive.min] },\n      { value: kValue.f32.negative.max, expected: [kValue.f32.negative.max, kValue.f32.negative.max] },\n\n      // 32-bit subnormals\n      { value: kValue.f32.subnormal.positive.min, expected: [0, kValue.f32.subnormal.positive.min] },\n      { value: kValue.f32.subnormal.positive.max, expected: [0, kValue.f32.subnormal.positive.max] },\n      { value: kValue.f32.subnormal.negative.min, expected: [kValue.f32.subnormal.negative.min, 0] },\n      { value: kValue.f32.subnormal.negative.max, expected: [kValue.f32.subnormal.negative.max, 0] },\n\n      // 64-bit subnormals\n      { value: hexToF64(0x00000000, 0x00000001), expected: [0, kValue.f32.subnormal.positive.min] },\n      { value: hexToF64(0x00000000, 0x00000002), expected: [0, kValue.f32.subnormal.positive.min] },\n      { value: hexToF64(0x800fffff, 0xffffffff), expected: [kValue.f32.subnormal.negative.max, 0] },\n      { value: hexToF64(0x800fffff, 0xfffffffe), expected: [kValue.f32.subnormal.negative.max, 0] },\n\n      // 32-bit normals\n      { value: 0, expected: [0, 0] },\n      { value: hexToF32(0x03800000), expected: [hexToF32(0x03800000), hexToF32(0x03800000)] },\n      { value: hexToF32(0x03800001), expected: [hexToF32(0x03800001), hexToF32(0x03800001)] },\n      { value: hexToF32(0x83800000), expected: [hexToF32(0x83800000), hexToF32(0x83800000)] },\n      { value: hexToF32(0x83800001), expected: [hexToF32(0x83800001), hexToF32(0x83800001)] },\n\n      // 64-bit normals\n      { value: hexToF64(0x3ff00000, 0x00000001), expected: [hexToF32(0x3f800000), hexToF32(0x3f800001)] },\n      { value: hexToF64(0x3ff00000, 0x00000002), expected: [hexToF32(0x3f800000), hexToF32(0x3f800001)] },\n      { value: hexToF64(0x3ff00010, 0x00000010), expected: [hexToF32(0x3f800080), hexToF32(0x3f800081)] },\n      { value: hexToF64(0x3ff00020, 0x00000020), expected: [hexToF32(0x3f800100), hexToF32(0x3f800101)] },\n      { value: hexToF64(0xbff00000, 0x00000001), expected: [hexToF32(0xbf800001), hexToF32(0xbf800000)] },\n      { value: hexToF64(0xbff00000, 0x00000002), expected: [hexToF32(0xbf800001), hexToF32(0xbf800000)] },\n      { value: hexToF64(0xbff00010, 0x00000010), expected: [hexToF32(0xbf800081), hexToF32(0xbf800080)] },\n      { value: hexToF64(0xbff00020, 0x00000020), expected: [hexToF32(0xbf800101), hexToF32(0xbf800100)] },\n    ]\n  )\n  .fn(t => {\n    const value = t.params.value;\n    const expected = arrayToInterval(t.params.expected);\n\n    const got = correctlyRoundedInterval(value);\n    t.expect(\n      objectEquals(expected, got),\n      `correctlyRoundedInterval(${value}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ninterface AbsoluteErrorCase {\n  value: number;\n  error: number;\n  expected: [number, number];\n}\n\ng.test('absoluteErrorInterval')\n  .paramsSubcasesOnly<AbsoluteErrorCase>(\n    // prettier-ignore\n    [\n      // Edge Cases\n      { value: kValue.f32.infinity.positive, error: 0, expected: [kValue.f32.positive.max, Number.POSITIVE_INFINITY] },\n      { value: kValue.f32.infinity.positive, error: 2 ** -11, expected: [kValue.f32.positive.max, Number.POSITIVE_INFINITY] },\n      { value: kValue.f32.infinity.positive, error: 1, expected: [kValue.f32.positive.max, Number.POSITIVE_INFINITY] },\n      { value: kValue.f32.infinity.negative, error: 0, expected: [Number.NEGATIVE_INFINITY, kValue.f32.negative.min] },\n      { value: kValue.f32.infinity.negative, error: 2 ** -11, expected: [Number.NEGATIVE_INFINITY, kValue.f32.negative.min] },\n      { value: kValue.f32.infinity.negative, error: 1, expected: [Number.NEGATIVE_INFINITY, kValue.f32.negative.min] },\n      { value: kValue.f32.positive.max, error: 0, expected: [kValue.f32.positive.max, kValue.f32.positive.max] },\n      { value: kValue.f32.positive.max, error: 2 ** -11, expected: [kValue.f32.positive.max, kValue.f32.positive.max] },\n      { value: kValue.f32.positive.max, error: kValue.f32.positive.max, expected: [0, Number.POSITIVE_INFINITY] },\n      { value: kValue.f32.positive.min, error: 0, expected: [kValue.f32.positive.min,  kValue.f32.positive.min] },\n      { value: kValue.f32.positive.min, error: 2 ** -11, expected: [-(2 ** -11), 2 ** -11] },\n      { value: kValue.f32.positive.min, error: 1, expected: [-1, 1] },\n      { value: kValue.f32.negative.min, error: 0, expected: [kValue.f32.negative.min, kValue.f32.negative.min] },\n      { value: kValue.f32.negative.min, error: 2 ** -11, expected: [kValue.f32.negative.min, kValue.f32.negative.min] },\n      { value: kValue.f32.negative.min, error: kValue.f32.positive.max, expected: [Number.NEGATIVE_INFINITY, 0] },\n      { value: kValue.f32.negative.max, error: 0, expected: [kValue.f32.negative.max, kValue.f32.negative.max] },\n      { value: kValue.f32.negative.max, error: 2 ** -11, expected: [-(2 ** -11), 2 ** -11] },\n      { value: kValue.f32.negative.max, error: 1, expected: [-1, 1] },\n\n      // 32-bit subnormals\n      { value: kValue.f32.subnormal.positive.max, error: 0, expected: [0, kValue.f32.subnormal.positive.max] },\n      { value: kValue.f32.subnormal.positive.max, error: 2 ** -11, expected: [-(2 ** -11), 2 ** -11] },\n      { value: kValue.f32.subnormal.positive.max, error: 1, expected: [-1, 1] },\n      { value: kValue.f32.subnormal.positive.min, error: 0, expected: [0, kValue.f32.subnormal.positive.min] },\n      { value: kValue.f32.subnormal.positive.min, error: 2 ** -11, expected: [-(2 ** -11), 2 ** -11] },\n      { value: kValue.f32.subnormal.positive.min, error: 1, expected: [-1, 1] },\n      { value: kValue.f32.subnormal.negative.min, error: 0, expected: [kValue.f32.subnormal.negative.min, 0] },\n      { value: kValue.f32.subnormal.negative.min, error: 2 ** -11, expected: [-(2 ** -11), 2 ** -11] },\n      { value: kValue.f32.subnormal.negative.min, error: 1, expected: [-1, 1] },\n      { value: kValue.f32.subnormal.negative.max, error: 0, expected: [kValue.f32.subnormal.negative.max, 0] },\n      { value: kValue.f32.subnormal.negative.max, error: 2 ** -11, expected: [-(2 ** -11), 2 ** -11] },\n      { value: kValue.f32.subnormal.negative.max, error: 1, expected: [-1, 1] },\n\n      // 64-bit subnormals\n      { value: hexToF64(0x00000000, 0x00000001), error: 0, expected: [0, kValue.f32.subnormal.positive.min] },\n      { value: hexToF64(0x00000000, 0x00000001), error: 2 ** -11, expected: [-(2 ** -11), 2 ** -11] },\n      { value: hexToF64(0x00000000, 0x00000001), error: 1, expected: [-1, 1] },\n      { value: hexToF64(0x00000000, 0x00000002), error: 0, expected: [0, kValue.f32.subnormal.positive.min] },\n      { value: hexToF64(0x00000000, 0x00000002), error: 2 ** -11, expected: [-(2 ** -11), 2 ** -11] },\n      { value: hexToF64(0x00000000, 0x00000002), error: 1, expected: [-1, 1] },\n      { value: hexToF64(0x800fffff, 0xffffffff), error: 0, expected: [kValue.f32.subnormal.negative.max, 0] },\n      { value: hexToF64(0x800fffff, 0xffffffff), error: 2 ** -11, expected: [-(2 ** -11), 2 ** -11] },\n      { value: hexToF64(0x800fffff, 0xffffffff), error: 1, expected: [-1, 1] },\n      { value: hexToF64(0x800fffff, 0xfffffffe), error: 0, expected: [kValue.f32.subnormal.negative.max, 0] },\n      { value: hexToF64(0x800fffff, 0xfffffffe), error: 2 ** -11, expected: [-(2 ** -11), 2 ** -11] },\n      { value: hexToF64(0x800fffff, 0xfffffffe), error: 1, expected: [-1, 1] },\n\n      // Zero\n      { value: 0, error: 0, expected: [0, 0] },\n      { value: 0, error: 2 ** -11, expected: [-(2 ** -11), 2 ** -11] },\n      { value: 0, error: 1, expected: [-1, 1] },\n    ]\n  )\n  .fn(t => {\n    const value = t.params.value;\n    const error = t.params.error;\n    const expected = arrayToInterval(t.params.expected);\n\n    const got = absoluteErrorInterval(value, error);\n    t.expect(\n      objectEquals(expected, got),\n      `absoluteErrorInterval(${value}, ${error}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ninterface ULPCase {\n  value: number;\n  num_ulp: number;\n  expected: [number, number];\n}\n\ng.test('ulpInterval')\n  .paramsSubcasesOnly<ULPCase>(\n    // prettier-ignore\n    [\n      // Edge Cases\n      { value: kValue.f32.infinity.positive, num_ulp: 0, expected: [kValue.f32.positive.max, Number.POSITIVE_INFINITY] },\n      { value: kValue.f32.infinity.positive, num_ulp: 1, expected: [kValue.f32.positive.max, Number.POSITIVE_INFINITY] },\n      { value: kValue.f32.infinity.positive, num_ulp: 4096, expected: [kValue.f32.positive.max, Number.POSITIVE_INFINITY] },\n      { value: kValue.f32.infinity.negative, num_ulp: 0, expected: [Number.NEGATIVE_INFINITY, kValue.f32.negative.min] },\n      { value: kValue.f32.infinity.negative, num_ulp: 1, expected: [Number.NEGATIVE_INFINITY, kValue.f32.negative.min] },\n      { value: kValue.f32.infinity.negative, num_ulp: 4096, expected: [Number.NEGATIVE_INFINITY, kValue.f32.negative.min] },\n      { value: kValue.f32.positive.max, num_ulp: 0, expected: [kValue.f32.positive.max, kValue.f32.positive.max] },\n      { value: kValue.f32.positive.max, num_ulp: 1, expected: [kValue.f32.positive.nearest_max, Number.POSITIVE_INFINITY] },\n      { value: kValue.f32.positive.max, num_ulp: 4096, expected: [hexToF32(0x7f7fefff), Number.POSITIVE_INFINITY] },\n      { value: kValue.f32.positive.min, num_ulp: 0, expected: [ kValue.f32.positive.min,  kValue.f32.positive.min] },\n      { value: kValue.f32.positive.min, num_ulp: 1, expected: [0, hexToF32(0x00800001)] },\n      { value: kValue.f32.positive.min, num_ulp: 4096, expected: [0, hexToF32(0x00801000)] },\n      { value: kValue.f32.negative.min, num_ulp: 0, expected: [kValue.f32.negative.min, kValue.f32.negative.min] },\n      { value: kValue.f32.negative.min, num_ulp: 1, expected: [Number.NEGATIVE_INFINITY, kValue.f32.negative.nearest_min] },\n      { value: kValue.f32.negative.min, num_ulp: 4096, expected: [Number.NEGATIVE_INFINITY, hexToF32(0xff7fefff)] },\n      { value: kValue.f32.negative.max, num_ulp: 0, expected: [kValue.f32.negative.max, kValue.f32.negative.max] },\n      { value: kValue.f32.negative.max, num_ulp: 1, expected: [hexToF32(0x80800001), 0] },\n      { value: kValue.f32.negative.max, num_ulp: 4096, expected: [hexToF32(0x80801000), 0] },\n\n      // 32-bit subnormals\n      { value: kValue.f32.subnormal.positive.max, num_ulp: 0, expected: [0, kValue.f32.subnormal.positive.max] },\n      { value: kValue.f32.subnormal.positive.max, num_ulp: 1, expected: [kValue.f32.negative.max, hexToF32(0x00ffffff)] },\n      { value: kValue.f32.subnormal.positive.max, num_ulp: 4096, expected: [hexToF32(0x86800000), hexToF64(0x38d000ff, 0xfffe0000)] },\n      { value: kValue.f32.subnormal.positive.min, num_ulp: 0, expected: [0, kValue.f32.subnormal.positive.min] },\n      { value: kValue.f32.subnormal.positive.min, num_ulp: 1, expected: [kValue.f32.negative.max, hexToF32(0x00800001)] },\n      { value: kValue.f32.subnormal.positive.min, num_ulp: 4096, expected: [hexToF32(0x86800000), hexToF64(0x38d00000, 0x00020000)] },\n      { value: kValue.f32.subnormal.negative.min, num_ulp: 0, expected: [kValue.f32.subnormal.negative.min, 0] },\n      { value: kValue.f32.subnormal.negative.min, num_ulp: 1, expected: [hexToF32(0x80ffffff), kValue.f32.positive.min] },\n      { value: kValue.f32.subnormal.negative.min, num_ulp: 4096, expected: [hexToF64(0xb8d000ff, 0xfffe0000), hexToF32(0x06800000)] },\n      { value: kValue.f32.subnormal.negative.max, num_ulp: 0, expected: [kValue.f32.subnormal.negative.max, 0] },\n      { value: kValue.f32.subnormal.negative.max, num_ulp: 1, expected: [hexToF32(0x80800001), kValue.f32.positive.min] },\n      { value: kValue.f32.subnormal.negative.max, num_ulp: 4096, expected: [hexToF64(0xb8d00000, 0x00020000), hexToF32(0x06800000)] },\n\n      // 64-bit subnormals\n      { value: hexToF64(0x00000000, 0x00000001), num_ulp: 0, expected: [0, kValue.f32.subnormal.positive.min] },\n      { value: hexToF64(0x00000000, 0x00000001), num_ulp: 1, expected: [kValue.f32.negative.max, hexToF32(0x00800001)] },\n      { value: hexToF64(0x00000000, 0x00000001), num_ulp: 4096, expected: [hexToF32(0x86800000), hexToF64(0x38d00000, 0x00020000)] },\n      { value: hexToF64(0x00000000, 0x00000002), num_ulp: 0, expected: [0, kValue.f32.subnormal.positive.min] },\n      { value: hexToF64(0x00000000, 0x00000002), num_ulp: 1, expected: [kValue.f32.negative.max, hexToF32(0x00800001)] },\n      { value: hexToF64(0x00000000, 0x00000002), num_ulp: 4096, expected: [hexToF32(0x86800000), hexToF64(0x38d00000, 0x00020000)] },\n      { value: hexToF64(0x800fffff, 0xffffffff), num_ulp: 0, expected: [kValue.f32.subnormal.negative.max, 0] },\n      { value: hexToF64(0x800fffff, 0xffffffff), num_ulp: 1, expected: [hexToF32(0x80800001), kValue.f32.positive.min] },\n      { value: hexToF64(0x800fffff, 0xffffffff), num_ulp: 4096, expected: [hexToF64(0xb8d00000, 0x00020000), hexToF32(0x06800000)] },\n      { value: hexToF64(0x800fffff, 0xfffffffe), num_ulp: 0, expected: [kValue.f32.subnormal.negative.max, 0] },\n      { value: hexToF64(0x800fffff, 0xfffffffe), num_ulp: 1, expected: [hexToF32(0x80800001), kValue.f32.positive.min] },\n      { value: hexToF64(0x800fffff, 0xfffffffe), num_ulp: 4096, expected: [hexToF64(0xb8d00000, 0x00020000), hexToF32(0x06800000)] },\n\n      // Zero\n      { value: 0, num_ulp: 0, expected: [0, 0] },\n      { value: 0, num_ulp: 1, expected: [kValue.f32.negative.max, kValue.f32.positive.min] },\n      { value: 0, num_ulp: 4096, expected: [hexToF32(0x86800000), hexToF32(0x06800000)] },\n    ]\n  )\n  .fn(t => {\n    const value = t.params.value;\n    const num_ulp = t.params.num_ulp;\n    const expected = arrayToInterval(t.params.expected);\n\n    const got = ulpInterval(value, num_ulp);\n    t.expect(\n      objectEquals(expected, got),\n      `ulpInterval(${value}, ${num_ulp}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ninterface PointToIntervalCase {\n  input: number;\n  // If expected is an Array of two values, the test should interpret them as\n  // human readable begin/end values that need to be adjusted for the error\n  // calculation specific to the function being tested.\n  // This is to facilitate writing tests in a fluent manner, i.e. being able to\n  // express a expectation as `plusOneULP(π/2)` instead of\n  // `π/2 + ULP(π/2) + 4096 * ULP(π/2 + ULP(π/2))`\n  //\n  // If expected is an F32Interval, it is to be interpreted as an exact value,\n  // with no additional processing. This is to allow for expressing specific\n  // cases with human readable values that would require effectively\n  // implementing the entire interval system under test to accommodate them in\n  // the test error calculation.\n  expected: [number, number] | F32Interval;\n}\n\ng.test('absInterval')\n  .paramsSubcasesOnly<PointToIntervalCase>(\n    // prettier-ignore\n    [\n      // Common usages\n      { input: 1, expected: [1, 1] },\n      { input: -1, expected: [1, 1] },\n      { input: 0.1, expected: [hexToF32(0x3dcccccc), hexToF32(0x3dcccccd)] },\n      { input: -0.1, expected: [hexToF32(0x3dcccccc), hexToF32(0x3dcccccd)] },\n\n      // Edge cases\n      { input: kValue.f32.infinity.positive, expected: [kValue.f32.positive.max, Number.POSITIVE_INFINITY] },\n      { input: kValue.f32.infinity.negative, expected: [kValue.f32.positive.max, Number.POSITIVE_INFINITY] },\n      { input: kValue.f32.positive.max, expected: [kValue.f32.positive.max, kValue.f32.positive.max] },\n      { input: kValue.f32.positive.min, expected: [kValue.f32.positive.min, kValue.f32.positive.min] },\n      { input: kValue.f32.negative.min, expected: [kValue.f32.positive.max, kValue.f32.positive.max] },\n      { input: kValue.f32.negative.max, expected: [kValue.f32.positive.min, kValue.f32.positive.min] },\n\n      // 32-bit subnormals\n      { input: kValue.f32.subnormal.positive.max, expected: [0, kValue.f32.subnormal.positive.max] },\n      { input: kValue.f32.subnormal.positive.min, expected: [0, kValue.f32.subnormal.positive.min] },\n      { input: kValue.f32.subnormal.negative.min, expected: [0, kValue.f32.subnormal.positive.max] },\n      { input: kValue.f32.subnormal.negative.max, expected: [0, kValue.f32.subnormal.positive.min] },\n\n      // 64-bit subnormals\n      { input: hexToF64(0x00000000, 0x00000001), expected: [0, kValue.f32.subnormal.positive.min] },\n      { input: hexToF64(0x800fffff, 0xffffffff), expected: [0, kValue.f32.subnormal.positive.min] },\n\n      // Zero\n      { input: 0, expected: [0, 0]},\n    ]\n  )\n  .fn(t => {\n    const input = t.params.input;\n    const expected =\n      t.params.expected instanceof Array ? arrayToInterval(t.params.expected) : t.params.expected;\n\n    const got = absInterval(input);\n    t.expect(\n      objectEquals(expected, got),\n      `absInterval(${input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('atanInterval')\n  .paramsSubcasesOnly<PointToIntervalCase>(\n    // prettier-ignore\n    [\n      { input: Number.NEGATIVE_INFINITY, expected: [kValue.f32.negative.pi.half, plusOneULP(kValue.f32.negative.pi.half)] },\n      { input: hexToF32(0xbfddb3d7), expected: [kValue.f32.negative.pi.third, plusOneULP(kValue.f32.negative.pi.third)] }, // x = -√3\n      { input: -1, expected: [kValue.f32.negative.pi.quarter, plusOneULP(kValue.f32.negative.pi.quarter)] },\n      { input: hexToF32(0xbf13cd3a), expected: [kValue.f32.negative.pi.sixth, plusOneULP(kValue.f32.negative.pi.sixth)] },  // x = -1/√3\n      { input: 0, expected: [0, 0] },\n      { input: hexToF32(0x3f13cd3a), expected: [minusOneULP(kValue.f32.positive.pi.sixth), kValue.f32.positive.pi.sixth] },  // x = 1/√3\n      { input: 1, expected: [minusOneULP(kValue.f32.positive.pi.quarter), kValue.f32.positive.pi.quarter] },\n      { input: hexToF32(0x3fddb3d7), expected: [minusOneULP(kValue.f32.positive.pi.third), kValue.f32.positive.pi.third] }, // x = √3\n      { input: Number.POSITIVE_INFINITY, expected: [minusOneULP(kValue.f32.positive.pi.half), kValue.f32.positive.pi.half] },\n    ]\n  )\n  .fn(t => {\n    const error = (x: number): number => {\n      return 4096 * oneULP(x);\n    };\n\n    const input = t.params.input;\n    let expected: F32Interval;\n    if (t.params.expected instanceof Array) {\n      const [begin, end] = t.params.expected;\n      expected = arrayToInterval([begin - error(begin), end + error(end)]);\n    } else {\n      expected = t.params.expected;\n    }\n\n    const got = atanInterval(input);\n    t.expect(\n      objectEquals(expected, got),\n      `atanInterval(${input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('ceilInterval')\n  .paramsSubcasesOnly<PointToIntervalCase>(\n    // prettier-ignore\n    [\n      { input: 0, expected: [0, 0] },\n      { input: 0.1, expected: [1, 1] },\n      { input: 0.9, expected: [1, 1] },\n      { input: 1.0, expected: [1, 1] },\n      { input: 1.1, expected: [2, 2] },\n      { input: 1.9, expected: [2, 2] },\n      { input: -0.1, expected: [0, 0] },\n      { input: -0.9, expected: [0, 0] },\n      { input: -1.0, expected: [-1, -1] },\n      { input: -1.1, expected: [-1, -1] },\n      { input: -1.9, expected: [-1, -1] },\n\n      // Edge cases\n      { input: Number.POSITIVE_INFINITY, expected: [kValue.f32.positive.max, Number.POSITIVE_INFINITY] },\n      { input: Number.NEGATIVE_INFINITY, expected: [Number.NEGATIVE_INFINITY, kValue.f32.negative.min] },\n      { input: kValue.f32.positive.max, expected: [kValue.f32.positive.max, kValue.f32.positive.max] },\n      { input: kValue.f32.positive.min, expected: [1, 1] },\n      { input: kValue.f32.negative.min, expected: [kValue.f32.negative.min, kValue.f32.negative.min] },\n      { input: kValue.f32.negative.max, expected: [0, 0] },\n      { input: kValue.powTwo.to30, expected: [kValue.powTwo.to30, kValue.powTwo.to30] },\n      { input: -kValue.powTwo.to30, expected: [-kValue.powTwo.to30, -kValue.powTwo.to30] },\n\n      // 32-bit subnormals\n      { input: kValue.f32.subnormal.positive.max, expected: [0, 1] },\n      { input: kValue.f32.subnormal.positive.min, expected: [0, 1] },\n      { input: kValue.f32.subnormal.negative.min, expected: [0, 0] },\n      { input: kValue.f32.subnormal.negative.max, expected: [0, 0] },\n    ]\n  )\n  .fn(t => {\n    const input = t.params.input;\n    const expected =\n      t.params.expected instanceof Array ? arrayToInterval(t.params.expected) : t.params.expected;\n\n    const got = ceilInterval(input);\n    t.expect(\n      objectEquals(expected, got),\n      `ceilInterval(${input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('cosInterval')\n  .paramsSubcasesOnly<PointToIntervalCase>(\n    // prettier-ignore\n    [\n      // This test does not include some common cases. i.e. f(x = π/2) = 0, because the difference between true x\n      // and x as a f32 is sufficiently large, such that the high slope of f @ x causes the results to be substantially\n      // different, so instead of getting 0 you get a value on the order of 10^-8 away from 0, thus difficult to express\n      // in a human readable manner.\n      { input: Number.NEGATIVE_INFINITY, expected: [Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY] },\n      { input: kValue.f32.negative.min, expected: [Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY] },\n      { input: kValue.f32.negative.pi.whole, expected: [-1, plusOneULP(-1)] },\n      { input: kValue.f32.negative.pi.third, expected: [minusOneULP(1/2), 1/2] },\n      { input: 0, expected: [1, 1] },\n      { input: kValue.f32.positive.pi.third, expected: [minusOneULP(1/2), 1/2] },\n      { input: kValue.f32.positive.pi.whole, expected: [-1, plusOneULP(-1)] },\n      { input: kValue.f32.positive.max, expected: [Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY] },\n      { input: Number.POSITIVE_INFINITY, expected: [Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY] },\n    ]\n  )\n  .fn(t => {\n    const error = 2 ** -11;\n\n    const input = t.params.input;\n    let expected: F32Interval;\n    if (t.params.expected instanceof Array) {\n      const [begin, end] = t.params.expected;\n      expected = arrayToInterval([begin - error, end + error]);\n    } else {\n      expected = t.params.expected;\n    }\n\n    const got = cosInterval(input);\n    t.expect(\n      objectEquals(expected, got),\n      `cosInterval(${input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('expInterval')\n  .paramsSubcasesOnly<PointToIntervalCase>(\n    // prettier-ignore\n    [\n      { input: Number.NEGATIVE_INFINITY, expected: [Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY] },\n      { input: 0, expected: [1,1] },\n      { input: 1, expected: [kValue.f32.positive.e, plusOneULP(kValue.f32.positive.e)] },\n      { input: 89, expected: arrayToInterval([kValue.f32.positive.max, Number.POSITIVE_INFINITY]) },\n    ]\n  )\n  .fn(t => {\n    const error = (input: number, result: number): number => {\n      const n = 3 + 2 * Math.abs(input);\n      return n * oneULP(result);\n    };\n\n    const input = t.params.input;\n    let expected: F32Interval;\n    if (t.params.expected instanceof Array) {\n      const [begin, end] = t.params.expected;\n      expected = arrayToInterval([begin - error(input, begin), end + error(input, end)]);\n    } else {\n      expected = t.params.expected;\n    }\n\n    const got = expInterval(input);\n    t.expect(\n      objectEquals(expected, got),\n      `expInterval(${input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('exp2Interval')\n  .paramsSubcasesOnly<PointToIntervalCase>(\n    // prettier-ignore\n    [\n      { input: Number.NEGATIVE_INFINITY, expected: [Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY] },\n      { input: 0, expected: [1,1] },\n      { input: 1, expected: [2, 2] },\n      { input: 128, expected: arrayToInterval([kValue.f32.positive.max, Number.POSITIVE_INFINITY]) },\n    ]\n  )\n  .fn(t => {\n    const error = (input: number, result: number): number => {\n      const n = 3 + 2 * Math.abs(input);\n      return n * oneULP(result);\n    };\n\n    const input = t.params.input;\n    let expected: F32Interval;\n    if (t.params.expected instanceof Array) {\n      const [begin, end] = t.params.expected;\n      expected = arrayToInterval([begin - error(input, begin), end + error(input, end)]);\n    } else {\n      expected = t.params.expected;\n    }\n\n    const got = exp2Interval(input);\n    t.expect(\n      objectEquals(expected, got),\n      `exp2Interval(${input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('floorInterval')\n  .paramsSubcasesOnly<PointToIntervalCase>(\n    // prettier-ignore\n    [\n      { input: 0, expected: [0, 0] },\n      { input: 0.1, expected: [0, 0] },\n      { input: 0.9, expected: [0, 0] },\n      { input: 1.0, expected: [1, 1] },\n      { input: 1.1, expected: [1, 1] },\n      { input: 1.9, expected: [1, 1] },\n      { input: -0.1, expected: [-1, -1] },\n      { input: -0.9, expected: [-1, -1] },\n      { input: -1.0, expected: [-1, -1] },\n      { input: -1.1, expected: [-2, -2] },\n      { input: -1.9, expected: [-2, -2] },\n\n      // Edge cases\n      { input: Number.POSITIVE_INFINITY, expected: [kValue.f32.positive.max, Number.POSITIVE_INFINITY] },\n      { input: Number.NEGATIVE_INFINITY, expected: [Number.NEGATIVE_INFINITY, kValue.f32.negative.min] },\n      { input: kValue.f32.positive.max, expected: [kValue.f32.positive.max, kValue.f32.positive.max] },\n      { input: kValue.f32.positive.min, expected: [0, 0] },\n      { input: kValue.f32.negative.min, expected: [kValue.f32.negative.min, kValue.f32.negative.min] },\n      { input: kValue.f32.negative.max, expected: [-1, -1] },\n      { input: kValue.powTwo.to30, expected: [kValue.powTwo.to30, kValue.powTwo.to30] },\n      { input: -kValue.powTwo.to30, expected: [-kValue.powTwo.to30, -kValue.powTwo.to30] },\n\n      // 32-bit subnormals\n      { input: kValue.f32.subnormal.positive.max, expected: [0, 0] },\n      { input: kValue.f32.subnormal.positive.min, expected: [0, 0] },\n      { input: kValue.f32.subnormal.negative.min, expected: [-1, 0] },\n      { input: kValue.f32.subnormal.negative.max, expected: [-1, 0] },\n    ]\n  )\n  .fn(t => {\n    const input = t.params.input;\n    const expected =\n      t.params.expected instanceof Array ? arrayToInterval(t.params.expected) : t.params.expected;\n\n    const got = floorInterval(input);\n    t.expect(\n      objectEquals(expected, got),\n      `floorInterval(${input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('inverseSqrtInterval')\n  .paramsSubcasesOnly<PointToIntervalCase>(\n    // prettier-ignore\n    [\n      { input: -1, expected: arrayToInterval([Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY]) },\n      { input: 0, expected: arrayToInterval([Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY]) },\n      { input: 0.04, expected: [minusOneULP(5), plusOneULP(5)] },\n      { input: 1, expected: [1, 1] },\n      { input: 100, expected: [minusOneULP(hexToF32(0x3dcccccd)), hexToF32(0x3dcccccd)] },  // ~0.1\n      { input: kValue.f32.positive.max, expected: [hexToF32(0x1f800000), plusNULP(hexToF32(0x1f800000), 2)] },  // ~5.421...e-20, i.e. 1/√max f32\n      { input: Number.POSITIVE_INFINITY, expected: [0, plusNULP(hexToF32(0x1f800000), 2)] },\n    ]\n  )\n  .fn(t => {\n    const error = (input: number, result: number): number => {\n      return 2 * oneULP(result);\n    };\n\n    const input = t.params.input;\n    let expected: F32Interval;\n    if (t.params.expected instanceof Array) {\n      const [begin, end] = t.params.expected;\n      expected = arrayToInterval([begin - error(input, begin), end + error(input, end)]);\n    } else {\n      expected = t.params.expected;\n    }\n\n    const got = inverseSqrtInterval(input);\n    t.expect(\n      objectEquals(expected, got),\n      `inverseSqrtInterval(${input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('logInterval')\n  .paramsSubcasesOnly<PointToIntervalCase>(\n    // prettier-ignore\n    [\n      { input: 0, expected: arrayToInterval([Number.NEGATIVE_INFINITY, kValue.f32.negative.min]) },\n      { input: 1, expected: [0, 0] },\n      { input: kValue.f32.positive.e, expected: [minusOneULP(1), 1] },\n      { input: kValue.f32.positive.max, expected: [minusOneULP(hexToF32(0x42b17218)), hexToF32(0x42b17218)] },  // ~88.72...\n    ]\n  )\n  .fn(t => {\n    const error = (input: number, result: number): number => {\n      if (input >= 0.5 && input <= 2.0) {\n        return 2 ** -21;\n      }\n      return 3 * oneULP(result);\n    };\n\n    const input = t.params.input;\n    let expected: F32Interval;\n    if (t.params.expected instanceof Array) {\n      const [begin, end] = t.params.expected;\n      expected = arrayToInterval([begin - error(input, begin), end + error(input, end)]);\n    } else {\n      expected = t.params.expected;\n    }\n\n    const got = logInterval(input);\n    t.expect(\n      objectEquals(expected, got),\n      `logInterval(${input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('log2Interval')\n  .paramsSubcasesOnly<PointToIntervalCase>(\n    // prettier-ignore\n    [\n      { input: 0, expected: arrayToInterval([Number.NEGATIVE_INFINITY, kValue.f32.negative.min]) },\n      { input: 1, expected: [0, 0] },\n      { input: 2, expected: [1, 1] },\n      { input: kValue.f32.positive.max, expected: [minusOneULP(128), 128] },\n    ]\n  )\n  .fn(t => {\n    const error = (input: number, result: number): number => {\n      if (input >= 0.5 && input <= 2.0) {\n        return 2 ** -21;\n      }\n      return 3 * oneULP(result);\n    };\n\n    const input = t.params.input;\n    let expected: F32Interval;\n    if (t.params.expected instanceof Array) {\n      const [begin, end] = t.params.expected;\n      expected = arrayToInterval([begin - error(input, begin), end + error(input, end)]);\n    } else {\n      expected = t.params.expected;\n    }\n\n    const got = log2Interval(input);\n    t.expect(\n      objectEquals(expected, got),\n      `log2Interval(${input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('negationInterval')\n  .paramsSubcasesOnly<PointToIntervalCase>(\n    // prettier-ignore\n    [\n      { input: 0, expected: [0, 0] },\n      { input: 0.1, expected: [hexToF32(0xbdcccccd), plusOneULP(hexToF32(0xbdcccccd))] }, // ~-0.1\n      { input: 1.0, expected: [-1.0, -1.0] },\n      { input: 1.9, expected: [hexToF32(0xbff33334), plusOneULP(hexToF32(0xbff33334))] },  // ~-1.9\n      { input: -0.1, expected: [minusOneULP(hexToF32(0x3dcccccd)), hexToF32(0x3dcccccd)] }, // ~0.1\n      { input: -1.0, expected: [1, 1] },\n      { input: -1.9, expected: [minusOneULP(hexToF32(0x3ff33334)), hexToF32(0x3ff33334)] },  // ~1.9\n\n      // Edge cases\n      { input: Number.POSITIVE_INFINITY, expected: [Number.NEGATIVE_INFINITY, kValue.f32.negative.min] },\n      { input: Number.NEGATIVE_INFINITY, expected: [kValue.f32.positive.max, Number.POSITIVE_INFINITY] },\n      { input: kValue.f32.positive.max, expected: [kValue.f32.negative.min, kValue.f32.negative.min] },\n      { input: kValue.f32.positive.min, expected: [kValue.f32.negative.max, kValue.f32.negative.max] },\n      { input: kValue.f32.negative.min, expected: [kValue.f32.positive.max, kValue.f32.positive.max] },\n      { input: kValue.f32.negative.max, expected: [kValue.f32.positive.min, kValue.f32.positive.min] },\n\n      // 32-bit subnormals\n      { input: kValue.f32.subnormal.positive.max, expected: [kValue.f32.subnormal.negative.min, 0] },\n      { input: kValue.f32.subnormal.positive.min, expected: [kValue.f32.subnormal.negative.max, 0] },\n      { input: kValue.f32.subnormal.negative.min, expected: [0, kValue.f32.subnormal.positive.max] },\n      { input: kValue.f32.subnormal.negative.max, expected: [0, kValue.f32.subnormal.positive.min] },\n    ]\n  )\n  .fn(t => {\n    const input = t.params.input;\n    const expected =\n      t.params.expected instanceof Array ? arrayToInterval(t.params.expected) : t.params.expected;\n\n    const got = negationInterval(input);\n    t.expect(\n      objectEquals(expected, got),\n      `negationInterval(${input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('sinInterval')\n  .paramsSubcasesOnly<PointToIntervalCase>(\n    // prettier-ignore\n    [\n      // This test does not include some common cases, i.e. f(x = -π|π) = 0, because the difference between true x and x\n      // as a f32 is sufficiently large, such that the high slope of f @ x causes the results to be substantially\n      // different, so instead of getting 0 you get a value on the order of 10^-8 away from it, thus difficult to\n      // express in a human readable manner.\n      { input: Number.NEGATIVE_INFINITY, expected: [Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY] },\n      { input: kValue.f32.negative.min, expected: [Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY] },\n      { input: kValue.f32.negative.pi.half, expected: [-1, plusOneULP(-1)] },\n      { input: 0, expected: [0, 0] },\n      { input: kValue.f32.positive.pi.half, expected: [minusOneULP(1), 1] },\n      { input: kValue.f32.positive.max, expected: [Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY] },\n      { input: Number.POSITIVE_INFINITY, expected: [Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY] },\n    ]\n  )\n  .fn(t => {\n    const error = 2 ** -11;\n\n    const input = t.params.input;\n    let expected: F32Interval;\n    if (t.params.expected instanceof Array) {\n      const [begin, end] = t.params.expected;\n      expected = arrayToInterval([begin - error, end + error]);\n    } else {\n      expected = t.params.expected;\n    }\n\n    const got = sinInterval(input);\n    t.expect(\n      objectEquals(expected, got),\n      `sinInterval(${input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ninterface BinaryToIntervalCase {\n  // input is a pair of independent values, not an range, so should not be\n  // converted to a F32Interval.\n  input: [number, number];\n\n  // If expected is an Array of two values, the test should interpret them as\n  // human readable begin/end values that need to be adjusted for the error\n  // calculation specific to the function being tested.\n  // This is to facilitate writing tests in a fluent manner, i.e. being able to\n  // express a expectation as `plusOneULP(π/2)` instead of\n  // `π/2 + ULP(π/2) + 4096 * ULP(π/2 + ULP(π/2))`\n  //\n  // If expected is an F32Interval, it is to be interpreted as an exact value,\n  // with no additional processing. This is to allow for expressing specific\n  // cases with human readable values that would require effectively\n  // implementing the entire interval system under test to accommodate them in\n  // the test error calculation.\n  expected: [number, number] | F32Interval;\n}\n\ng.test('additionInterval')\n  .paramsSubcasesOnly<BinaryToIntervalCase>(\n    // prettier-ignore\n    [\n      // 32-bit normals\n      { input: [0, 0], expected: [0, 0] },\n      { input: [1, 0], expected: [1, 1] },\n      { input: [0, 1], expected: [1, 1] },\n      { input: [-1, 0], expected: [-1, -1] },\n      { input: [0, -1], expected: [-1, -1] },\n      { input: [1, 1], expected: [2, 2] },\n      { input: [1, -1], expected: [0, 0] },\n      { input: [-1, 1], expected: [0, 0] },\n      { input: [-1, -1], expected: [-2, -2] },\n\n      // 64-bit normals\n      { input: [0.1, 0], expected: [minusOneULP(hexToF32(0x3dcccccd)), hexToF32(0x3dcccccd)] },  // ~0.1\n      { input: [0, 0.1], expected: [minusOneULP(hexToF32(0x3dcccccd)), hexToF32(0x3dcccccd)] },  // ~0.1\n      { input: [-0.1, 0], expected: [hexToF32(0xbdcccccd), plusOneULP(hexToF32(0xbdcccccd))] },  // ~-0.1\n      { input: [0, -0.1], expected: [hexToF32(0xbdcccccd), plusOneULP(hexToF32(0xbdcccccd))] },  // ~-0.1\n      { input: [0.1, 0.1], expected: [minusOneULP(hexToF32(0x3e4ccccd)), hexToF32(0x3e4ccccd)] },  // ~0.2\n      { input: [0.1, -0.1], expected: [minusOneULP(hexToF32(0x3dcccccd)) - hexToF32(0x3dcccccd), hexToF32(0x3dcccccd) - minusOneULP(hexToF32(0x3dcccccd))] }, // ~0\n      { input: [-0.1, 0.1], expected: [minusOneULP(hexToF32(0x3dcccccd)) - hexToF32(0x3dcccccd), hexToF32(0x3dcccccd) - minusOneULP(hexToF32(0x3dcccccd))] }, // ~0\n      { input: [-0.1, -0.1], expected: [hexToF32(0xbe4ccccd), plusOneULP(hexToF32(0xbe4ccccd))] },  // ~-0.2\n\n      // 32-bit subnormals\n      { input: [kValue.f32.subnormal.positive.max, 0], expected: [0, kValue.f32.subnormal.positive.max] },\n      { input: [0, kValue.f32.subnormal.positive.max], expected: [0, kValue.f32.subnormal.positive.max] },\n      { input: [kValue.f32.subnormal.positive.min, 0], expected: [0, kValue.f32.subnormal.positive.min] },\n      { input: [0, kValue.f32.subnormal.positive.min], expected: [0, kValue.f32.subnormal.positive.min] },\n      { input: [kValue.f32.subnormal.negative.max, 0], expected: [kValue.f32.subnormal.negative.max, 0] },\n      { input: [0, kValue.f32.subnormal.negative.max], expected: [kValue.f32.subnormal.negative.max, 0] },\n      { input: [kValue.f32.subnormal.negative.min, 0], expected: [kValue.f32.subnormal.negative.min, 0] },\n      { input: [0, kValue.f32.subnormal.negative.min], expected: [kValue.f32.subnormal.negative.min, 0] },\n\n      // Infinities\n      { input: [0, Number.POSITIVE_INFINITY], expected: [kValue.f32.positive.max, Number.POSITIVE_INFINITY] },\n      { input: [Number.POSITIVE_INFINITY, 0], expected: [kValue.f32.positive.max, Number.POSITIVE_INFINITY] },\n      { input: [Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY], expected: [kValue.f32.positive.max, Number.POSITIVE_INFINITY] },\n      { input: [0, Number.NEGATIVE_INFINITY], expected: [Number.NEGATIVE_INFINITY, kValue.f32.negative.min] },\n      { input: [Number.NEGATIVE_INFINITY, 0], expected: [Number.NEGATIVE_INFINITY, kValue.f32.negative.min] },\n      { input: [Number.NEGATIVE_INFINITY, Number.NEGATIVE_INFINITY], expected: [Number.NEGATIVE_INFINITY, kValue.f32.negative.min] },\n      { input: [Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY], expected: [Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY] },\n      { input: [Number.POSITIVE_INFINITY, Number.NEGATIVE_INFINITY], expected: [Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY] },\n    ]\n  )\n  .fn(t => {\n    const [x, y] = t.params.input;\n\n    const expected =\n      t.params.expected instanceof Array ? arrayToInterval(t.params.expected) : t.params.expected;\n\n    const got = additionInterval(x, y);\n    t.expect(\n      objectEquals(expected, got),\n      `additionInterval(${x}, ${y}) returned ${got}. Expected ${expected}`\n    );\n  });\n\n// Note: atan2's parameters are labelled (y, x) instead of (x, y)\ng.test('atan2Interval')\n  .paramsSubcasesOnly<BinaryToIntervalCase>(\n    // prettier-ignore\n    [\n      // Not all of the common cases for each of the quadrants are iterated here, b/c π is not precisely expressible as\n      // a f32, so fractions like 5* π/6 require special constants for each value. Positive x & y are tested using\n      // values that already have constants, and then the other quadrants are spot checked.\n\n      // positive y, positive x\n      { input: [1, hexToF32(0x3fddb3d7)], expected: [minusOneULP(kValue.f32.positive.pi.sixth), kValue.f32.positive.pi.sixth] },  // x = √3\n      { input: [1, 1], expected: [minusOneULP(kValue.f32.positive.pi.quarter), kValue.f32.positive.pi.quarter] },\n      { input: [hexToF32(0x3fddb3d7), 1], expected: [minusOneULP(kValue.f32.positive.pi.third), kValue.f32.positive.pi.third] },  // y = √3\n      { input: [Number.POSITIVE_INFINITY, 1], expected: [minusOneULP(kValue.f32.positive.pi.half), kValue.f32.positive.pi.half] },\n\n      // positive y, negative x\n      { input: [1, -1], expected: [minusOneULP(kValue.f32.positive.pi.three_quarters), kValue.f32.positive.pi.three_quarters] },\n      { input: [Number.POSITIVE_INFINITY, -1], expected: [minusOneULP(kValue.f32.positive.pi.half), kValue.f32.positive.pi.half] },\n\n      // negative y, negative x\n      { input: [-1, -1], expected: [kValue.f32.negative.pi.three_quarters, plusOneULP(kValue.f32.negative.pi.three_quarters)] },\n      { input: [Number.NEGATIVE_INFINITY, -1], expected: [kValue.f32.negative.pi.half, plusOneULP(kValue.f32.negative.pi.half)] },\n\n      // negative y, positive x\n      { input: [-1, 1], expected: [kValue.f32.negative.pi.quarter, plusOneULP(kValue.f32.negative.pi.quarter)] },\n      { input: [Number.NEGATIVE_INFINITY, 1], expected: [kValue.f32.negative.pi.half, plusOneULP(kValue.f32.negative.pi.half)] },\n\n      // Discontinuity @ y = 0\n      { input: [0, 0], expected: arrayToInterval([Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY]) },\n      { input: [0, kValue.f32.subnormal.positive.max], expected: arrayToInterval([Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY]) },\n      { input: [0, kValue.f32.subnormal.negative.min], expected: arrayToInterval([Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY]) },\n      { input: [0, kValue.f32.positive.min], expected: [kValue.f32.negative.pi.whole, kValue.f32.positive.pi.whole] },\n      { input: [0, kValue.f32.negative.max], expected: [kValue.f32.negative.pi.whole, kValue.f32.positive.pi.whole] },\n      { input: [0, kValue.f32.positive.max], expected: [kValue.f32.negative.pi.whole, kValue.f32.positive.pi.whole] },\n      { input: [0, kValue.f32.negative.min], expected: [kValue.f32.negative.pi.whole, kValue.f32.positive.pi.whole] },\n      { input: [0, Number.POSITIVE_INFINITY], expected: [kValue.f32.negative.pi.whole, kValue.f32.positive.pi.whole] },\n      { input: [0, Number.NEGATIVE_INFINITY], expected: [kValue.f32.negative.pi.whole, kValue.f32.positive.pi.whole] },\n    ]\n  )\n  .fn(t => {\n    const error = (x: number): number => {\n      return 4096 * oneULP(x);\n    };\n\n    const [y, x] = t.params.input;\n    let expected: F32Interval;\n    if (t.params.expected instanceof Array) {\n      const [begin, end] = t.params.expected;\n      expected = arrayToInterval([begin - error(begin), end + error(end)]);\n    } else {\n      expected = t.params.expected;\n    }\n\n    const got = atan2Interval(y, x);\n    t.expect(\n      objectEquals(expected, got),\n      `atan2Interval(${x}, ${y}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('divisionInterval')\n  .paramsSubcasesOnly<BinaryToIntervalCase>(\n    // prettier-ignore\n    [\n      // 32-bit normals\n      { input: [0, 1], expected: [0, 0] },\n      { input: [0, -1], expected: [0, 0] },\n      { input: [1, 1], expected: [1, 1] },\n      { input: [1, -1], expected: [-1, -1] },\n      { input: [-1, 1], expected: [-1, -1] },\n      { input: [-1, -1], expected: [1, 1] },\n      { input: [4, 2], expected: [2, 2] },\n      { input: [-4, 2], expected: [-2, -2] },\n      { input: [4, -2], expected: [-2, -2] },\n      { input: [-4, -2], expected: [2, 2] },\n\n      // 64-bit normals\n      { input: [0, 0.1], expected: [0, 0] },\n      { input: [0, -0.1], expected: [0, 0] },\n      { input: [1, 0.1], expected: [minusOneULP(10), plusOneULP(10)] },\n      { input: [-1, 0.1], expected: [minusOneULP(-10), plusOneULP(-10)] },\n      { input: [1, -0.1], expected: [minusOneULP(-10), plusOneULP(-10)] },\n      { input: [-1, -0.1], expected: [minusOneULP(10), plusOneULP(10)] },\n\n      // Denominator out of range\n      { input: [1, Number.POSITIVE_INFINITY], expected: [Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY] },\n      { input: [1, Number.NEGATIVE_INFINITY], expected: [Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY] },\n      { input: [Number.NEGATIVE_INFINITY, Number.NEGATIVE_INFINITY], expected: [Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY] },\n      { input: [Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY], expected: [Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY] },\n      { input: [Number.POSITIVE_INFINITY, Number.NEGATIVE_INFINITY], expected: [Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY] },\n      { input: [1, kValue.f32.positive.max], expected: [Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY] },\n      { input: [1, kValue.f32.negative.min], expected: [Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY] },\n      { input: [1, 0], expected: [Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY] },\n      { input: [1, kValue.f32.subnormal.positive.max], expected: [Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY] },\n    ]\n  )\n  .fn(t => {\n    const error = (x: number): number => {\n      return 2.5 * oneULP(x);\n    };\n\n    const [x, y] = t.params.input;\n    let expected: F32Interval;\n    if (t.params.expected instanceof Array) {\n      const [begin, end] = t.params.expected;\n      expected = arrayToInterval([begin - error(begin), end + error(end)]);\n    } else {\n      expected = t.params.expected;\n    }\n\n    const got = divisionInterval(x, y);\n    t.expect(\n      objectEquals(expected, got),\n      `divisionInterval(${x}, ${y}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('maxInterval')\n  .paramsSubcasesOnly<BinaryToIntervalCase>(\n    // prettier-ignore\n    [\n      // 32-bit normals\n      { input: [0, 0], expected: [0, 0] },\n      { input: [1, 0], expected: [1, 1] },\n      { input: [0, 1], expected: [1, 1] },\n      { input: [-1, 0], expected: [0, 0] },\n      { input: [0, -1], expected: [0, 0] },\n      { input: [1, 1], expected: [1, 1] },\n      { input: [1, -1], expected: [1, 1] },\n      { input: [-1, 1], expected: [1, 1] },\n      { input: [-1, -1], expected: [-1, -1] },\n\n      // 64-bit normals\n      { input: [0.1, 0], expected: [minusOneULP(hexToF32(0x3dcccccd)), hexToF32(0x3dcccccd)] },  // ~0.1\n      { input: [0, 0.1], expected: [minusOneULP(hexToF32(0x3dcccccd)), hexToF32(0x3dcccccd)] },  // ~0.1\n      { input: [-0.1, 0], expected: [0, 0] },\n      { input: [0, -0.1], expected: [0, 0] },\n      { input: [0.1, 0.1], expected: [minusOneULP(hexToF32(0x3dcccccd)), hexToF32(0x3dcccccd)] },  // ~0.1\n      { input: [0.1, -0.1], expected: [minusOneULP(hexToF32(0x3dcccccd)), hexToF32(0x3dcccccd)] },  // ~0.1\n      { input: [-0.1, 0.1], expected: [minusOneULP(hexToF32(0x3dcccccd)), hexToF32(0x3dcccccd)] },  // ~0.1\n      { input: [-0.1, -0.1], expected: [hexToF32(0xbdcccccd), plusOneULP(hexToF32(0xbdcccccd))] },  // ~-0.1\n\n      // 32-bit normals\n      { input: [kValue.f32.subnormal.positive.max, 0], expected: [0, kValue.f32.subnormal.positive.max] },\n      { input: [0, kValue.f32.subnormal.positive.max], expected: [0, kValue.f32.subnormal.positive.max] },\n      { input: [kValue.f32.subnormal.positive.min, 0], expected: [0, kValue.f32.subnormal.positive.min] },\n      { input: [0, kValue.f32.subnormal.positive.min], expected: [0, kValue.f32.subnormal.positive.min] },\n      { input: [kValue.f32.subnormal.negative.max, 0], expected: [0, 0] },\n      { input: [0, kValue.f32.subnormal.negative.max], expected: [0, 0] },\n      { input: [kValue.f32.subnormal.negative.min, 0], expected: [0, 0] },\n      { input: [0, kValue.f32.subnormal.negative.min], expected: [0, 0] },\n\n      // Infinities\n      { input: [0, Number.POSITIVE_INFINITY], expected: [kValue.f32.positive.max, Number.POSITIVE_INFINITY] },\n      { input: [Number.POSITIVE_INFINITY, 0], expected: [kValue.f32.positive.max, Number.POSITIVE_INFINITY] },\n      { input: [Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY], expected: [kValue.f32.positive.max, Number.POSITIVE_INFINITY] },\n      { input: [0, Number.NEGATIVE_INFINITY], expected: [0, 0] },\n      { input: [Number.NEGATIVE_INFINITY, 0], expected: [0, 0] },\n      { input: [Number.NEGATIVE_INFINITY, Number.NEGATIVE_INFINITY], expected: [Number.NEGATIVE_INFINITY, kValue.f32.negative.min] },\n      { input: [Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY], expected: [kValue.f32.positive.max, Number.POSITIVE_INFINITY] },\n      { input: [Number.POSITIVE_INFINITY, Number.NEGATIVE_INFINITY], expected: [kValue.f32.positive.max, Number.POSITIVE_INFINITY] },\n    ]\n  )\n  .fn(t => {\n    const [x, y] = t.params.input;\n\n    const expected =\n      t.params.expected instanceof Array ? arrayToInterval(t.params.expected) : t.params.expected;\n\n    const got = maxInterval(x, y);\n    t.expect(\n      objectEquals(expected, got),\n      `maxInterval(${x}, ${y}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('minInterval')\n  .paramsSubcasesOnly<BinaryToIntervalCase>(\n    // prettier-ignore\n    [\n      // 32-bit normals\n      { input: [0, 0], expected: [0, 0] },\n      { input: [1, 0], expected: [0, 0] },\n      { input: [0, 1], expected: [0, 0] },\n      { input: [-1, 0], expected: [-1, -1] },\n      { input: [0, -1], expected: [-1, -1] },\n      { input: [1, 1], expected: [1, 1] },\n      { input: [1, -1], expected: [-1, -1] },\n      { input: [-1, 1], expected: [-1, -1] },\n      { input: [-1, -1], expected: [-1, -1] },\n\n      // 64-bit normals\n      { input: [0.1, 0], expected: [0, 0] },\n      { input: [0, 0.1], expected: [0, 0] },\n      { input: [-0.1, 0], expected: [hexToF32(0xbdcccccd), plusOneULP(hexToF32(0xbdcccccd))] },  // ~-0.1\n      { input: [0, -0.1], expected: [hexToF32(0xbdcccccd), plusOneULP(hexToF32(0xbdcccccd))] },  // ~-0.1\n      { input: [0.1, 0.1], expected: [minusOneULP(hexToF32(0x3dcccccd)), hexToF32(0x3dcccccd)] },  // ~0.1\n      { input: [0.1, -0.1], expected: [hexToF32(0xbdcccccd), plusOneULP(hexToF32(0xbdcccccd))] },  // ~-0.1\n      { input: [-0.1, 0.1], expected: [hexToF32(0xbdcccccd), plusOneULP(hexToF32(0xbdcccccd))] },  // ~-0.1\n      { input: [-0.1, -0.1], expected: [hexToF32(0xbdcccccd), plusOneULP(hexToF32(0xbdcccccd))] },  // ~-0.1\n\n      // 32-bit normals\n      { input: [kValue.f32.subnormal.positive.max, 0], expected: [0, 0] },\n      { input: [0, kValue.f32.subnormal.positive.max], expected: [0, 0] },\n      { input: [kValue.f32.subnormal.positive.min, 0], expected: [0, 0] },\n      { input: [0, kValue.f32.subnormal.positive.min], expected: [0, 0] },\n      { input: [kValue.f32.subnormal.negative.max, 0], expected: [kValue.f32.subnormal.negative.max, 0] },\n      { input: [0, kValue.f32.subnormal.negative.max], expected: [kValue.f32.subnormal.negative.max, 0] },\n      { input: [kValue.f32.subnormal.negative.min, 0], expected: [kValue.f32.subnormal.negative.min, 0] },\n      { input: [0, kValue.f32.subnormal.negative.min], expected: [kValue.f32.subnormal.negative.min, 0] },\n\n      // Infinities\n      { input: [0, Number.POSITIVE_INFINITY], expected: [0, 0] },\n      { input: [Number.POSITIVE_INFINITY, 0], expected: [0, 0] },\n      { input: [Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY], expected: [kValue.f32.positive.max, Number.POSITIVE_INFINITY] },\n      { input: [0, Number.NEGATIVE_INFINITY], expected: [Number.NEGATIVE_INFINITY, kValue.f32.negative.min] },\n      { input: [Number.NEGATIVE_INFINITY, 0], expected: [Number.NEGATIVE_INFINITY, kValue.f32.negative.min] },\n      { input: [Number.NEGATIVE_INFINITY, Number.NEGATIVE_INFINITY], expected: [Number.NEGATIVE_INFINITY, kValue.f32.negative.min] },\n      { input: [Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY], expected: [Number.NEGATIVE_INFINITY, kValue.f32.negative.min] },\n      { input: [Number.POSITIVE_INFINITY, Number.NEGATIVE_INFINITY], expected: [Number.NEGATIVE_INFINITY, kValue.f32.negative.min] },\n    ]\n  )\n  .fn(t => {\n    const [x, y] = t.params.input;\n\n    const expected =\n      t.params.expected instanceof Array ? arrayToInterval(t.params.expected) : t.params.expected;\n\n    const got = minInterval(x, y);\n    t.expect(\n      objectEquals(expected, got),\n      `minInterval(${x}, ${y}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('multiplicationInterval')\n  .paramsSubcasesOnly<BinaryToIntervalCase>(\n    // prettier-ignore\n    [\n      // 32-bit normals\n      { input: [0, 0], expected: [0, 0] },\n      { input: [1, 0], expected: [0, 0] },\n      { input: [0, 1], expected: [0, 0] },\n      { input: [-1, 0], expected: [0, 0] },\n      { input: [0, -1], expected: [0, 0] },\n      { input: [1, 1], expected: [1, 1] },\n      { input: [1, -1], expected: [-1, -1] },\n      { input: [-1, 1], expected: [-1, -1] },\n      { input: [-1, -1], expected: [1, 1] },\n      { input: [2, 1], expected: [2, 2] },\n      { input: [1, -2], expected: [-2, -2] },\n      { input: [-2, 1], expected: [-2, -2] },\n      { input: [-2, -1], expected: [2, 2] },\n      { input: [2, 2], expected: [4, 4] },\n      { input: [2, -2], expected: [-4, -4] },\n      { input: [-2, 2], expected: [-4, -4] },\n      { input: [-2, -2], expected: [4, 4] },\n\n      // 64-bit normals\n      { input: [0.1, 0], expected: [0, 0] },\n      { input: [0, 0.1], expected: [0, 0] },\n      { input: [-0.1, 0], expected: [0, 0] },\n      { input: [0, -0.1], expected: [0, 0] },\n      { input: [0.1, 0.1], expected: [minusNULP(hexToF32(0x3c23d70a), 2), plusOneULP(hexToF32(0x3c23d70a))] },  // ~0.01\n      { input: [0.1, -0.1], expected: [minusOneULP(hexToF32(0xbc23d70a)), plusNULP(hexToF32(0xbc23d70a), 2)] },  // ~-0.01\n      { input: [-0.1, 0.1], expected: [minusOneULP(hexToF32(0xbc23d70a)), plusNULP(hexToF32(0xbc23d70a), 2)] },  // ~-0.01\n      { input: [-0.1, -0.1], expected: [minusNULP(hexToF32(0x3c23d70a), 2), plusOneULP(hexToF32(0x3c23d70a))] },  // ~0.01\n\n      // Infinities\n      { input: [0, Number.POSITIVE_INFINITY], expected: [0, 0] },\n      { input: [1, Number.POSITIVE_INFINITY], expected: [kValue.f32.positive.max, Number.POSITIVE_INFINITY] },\n      { input: [-1, Number.POSITIVE_INFINITY], expected: [Number.NEGATIVE_INFINITY, kValue.f32.negative.min] },\n      { input: [Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY], expected: [kValue.f32.positive.max, Number.POSITIVE_INFINITY] },\n      { input: [0, Number.NEGATIVE_INFINITY], expected: [0, 0] },\n      { input: [1, Number.NEGATIVE_INFINITY], expected: [Number.NEGATIVE_INFINITY, kValue.f32.negative.min] },\n      { input: [-1, Number.NEGATIVE_INFINITY], expected: [kValue.f32.positive.max, Number.POSITIVE_INFINITY] },\n      { input: [Number.NEGATIVE_INFINITY, Number.NEGATIVE_INFINITY], expected: [kValue.f32.positive.max, Number.POSITIVE_INFINITY] },\n      { input: [Number.POSITIVE_INFINITY, Number.NEGATIVE_INFINITY], expected: [Number.NEGATIVE_INFINITY, kValue.f32.negative.min] },\n      { input: [Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY], expected: [Number.NEGATIVE_INFINITY, kValue.f32.negative.min] },\n\n      // Edge of f32\n      { input: [kValue.f32.positive.max, kValue.f32.positive.max], expected: [kValue.f32.positive.max, Number.POSITIVE_INFINITY] },\n      { input: [kValue.f32.negative.min, kValue.f32.negative.min], expected: [kValue.f32.positive.max, Number.POSITIVE_INFINITY] },\n      { input: [kValue.f32.positive.max, kValue.f32.negative.min], expected: [Number.NEGATIVE_INFINITY, kValue.f32.negative.min] },\n      { input: [kValue.f32.negative.min, kValue.f32.positive.max], expected: [Number.NEGATIVE_INFINITY, kValue.f32.negative.min] },\n    ]\n  )\n  .fn(t => {\n    const [x, y] = t.params.input;\n\n    const expected =\n      t.params.expected instanceof Array ? arrayToInterval(t.params.expected) : t.params.expected;\n\n    const got = multiplicationInterval(x, y);\n    t.expect(\n      objectEquals(expected, got),\n      `multiplicationInterval(${x}, ${y}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('subtractionInterval')\n  .paramsSubcasesOnly<BinaryToIntervalCase>(\n    // prettier-ignore\n    [\n      // 32-bit normals\n      { input: [0, 0], expected: [0, 0] },\n      { input: [1, 0], expected: [1, 1] },\n      { input: [0, 1], expected: [-1, -1] },\n      { input: [-1, 0], expected: [-1, -1] },\n      { input: [0, -1], expected: [1, 1] },\n      { input: [1, 1], expected: [0, 0] },\n      { input: [1, -1], expected: [2, 2] },\n      { input: [-1, 1], expected: [-2, -2] },\n      { input: [-1, -1], expected: [0, 0] },\n\n      // 64-bit normals\n      { input: [0.1, 0], expected: [minusOneULP(hexToF32(0x3dcccccd)), hexToF32(0x3dcccccd)] },  // ~0.1\n      { input: [0, 0.1], expected: [hexToF32(0xbdcccccd), plusOneULP(hexToF32(0xbdcccccd))] },  // ~-0.1\n      { input: [-0.1, 0], expected: [hexToF32(0xbdcccccd), plusOneULP(hexToF32(0xbdcccccd))] },  // ~-0.1\n      { input: [0, -0.1], expected: [minusOneULP(hexToF32(0x3dcccccd)), hexToF32(0x3dcccccd)] },  // ~0.1\n      { input: [0.1, 0.1], expected: [minusOneULP(hexToF32(0x3dcccccd)) - hexToF32(0x3dcccccd), hexToF32(0x3dcccccd) - minusOneULP(hexToF32(0x3dcccccd))] },  // ~0.0\n      { input: [0.1, -0.1], expected: [minusOneULP(hexToF32(0x3e4ccccd)), hexToF32(0x3e4ccccd)] }, // ~0.2\n      { input: [-0.1, 0.1], expected: [hexToF32(0xbe4ccccd), plusOneULP(hexToF32(0xbe4ccccd))] },  // ~-0.2\n      { input: [-0.1, -0.1], expected: [minusOneULP(hexToF32(0x3dcccccd)) - hexToF32(0x3dcccccd), hexToF32(0x3dcccccd) - minusOneULP(hexToF32(0x3dcccccd))] }, // ~0\n\n      // // 32-bit normals\n      { input: [kValue.f32.subnormal.positive.max, 0], expected: [0, kValue.f32.subnormal.positive.max] },\n      { input: [0, kValue.f32.subnormal.positive.max], expected: [kValue.f32.subnormal.negative.min, 0] },\n      { input: [kValue.f32.subnormal.positive.min, 0], expected: [0, kValue.f32.subnormal.positive.min] },\n      { input: [0, kValue.f32.subnormal.positive.min], expected: [kValue.f32.subnormal.negative.max, 0] },\n      { input: [kValue.f32.subnormal.negative.max, 0], expected: [kValue.f32.subnormal.negative.max, 0] },\n      { input: [0, kValue.f32.subnormal.negative.max], expected: [0, kValue.f32.subnormal.positive.min] },\n      { input: [kValue.f32.subnormal.negative.min, 0], expected: [kValue.f32.subnormal.negative.min, 0] },\n      { input: [0, kValue.f32.subnormal.negative.min], expected: [0, kValue.f32.subnormal.positive.max] },\n\n      // Infinities\n      { input: [0, Number.POSITIVE_INFINITY], expected: [Number.NEGATIVE_INFINITY, kValue.f32.negative.min] },\n      { input: [Number.POSITIVE_INFINITY, 0], expected: [kValue.f32.positive.max, Number.POSITIVE_INFINITY] },\n      { input: [Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY], expected: [Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY] },\n      { input: [0, Number.NEGATIVE_INFINITY], expected: [kValue.f32.positive.max, Number.POSITIVE_INFINITY] },\n      { input: [Number.NEGATIVE_INFINITY, 0], expected: [Number.NEGATIVE_INFINITY, kValue.f32.negative.min] },\n      { input: [Number.NEGATIVE_INFINITY, Number.NEGATIVE_INFINITY], expected: [Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY] },\n      { input: [Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY], expected: [Number.NEGATIVE_INFINITY, kValue.f32.negative.min] },\n      { input: [Number.POSITIVE_INFINITY, Number.NEGATIVE_INFINITY], expected: [kValue.f32.positive.max, Number.POSITIVE_INFINITY] },\n    ]\n  )\n  .fn(t => {\n    const [x, y] = t.params.input;\n\n    const expected =\n      t.params.expected instanceof Array ? arrayToInterval(t.params.expected) : t.params.expected;\n\n    const got = subtractionInterval(x, y);\n    t.expect(\n      objectEquals(expected, got),\n      `subtractionInterval(${x}, ${y}) returned ${got}. Expected ${expected}`\n    );\n  });\n"],"file":"f32_interval.spec.js"}