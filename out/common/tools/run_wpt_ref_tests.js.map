{"version":3,"file":"run_wpt_ref_tests.js","names":["fs","path","chromium","firefox","webkit","PNG","verbose","kRefTestsBaseURL","kRefTestsPath","kScreenshotPath","kRefLinkRE","kRefWaitClassRE","kFuzzy","printUsage","console","log","getRefTestNames","refTestPath","readdirSync","filter","name","endsWith","getRegexMatchCapture","re","content","m","exec","readHTMLFile","filename","readFileSync","encoding","refLink","refWait","test","fuzzy","getBrowserInterface","executablePath","lc","toLowerCase","includes","launch","headless","args","Error","readPng","data","sync","read","writePng","width","height","png","colorType","i","byteLength","buffer","write","writeFileSync","parseFuzzy","maxDifference","totalPixels","parts","split","length","ranges","map","part","range","replace","v","parseInt","compareImages","filename1","filename2","diffName","img1","img2","error","diffData","Buffer","alloc","diffPixels","Uint32Array","kRed","kWhite","numDifferent","y","x","offset","bad","c","off","v0","v1","diff","Math","abs","inRange","same","exists","accessSync","e","runPageAndTakeScreenshot","page","url","screenshotName","goto","waitForLoadState","waitForFunction","wptRefTestPageReady","timeout","evaluate","wptRefTestGetTimeout","screenshot","main","process","argv","slice","refTestName","testNames","mkdirSync","recursive","browser","context","newContext","newPage","on","msg","lineNumber","columnNumber","location","values","Promise","all","a","jsonValue","addInitScript","results","testName","join","testURL","refURL","refFileInfo","testScreenshotName","refScreenshotName","timeoutTest","push","timeoutRef","pass","close","catch"],"sources":["../../../src/common/tools/run_wpt_ref_tests.ts"],"sourcesContent":["import * as fs from 'fs';\nimport * as path from 'path';\n\nimport { chromium, firefox, webkit, Page } from 'playwright-core';\nimport { PNG } from 'pngjs';\n\ndeclare function wptRefTestPageReady(): boolean;\ndeclare function wptRefTestGetTimeout(): boolean;\n\nconst verbose = false;\nconst kRefTestsBaseURL = 'http://localhost:8080/out/webgpu/web_platform/reftests';\nconst kRefTestsPath = 'src/webgpu/web_platform/reftests';\nconst kScreenshotPath = 'out-wpt-reftest-screenshots';\n\n// note: technically we should use an HTML parser to find this to deal with whitespace\n// attribute order, quotes, entities, etc but since we control the test source we can just\n// make sure they match\nconst kRefLinkRE = /<link\\s+rel=\"match\"\\s+href=\"(.*?)\"/;\nconst kRefWaitClassRE = /class=\"reftest-wait\"/;\nconst kFuzzy = /<meta\\s+name=\"?fuzzy\"?\\s+content=\"(.*?)\">/;\n\nfunction printUsage() {\n  console.log(`\nrun_wpt_ref_tests path-to-browser-executable [ref-test-name]\n\nwhere ref-test-name is just a simple check for the test including the given string.\nIf not passed all ref tests are run\n\nMacOS Chrome Example:\n  node tools/run_wpt_ref_tests /Applications/Google\\\\ Chrome\\\\ Canary.app/Contents/MacOS/Google\\\\ Chrome\\\\ Canary\n\n`);\n}\n\n// Get all of filenames that end with '.html'\nfunction getRefTestNames(refTestPath: string) {\n  return fs.readdirSync(refTestPath).filter(name => name.endsWith('.html'));\n}\n\n// Given a regex with one capture, return it or the empty string if no match.\nfunction getRegexMatchCapture(re: RegExp, content: string) {\n  const m = re.exec(content);\n  return m ? m[1] : '';\n}\n\ntype FileInfo = {\n  content: string;\n  refLink: string;\n  refWait: boolean;\n  fuzzy: string;\n};\n\nfunction readHTMLFile(filename: string): FileInfo {\n  const content = fs.readFileSync(filename, { encoding: 'utf8' });\n  return {\n    content,\n    refLink: getRegexMatchCapture(kRefLinkRE, content),\n    refWait: kRefWaitClassRE.test(content),\n    fuzzy: getRegexMatchCapture(kFuzzy, content),\n  };\n}\n\n// Note: If possible, rather then start adding command line options to this tool,\n// see if you can just make it work based off the path.\nfunction getBrowserInterface(executablePath: string) {\n  const lc = executablePath.toLowerCase();\n  if (lc.includes('chrom')) {\n    return chromium.launch({\n      executablePath,\n      headless: false,\n      args: ['--enable-unsafe-webgpu'],\n    });\n  } else if (lc.includes('firefox')) {\n    return firefox.launch({\n      executablePath,\n      headless: false,\n    });\n  } else if (lc.includes('safari') || lc.includes('webkit')) {\n    return webkit.launch({\n      executablePath,\n      headless: false,\n    });\n  } else {\n    throw new Error(`could not guess browser from executable path: ${executablePath}`);\n  }\n}\n\nfunction readPng(filename: string) {\n  const data = fs.readFileSync(filename);\n  return PNG.sync.read(data);\n}\n\nfunction writePng(filename: string, width: number, height: number, data: Buffer) {\n  const png = new PNG({ colorType: 6, width, height });\n  for (let i = 0; i < data.byteLength; ++i) {\n    png.data[i] = data[i];\n  }\n  const buffer = PNG.sync.write(png);\n  fs.writeFileSync(filename, buffer);\n}\n\n// Parses a fuzzy spec as defined here\n// https://web-platform-tests.org/writing-tests/reftests.html#fuzzy-matching\n// Note: This is not robust but the tests will eventually be run in the real wpt.\nfunction parseFuzzy(fuzzy: string) {\n  if (!fuzzy) {\n    return { maxDifference: [0, 0], totalPixels: [0, 0] };\n  } else {\n    const parts = fuzzy.split(';');\n    if (parts.length !== 2) {\n      throw Error(`unhandled fuzzy format: ${fuzzy}`);\n    }\n    const ranges = parts.map(part => {\n      const range = part\n        .replace(/[a-zA-Z=]/g, '')\n        .split('-')\n        .map(v => parseInt(v));\n      return range.length === 1 ? [0, range[0]] : range;\n    });\n    return {\n      maxDifference: ranges[0],\n      totalPixels: ranges[1],\n    };\n  }\n}\n\n// Compares two images using the algorithm described in the web platform tests\n// https://web-platform-tests.org/writing-tests/reftests.html#fuzzy-matching\n// If they are different will write out a diff mask.\nasync function compareImages(\n  filename1: string,\n  filename2: string,\n  fuzzy: string,\n  diffName: string\n) {\n  const img1 = readPng(filename1);\n  const img2 = readPng(filename2);\n  const { width, height } = img1;\n  if (img2.width !== width || img2.height !== height) {\n    console.error('images are not the same size:', filename1, filename2);\n    return;\n  }\n\n  const { maxDifference, totalPixels } = parseFuzzy(fuzzy);\n\n  const diffData = Buffer.alloc(width * height * 4);\n  const diffPixels = new Uint32Array(diffData.buffer);\n  const kRed = 0xff0000ff;\n  const kWhite = 0xffffffff;\n\n  let numDifferent = 0;\n  for (let y = 0; y < height; ++y) {\n    for (let x = 0; x < width; ++x) {\n      const offset = y * width + x;\n      let bad = false;\n      for (let c = 0; c < 4 && !bad; ++c) {\n        const off = offset * 4 + c;\n        const v0 = img1.data[off];\n        const v1 = img2.data[off];\n        const diff = Math.abs(v0 - v1);\n        const inRange = diff >= maxDifference[0] && diff <= maxDifference[1];\n        bad = diff > 0 && !inRange;\n      }\n      numDifferent += bad ? 1 : 0;\n      diffPixels[offset] = bad ? kRed : kWhite;\n    }\n  }\n\n  const same = numDifferent >= totalPixels[0] && numDifferent <= totalPixels[1];\n  if (!same) {\n    writePng(diffName, width, height, diffData);\n    console.error(\n      `FAIL: too many differences in: ${filename1} vs ${filename2}\n       ${numDifferent} differences, expected: ${totalPixels[0]}-${totalPixels[1]} with range: ${maxDifference[0]}-${maxDifference[1]}\n       wrote difference to: ${diffName};\n      `\n    );\n  } else {\n    console.log(`PASS`);\n  }\n  return same;\n}\n\nfunction exists(filename: string) {\n  try {\n    fs.accessSync(filename);\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nasync function runPageAndTakeScreenshot(\n  page: Page,\n  url: string,\n  refWait: boolean,\n  screenshotName: string\n) {\n  console.log('  loading:', url);\n  await page.goto(url);\n  await page.waitForLoadState('domcontentloaded');\n  if (refWait) {\n    await page.waitForFunction(() => wptRefTestPageReady());\n    const timeout = await page.evaluate(() => wptRefTestGetTimeout());\n    if (timeout) {\n      return true;\n    }\n  }\n  await page.screenshot({ path: screenshotName });\n  return false;\n}\n\nasync function main() {\n  const args = process.argv.slice(2);\n  if (args.length < 1 || args.length > 2) {\n    printUsage();\n    return;\n  }\n\n  const [executablePath, refTestName] = args;\n\n  if (!exists(executablePath)) {\n    console.error(executablePath, 'does not exist');\n    return;\n  }\n\n  const testNames = getRefTestNames(kRefTestsPath).filter(name =>\n    refTestName ? name.includes(refTestName) : true\n  );\n\n  if (!exists(kScreenshotPath)) {\n    fs.mkdirSync(kScreenshotPath, { recursive: true });\n  }\n\n  if (testNames.length === 0) {\n    console.error(`no tests include \"${refTestName}\"`);\n    return;\n  }\n\n  const browser = await getBrowserInterface(executablePath);\n  const context = await browser.newContext();\n  const page = await context.newPage();\n\n  if (verbose) {\n    page.on('console', async msg => {\n      const { url, lineNumber, columnNumber } = msg.location();\n      const values = await Promise.all(msg.args().map(a => a.jsonValue()));\n      console.log(`${url}:${lineNumber}:${columnNumber}:`, ...values);\n    });\n  }\n\n  await page.addInitScript({\n    content: `\n    (() => {\n      let timeout = false;\n      setTimeout(() => timeout = true, 5000);\n\n      window.wptRefTestPageReady = function() {\n        return timeout || !document.documentElement.classList.contains('reftest-wait');\n      };\n\n      window.wptRefTestGetTimeout = function() {\n        return timeout;\n      };\n    })();\n    `,\n  });\n\n  const results = [];\n  for (const testName of testNames) {\n    console.log('processing:', testName);\n    const { refLink, refWait, fuzzy } = readHTMLFile(path.join(kRefTestsPath, testName));\n    if (!refLink) {\n      throw new Error(`could not find ref link in: ${testName}`);\n    }\n    const testURL = `${kRefTestsBaseURL}/${testName}`;\n    const refURL = `${kRefTestsBaseURL}/${refLink}`;\n\n    // Technically this is not correct but it fits the existing tests.\n    // It assumes refLink is relative to the refTestsPath but it's actually\n    // supposed to be relative to the test. It might also be an absolute\n    // path. Neither of those cases exist at the time of writing this.\n    const refFileInfo = readHTMLFile(path.join(kRefTestsPath, refLink));\n    const testScreenshotName = path.join(kScreenshotPath, `${testName}-actual.png`);\n    const refScreenshotName = path.join(kScreenshotPath, `${testName}-expected.png`);\n    const diffName = path.join(kScreenshotPath, `${testName}-diff.png`);\n\n    const timeoutTest = await runPageAndTakeScreenshot(page, testURL, refWait, testScreenshotName);\n    if (timeoutTest) {\n      console.log('TIMEOUT');\n      results.push(`[ TIMEOUT ] ${testName}`);\n      continue;\n    }\n\n    const timeoutRef = await runPageAndTakeScreenshot(\n      page,\n      refURL,\n      refFileInfo.refWait,\n      refScreenshotName\n    );\n    if (timeoutRef) {\n      console.log('TIMEOUT');\n      results.push(`[ TIMEOUT ] ${refLink}`);\n      continue;\n    }\n\n    const pass = await compareImages(testScreenshotName, refScreenshotName, fuzzy, diffName);\n    results.push(`[ ${pass ? 'PASS   ' : 'FAILURE'} ] ${testName}`);\n  }\n\n  console.log(`----results----\\n${results.join('\\n')}`);\n\n  await page.close();\n  await context.close();\n  console.log('-- [ done: waiting for browser to close ] --');\n  await browser.close();\n}\n\nmain().catch(e => {\n  throw e;\n});\n"],"mappings":"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"}