{"version":3,"file":"server.js","names":["fs","http","dataCache","DefaultTestFileLoader","prettyPrintLog","Logger","parseQuery","Colors","setGPUProvider","sys","usage","rc","console","log","type","exit","existsSync","enabled","verbose","gpuProviderModule","undefined","dataPath","gpuProviderFlags","i","args","length","a","startsWith","modulePath","require","push","create","setStore","load","path","Promise","resolve","reject","readFile","err","data","message","setDebugLogger","globalDebugMode","testcases","allWebGPUTestcases","webgpuQuery","loader","map","Map","testcase","loadCases","name","query","toString","set","runTestcase","expectations","rec","res","record","run","server","createServer","request","response","url","end","runPrefix","terminatePrefix","substr","get","result","logs","join","status","statusCode","JSON","stringify","close","listen","address","port","catch","ex","error","stack"],"sources":["../../../src/common/runtime/server.ts"],"sourcesContent":["/* eslint no-console: \"off\" */\n\nimport * as fs from 'fs';\nimport * as http from 'http';\nimport { AddressInfo } from 'net';\n\nimport { dataCache } from '../framework/data_cache.js';\nimport { DefaultTestFileLoader } from '../internal/file_loader.js';\nimport { prettyPrintLog } from '../internal/logging/log_message.js';\nimport { Logger } from '../internal/logging/logger.js';\nimport { LiveTestCaseResult } from '../internal/logging/result.js';\nimport { parseQuery } from '../internal/query/parseQuery.js';\nimport { TestQueryWithExpectation } from '../internal/query/query.js';\nimport { TestTreeLeaf } from '../internal/tree.js';\nimport { Colors } from '../util/colors.js';\nimport { setGPUProvider } from '../util/navigator_gpu.js';\n\nimport sys from './helper/sys.js';\n\nfunction usage(rc: number): never {\n  console.log('Usage:');\n  console.log(`  tools/run_${sys.type} [OPTIONS...]`);\n  console.log('Options:');\n  console.log('  --colors             Enable ANSI colors in output.');\n  console.log('  --data               Path to the data cache directory.');\n  console.log('  --verbose            Print result/log of every test as it runs.');\n  console.log('  --gpu-provider       Path to node module that provides the GPU implementation.');\n  console.log('  --gpu-provider-flag  Flag to set on the gpu-provider as <flag>=<value>');\n  console.log(``);\n  console.log(`Provides an HTTP server used for running tests via an HTTP RPC interface`);\n  console.log(`To run a test, perform an HTTP GET or POST at the URL:`);\n  console.log(`  http://localhost:port/run?<test-name>`);\n  console.log(`To shutdown the server perform an HTTP GET or POST at the URL:`);\n  console.log(`  http://localhost:port/terminate`);\n  return sys.exit(rc);\n}\n\ninterface RunResult {\n  status: string;\n  message: string;\n}\n\ninterface GPUProviderModule {\n  create(flags: string[]): GPU;\n}\n\nif (!sys.existsSync('src/common/runtime/cmdline.ts')) {\n  console.log('Must be run from repository root');\n  usage(1);\n}\n\nColors.enabled = false;\n\nlet verbose = false;\nlet gpuProviderModule: GPUProviderModule | undefined = undefined;\nlet dataPath: string | undefined = undefined;\n\nconst gpuProviderFlags: string[] = [];\nfor (let i = 0; i < sys.args.length; ++i) {\n  const a = sys.args[i];\n  if (a.startsWith('-')) {\n    if (a === '--colors') {\n      Colors.enabled = true;\n    } else if (a === '--data') {\n      dataPath = sys.args[++i];\n    } else if (a === '--gpu-provider') {\n      const modulePath = sys.args[++i];\n      gpuProviderModule = require(modulePath);\n    } else if (a === '--gpu-provider-flag') {\n      gpuProviderFlags.push(sys.args[++i]);\n    } else if (a === '--help') {\n      usage(1);\n    } else if (a === '--verbose') {\n      verbose = true;\n    } else {\n      console.log(`unrecognised flag: ${a}`);\n    }\n  }\n}\n\nif (gpuProviderModule) {\n  setGPUProvider(() => gpuProviderModule!.create(gpuProviderFlags));\n}\n\nif (dataPath !== undefined) {\n  dataCache.setStore({\n    load: (path: string) => {\n      return new Promise<string>((resolve, reject) => {\n        fs.readFile(`${dataPath}/${path}`, 'utf8', (err, data) => {\n          if (err !== null) {\n            reject(err.message);\n          } else {\n            resolve(data);\n          }\n        });\n      });\n    },\n  });\n}\nif (verbose) {\n  dataCache.setDebugLogger(console.log);\n}\n\n(async () => {\n  Logger.globalDebugMode = verbose;\n  const log = new Logger();\n  const testcases = allWebGPUTestcases();\n\n  async function allWebGPUTestcases() {\n    const webgpuQuery = parseQuery('webgpu:*');\n    const loader = new DefaultTestFileLoader();\n    const map = new Map<string, TestTreeLeaf>();\n    for (const testcase of await loader.loadCases(webgpuQuery)) {\n      const name = testcase.query.toString();\n      map.set(name, testcase);\n    }\n    return map;\n  }\n\n  async function runTestcase(\n    testcase: TestTreeLeaf,\n    expectations: TestQueryWithExpectation[] = []\n  ): Promise<LiveTestCaseResult> {\n    const name = testcase.query.toString();\n    const [rec, res] = log.record(name);\n    await testcase.run(rec, expectations);\n    return res;\n  }\n\n  const server = http.createServer(\n    async (request: http.IncomingMessage, response: http.ServerResponse) => {\n      if (request.url === undefined) {\n        response.end('invalid url');\n        return;\n      }\n\n      const runPrefix = '/run?';\n      const terminatePrefix = '/terminate';\n\n      if (request.url.startsWith(runPrefix)) {\n        const name = request.url.substr(runPrefix.length);\n        try {\n          const testcase = (await testcases).get(name);\n          if (testcase) {\n            const result = await runTestcase(testcase);\n            let message = '';\n            if (result.logs !== undefined) {\n              message = result.logs.map(log => prettyPrintLog(log)).join('\\n');\n            }\n            const status = result.status;\n            const res: RunResult = { status, message };\n            response.statusCode = 200;\n            response.end(JSON.stringify(res));\n          } else {\n            response.statusCode = 404;\n            response.end(`test case '${name}' not found`);\n          }\n        } catch (err) {\n          response.statusCode = 500;\n          response.end(`run failed with error: ${err}`);\n        }\n      } else if (request.url.startsWith(terminatePrefix)) {\n        server.close();\n        sys.exit(1);\n      } else {\n        response.statusCode = 404;\n        response.end('unhandled url request');\n      }\n    }\n  );\n\n  server.listen(0, () => {\n    const address = server.address() as AddressInfo;\n    console.log(`Server listening at [[${address.port}]]`);\n  });\n})().catch(ex => {\n  console.error(ex.stack ?? ex.toString());\n  sys.exit(1);\n});\n"],"mappings":"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"}